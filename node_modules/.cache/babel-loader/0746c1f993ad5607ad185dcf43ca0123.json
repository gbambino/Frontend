{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{useWeb3React}from'@web3-react/core';import{getPredictionsContract}from'utils/contractHelpers';var useIsRefundable=function useIsRefundable(epoch){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRefundable=_useState2[0],setIsRefundable=_useState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;useEffect(function(){var fetchRefundableStatus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var predictionsContract,canClaim,refundable;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:predictionsContract=getPredictionsContract();_context.next=3;return predictionsContract.claimable(epoch,account);case 3:canClaim=_context.sent;if(!canClaim){_context.next=11;break;}_context.next=7;return predictionsContract.refundable(epoch,account);case 7:refundable=_context.sent;setIsRefundable(refundable);_context.next=12;break;case 11:setIsRefundable(false);case 12:case\"end\":return _context.stop();}}},_callee);}));return function fetchRefundableStatus(){return _ref.apply(this,arguments);};}();if(account){fetchRefundableStatus();}},[account,epoch,setIsRefundable]);return{isRefundable:isRefundable,setIsRefundable:setIsRefundable};};export default useIsRefundable;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/hooks/useIsRefundable.ts"],"names":["useEffect","useState","useWeb3React","getPredictionsContract","useIsRefundable","epoch","isRefundable","setIsRefundable","account","fetchRefundableStatus","predictionsContract","claimable","canClaim","refundable"],"mappings":"6dAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,sBAAT,KAAuC,uBAAvC,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAmB,CACzC,cAAwCJ,QAAQ,CAAC,KAAD,CAAhD,wCAAOK,YAAP,eAAqBC,eAArB,eACA,kBAAoBL,YAAY,EAAhC,CAAQM,OAAR,eAAQA,OAAR,CAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,qBAAqB,0FAAG,+KACtBC,mBADsB,CACAP,sBAAsB,EADtB,uBAELO,CAAAA,mBAAmB,CAACC,SAApB,CAA8BN,KAA9B,CAAqCG,OAArC,CAFK,QAEtBI,QAFsB,mBAIxBA,QAJwB,gDAKDF,CAAAA,mBAAmB,CAACG,UAApB,CAA+BR,KAA/B,CAAsCG,OAAtC,CALC,QAKpBK,UALoB,eAM1BN,eAAe,CAACM,UAAD,CAAf,CAN0B,+BAQ1BN,eAAe,CAAC,KAAD,CAAf,CAR0B,uDAAH,kBAArBE,CAAAA,qBAAqB,0CAA3B,CAYA,GAAID,OAAJ,CAAa,CACXC,qBAAqB,GACtB,CACF,CAhBQ,CAgBN,CAACD,OAAD,CAAUH,KAAV,CAAiBE,eAAjB,CAhBM,CAAT,CAkBA,MAAO,CAAED,YAAY,CAAZA,YAAF,CAAgBC,eAAe,CAAfA,eAAhB,CAAP,CACD,CAvBD,CAyBA,cAAeH,CAAAA,eAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getPredictionsContract } from 'utils/contractHelpers'\n\nconst useIsRefundable = (epoch: number) => {\n  const [isRefundable, setIsRefundable] = useState(false)\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchRefundableStatus = async () => {\n      const predictionsContract = getPredictionsContract()\n      const canClaim = await predictionsContract.claimable(epoch, account)\n\n      if (canClaim) {\n        const refundable = await predictionsContract.refundable(epoch, account)\n        setIsRefundable(refundable)\n      } else {\n        setIsRefundable(false)\n      }\n    }\n\n    if (account) {\n      fetchRefundableStatus()\n    }\n  }, [account, epoch, setIsRefundable])\n\n  return { isRefundable, setIsRefundable }\n}\n\nexport default useIsRefundable\n"]},"metadata":{},"sourceType":"module"}