{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{CheckmarkCircleIcon,Tag,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{formatBnbv2}from'../../helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StyledEnteredTag=styled(Tag).attrs({variant:'secondary',startIcon:/*#__PURE__*/_jsx(CheckmarkCircleIcon,{width:\"18px\"})})(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-weight: bold;\\n  text-transform: uppercase;\\n\"])));var EnteredTag=function EnteredTag(_ref){var amount=_ref.amount;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTooltip=useTooltip(/*#__PURE__*/_jsx(\"div\",{style:{whiteSpace:'nowrap'},children:\"\".concat(formatBnbv2(amount),\" BNB\")}),{placement:'bottom'}),targetRef=_useTooltip.targetRef,tooltipVisible=_useTooltip.tooltipVisible,tooltip=_useTooltip.tooltip;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{ref:targetRef,children:[/*#__PURE__*/_jsx(StyledEnteredTag,{children:t('Entered')}),' ']}),' ',tooltipVisible&&tooltip]});};export default EnteredTag;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/RoundCard/EnteredTag.tsx"],"names":["React","styled","CheckmarkCircleIcon","Tag","useTooltip","useTranslation","formatBnbv2","StyledEnteredTag","attrs","variant","startIcon","EnteredTag","amount","t","whiteSpace","placement","targetRef","tooltipVisible","tooltip"],"mappings":"oMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,mBAAT,CAA8BC,GAA9B,CAAmCC,UAAnC,KAAqD,oBAArD,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,WAAT,KAA4B,eAA5B,C,6IAMA,GAAMC,CAAAA,gBAAgB,CAAGN,MAAM,CAACE,GAAD,CAAN,CAAYK,KAAZ,CAAkB,CACzCC,OAAO,CAAE,WADgC,CAEzCC,SAAS,cAAE,KAAC,mBAAD,EAAqB,KAAK,CAAC,MAA3B,EAF8B,CAAlB,CAAH,uHAAtB,CAQA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CAC5D,oBAAcP,cAAc,EAA5B,CAAQQ,CAAR,iBAAQA,CAAR,CACA,gBAA+CT,UAAU,cACvD,YAAK,KAAK,CAAE,CAAEU,UAAU,CAAE,QAAd,CAAZ,oBAA0CR,WAAW,CAACM,MAAD,CAArD,UADuD,CAEvD,CAAEG,SAAS,CAAE,QAAb,CAFuD,CAAzD,CAAQC,SAAR,aAAQA,SAAR,CAAmBC,cAAnB,aAAmBA,cAAnB,CAAmCC,OAAnC,aAAmCA,OAAnC,CAKA,mBACE,wCACE,cAAM,GAAG,CAAEF,SAAX,wBACE,KAAC,gBAAD,WAAmBH,CAAC,CAAC,SAAD,CAApB,EADF,CACsD,GADtD,GADF,CAGU,GAHV,CAIGI,cAAc,EAAIC,OAJrB,GADF,CAQD,CAfD,CAiBA,cAAeP,CAAAA,UAAf","sourcesContent":["import React from 'react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { CheckmarkCircleIcon, Tag, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatBnbv2 } from '../../helpers'\n\ninterface EnteredTagProps {\n  amount?: ethers.BigNumber\n}\n\nconst StyledEnteredTag = styled(Tag).attrs({\n  variant: 'secondary',\n  startIcon: <CheckmarkCircleIcon width=\"18px\" />,\n})`\n  font-weight: bold;\n  text-transform: uppercase;\n`\n\nconst EnteredTag: React.FC<EnteredTagProps> = ({ amount }) => {\n  const { t } = useTranslation()\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\n    <div style={{ whiteSpace: 'nowrap' }}>{`${formatBnbv2(amount)} BNB`}</div>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <>\n      <span ref={targetRef}>\n        <StyledEnteredTag>{t('Entered')}</StyledEnteredTag>{' '}\n      </span>{' '}\n      {tooltipVisible && tooltip}\n    </>\n  )\n}\n\nexport default EnteredTag\n"]},"metadata":{},"sourceType":"module"}