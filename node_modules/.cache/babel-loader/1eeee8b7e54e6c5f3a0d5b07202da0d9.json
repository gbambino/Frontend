{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useCallback}from'react';import styled from'styled-components';import{Heading,Card,CardBody,Button}from'@pancakeswap/uikit';import{harvestFarm}from'utils/calls';import{useWeb3React}from'@web3-react/core';import{useTranslation}from'contexts/Localization';import useFarmsWithBalance from'views/Home/hooks/useFarmsWithBalance';import{useMasterchef}from'hooks/useContract';import useToast from'hooks/useToast';import UnlockButton from'components/UnlockButton';import CakeHarvestBalance from'./CakeHarvestBalance';import CakeWalletBalance from'./CakeWalletBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFarmStakingCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-image: url('/images/emblem.png');\\n  background-repeat: no-repeat;\\n  background-position: right center;\\n  min-height: 376px;\\n  background-size:80% 100%;\\n\"])));var Block=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var CardImage=styled.img(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var Label=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 14px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.textSubtle;});var Actions=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n\"])));var FarmedStakingCard=function FarmedStakingCard(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useToast=useToast(),toastError=_useToast.toastError;var farmsWithBalance=useFarmsWithBalance();var masterChefContract=useMasterchef();var balancesWithValue=farmsWithBalance.filter(function(balanceType){return balanceType.balance.gt(0);});var harvestAllFarms=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _iterator,_step,farmWithBalance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);// eslint-disable-next-line no-restricted-syntax\n_iterator=_createForOfIteratorHelper(balancesWithValue);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=16;break;}farmWithBalance=_step.value;_context.prev=6;_context.next=9;return harvestFarm(masterChefContract,farmWithBalance.pid);case 9:_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](6);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));case 14:_context.next=4;break;case 16:_context.next=21;break;case 18:_context.prev=18;_context.t1=_context[\"catch\"](2);_iterator.e(_context.t1);case 21:_context.prev=21;_iterator.f();return _context.finish(21);case 24:setPendingTx(false);case 25:case\"end\":return _context.stop();}}},_callee,null,[[2,18,21,24],[6,11]]);})),[balancesWithValue,masterChefContract,toastError,t]);return/*#__PURE__*/_jsx(StyledFarmStakingCard,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{scale:\"xl\",mb:\"24px\",children:t('Farms & Staking')}),/*#__PURE__*/_jsx(CardImage,{src:\"/images/pixel/tocoCircle.png\",alt:\"cake logo\",width:64,height:64}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsxs(Label,{children:[t('TOCO to Harvest'),\":\"]}),/*#__PURE__*/_jsx(CakeHarvestBalance,{farmsWithBalance:balancesWithValue})]}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsxs(Label,{children:[t('TOCO in Wallet'),\":\"]}),/*#__PURE__*/_jsx(CakeWalletBalance,{})]}),/*#__PURE__*/_jsx(Actions,{children:account?/*#__PURE__*/_jsx(Button,{id:\"harvest-all\",disabled:balancesWithValue.length<=0||pendingTx,onClick:harvestAllFarms,width:\"100%\",children:pendingTx?t('Collecting TOCO'):t('Harvest all (%count%)',{count:balancesWithValue.length})}):/*#__PURE__*/_jsx(UnlockButton,{width:\"100%\"})})]})});};export default FarmedStakingCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","harvestFarm","useWeb3React","useTranslation","useFarmsWithBalance","useMasterchef","useToast","UnlockButton","CakeHarvestBalance","CakeWalletBalance","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","account","t","toastError","farmsWithBalance","masterChefContract","balancesWithValue","filter","balanceType","balance","gt","harvestAllFarms","farmWithBalance","pid","length","count"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap/uikit'\nimport { harvestFarm } from 'utils/calls'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/emblem.png');\n  background-repeat: no-repeat;\n  background-position: right center;\n  min-height: 376px;\n  background-size:80% 100%;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const farmsWithBalance = useFarmsWithBalance()\n  const masterChefContract = useMasterchef()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.gt(0))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of balancesWithValue) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [balancesWithValue, masterChefContract, toastError, t])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Farms & Staking')}\n        </Heading>\n        <CardImage src=\"/images/pixel/tocoCircle.png\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <Label>{t('TOCO to Harvest')}:</Label>\n          <CakeHarvestBalance farmsWithBalance={balancesWithValue} />\n        </Block>\n        <Block>\n          <Label>{t('TOCO in Wallet')}:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? t('Collecting TOCO')\n                : t('Harvest all (%count%)', {\n                    count: balancesWithValue.length,\n                  })}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n"]},"metadata":{},"sourceType":"module"}