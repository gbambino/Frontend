{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect,useState}from'react';import styled from'styled-components';import{Modal,Text,Flex,Image,Button,Slider,BalanceInput,AutoRenewIcon,Link}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BASE_EXCHANGE_URL}from'config';import useTheme from'hooks/useTheme';import useToast from'hooks/useToast';import BigNumber from'bignumber.js';import{getFullDisplayBalance,formatNumber,getDecimalAmount}from'utils/formatBalance';import{getAddress}from'utils/addressHelpers';import PercentageButton from'./PercentageButton';import useStakePool from'../../../hooks/useStakePool';import useUnstakePool from'../../../hooks/useUnstakePool';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledLink=styled(Link)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));var StakeModal=function StakeModal(_ref){var isBnbPool=_ref.isBnbPool,pool=_ref.pool,stakingTokenBalance=_ref.stakingTokenBalance,stakingTokenPrice=_ref.stakingTokenPrice,_ref$isRemovingStake=_ref.isRemovingStake,isRemovingStake=_ref$isRemovingStake===void 0?false:_ref$isRemovingStake,onDismiss=_ref.onDismiss;var sousId=pool.sousId,stakingToken=pool.stakingToken,userData=pool.userData,stakingLimit=pool.stakingLimit,earningToken=pool.earningToken;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useStakePool=useStakePool(sousId,isBnbPool),onStake=_useStakePool.onStake;var _useUnstakePool=useUnstakePool(sousId,pool.enableEmergencyWithdraw),onUnstake=_useUnstakePool.onUnstake;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),stakeAmount=_useState4[0],setStakeAmount=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),hasReachedStakeLimit=_useState6[0],setHasReachedStakedLimit=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),percent=_useState8[0],setPercent=_useState8[1];var getCalculatedStakingLimit=function getCalculatedStakingLimit(){if(isRemovingStake){return userData.stakedBalance;}return stakingLimit.gt(0)&&stakingTokenBalance.gt(stakingLimit)?stakingLimit:stakingTokenBalance;};var usdValueStaked=stakeAmount&&formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber());useEffect(function(){if(stakingLimit.gt(0)&&!isRemovingStake){var fullDecimalStakeAmount=getDecimalAmount(new BigNumber(stakeAmount),stakingToken.decimals);setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit));}},[stakeAmount,stakingLimit,userData,stakingToken,isRemovingStake,setHasReachedStakedLimit]);var handleStakeInputChange=function handleStakeInputChange(input){if(input){var convertedInput=getDecimalAmount(new BigNumber(input),stakingToken.decimals);var percentage=Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber());setPercent(Math.min(percentage,100));}else{setPercent(0);}setStakeAmount(input);};var handleChangePercent=function handleChangePercent(sliderPercent){if(sliderPercent>0){var percentageOfStakingMax=getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent);var amountToStake=getFullDisplayBalance(percentageOfStakingMax,stakingToken.decimals,stakingToken.decimals);setStakeAmount(amountToStake);}else{setStakeAmount('');}setPercent(sliderPercent);};var handleConfirmClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);if(!isRemovingStake){_context.next=16;break;}_context.prev=2;_context.next=5;return onUnstake(stakeAmount,stakingToken.decimals);case 5:toastSuccess(\"\".concat(t('Unstaked'),\"!\"),t('Your %symbol% earnings have also been harvested to your wallet!',{symbol:earningToken.symbol}));setPendingTx(false);onDismiss();_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 14:_context.next=28;break;case 16:_context.prev=16;_context.next=19;return onStake(stakeAmount,stakingToken.decimals);case 19:toastSuccess(\"\".concat(t('Staked'),\"!\"),t('Your %symbol% funds have been staked in the pool!',{symbol:stakingToken.symbol}));setPendingTx(false);onDismiss();_context.next=28;break;case 24:_context.prev=24;_context.t1=_context[\"catch\"](16);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 28:case\"end\":return _context.stop();}}},_callee,null,[[2,10],[16,24]]);}));return function handleConfirmClick(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Modal,{title:isRemovingStake?t('Unstake'):t('Stake in Pool'),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[stakingLimit.gt(0)&&!isRemovingStake&&/*#__PURE__*/_jsx(Text,{color:\"secondary\",bold:true,mb:\"24px\",style:{textAlign:'center'},fontSize:\"16px\",children:t('Max stake for this pool: %amount% %token%',{amount:getFullDisplayBalance(stakingLimit,stakingToken.decimals,0),token:stakingToken.symbol})}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{bold:true,children:[isRemovingStake?t('Unstake'):t('Stake'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",minWidth:\"70px\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/tokens/\".concat(getAddress(stakingToken.address),\".png\"),width:24,height:24,alt:stakingToken.symbol}),/*#__PURE__*/_jsx(Text,{ml:\"4px\",bold:true,children:stakingToken.symbol})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:stakeAmount,onUserInput:handleStakeInputChange,currencyValue:stakingTokenPrice!==0&&\"~\".concat(usdValueStaked||0,\" USD\"),isWarning:hasReachedStakeLimit,decimals:stakingToken.decimals}),hasReachedStakeLimit&&/*#__PURE__*/_jsx(Text,{color:\"failure\",fontSize:\"12px\",style:{textAlign:'right'},mt:\"4px\",children:t('Maximum total stake: %amount% %token%',{amount:getFullDisplayBalance(new BigNumber(stakingLimit),stakingToken.decimals,0),token:stakingToken.symbol})}),/*#__PURE__*/_jsx(Text,{ml:\"auto\",color:\"textSubtle\",fontSize:\"12px\",mb:\"8px\",children:t('Balance: %balance%',{balance:getFullDisplayBalance(getCalculatedStakingLimit(),stakingToken.decimals)})}),/*#__PURE__*/_jsx(Slider,{min:0,max:100,value:percent,onValueChanged:handleChangePercent,name:\"stake\",valueLabel:\"\".concat(percent,\"%\"),step:1}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mt:\"8px\",children:[/*#__PURE__*/_jsx(PercentageButton,{onClick:function onClick(){return handleChangePercent(25);},children:\"25%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:function onClick(){return handleChangePercent(50);},children:\"50%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:function onClick(){return handleChangePercent(75);},children:\"75%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:function onClick(){return handleChangePercent(100);},children:t('Max')})]}),/*#__PURE__*/_jsx(Button,{isLoading:pendingTx,endIcon:pendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,onClick:handleConfirmClick,disabled:!stakeAmount||parseFloat(stakeAmount)===0||hasReachedStakeLimit,mt:\"24px\",children:pendingTx?t('Confirming'):t('Confirm')}),!isRemovingStake&&/*#__PURE__*/_jsx(StyledLink,{external:true,href:BASE_EXCHANGE_URL,children:/*#__PURE__*/_jsx(Button,{width:\"100%\",mt:\"8px\",variant:\"secondary\",children:t('Get %symbol%',{symbol:stakingToken.symbol})})})]});};export default StakeModal;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Pools/components/PoolCard/Modals/StakeModal.tsx"],"names":["React","useEffect","useState","styled","Modal","Text","Flex","Image","Button","Slider","BalanceInput","AutoRenewIcon","Link","useTranslation","BASE_EXCHANGE_URL","useTheme","useToast","BigNumber","getFullDisplayBalance","formatNumber","getDecimalAmount","getAddress","PercentageButton","useStakePool","useUnstakePool","StyledLink","StakeModal","isBnbPool","pool","stakingTokenBalance","stakingTokenPrice","isRemovingStake","onDismiss","sousId","stakingToken","userData","stakingLimit","earningToken","t","theme","onStake","enableEmergencyWithdraw","onUnstake","toastSuccess","toastError","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","stakedBalance","gt","usdValueStaked","times","toNumber","fullDecimalStakeAmount","decimals","plus","handleStakeInputChange","input","convertedInput","percentage","Math","floor","dividedBy","multipliedBy","min","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","symbol","colors","gradients","cardHeader","textAlign","amount","token","address","balance","parseFloat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n"]},"metadata":{},"sourceType":"module"}