{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/src/views/Predictions/Positions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport SwiperCore, { Keyboard, Mousewheel } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Box } from '@pancakeswap/uikit';\nimport { useGetSortedRounds } from 'state/hooks';\nimport 'swiper/swiper.min.css';\nimport RoundCard from './components/RoundCard';\nimport Menu from './components/Menu';\nimport useSwiper from './hooks/useSwiper';\nimport useOnNextRound from './hooks/useOnNextRound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Keyboard, Mousewheel]);\nconst StyledSwiper = styled.div`\n  .swiper-wrapper {\n    align-items: center;\n    display: flex;\n  }\n\n  .swiper-slide {\n    width: 320px;\n  }\n`;\n_c = StyledSwiper;\n\nconst Positions = () => {\n  _s();\n\n  const {\n    setSwiper\n  } = useSwiper();\n  const rounds = useGetSortedRounds();\n  const initialIndex = Math.floor(rounds.length / 2);\n  useOnNextRound();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSwiper, {\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        initialSlide: initialIndex,\n        onSwiper: setSwiper,\n        spaceBetween: 16,\n        slidesPerView: \"auto\",\n        freeMode: true,\n        freeModeSticky: true,\n        centeredSlides: true,\n        freeModeMomentumRatio: 0.25,\n        freeModeMomentumVelocityRatio: 0.5,\n        mousewheel: true,\n        keyboard: true,\n        resizeObserver: true,\n        children: rounds.map(round => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(RoundCard, {\n            round: round\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, round.epoch, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Positions, \"l+UjYY9Jlz+mJfVz0eNvuXhnMUY=\", false, function () {\n  return [useSwiper, useGetSortedRounds, useOnNextRound];\n});\n\n_c2 = Positions;\nexport default Positions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledSwiper\");\n$RefreshReg$(_c2, \"Positions\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Predictions/Positions.tsx"],"names":["React","styled","SwiperCore","Keyboard","Mousewheel","Swiper","SwiperSlide","Box","useGetSortedRounds","RoundCard","Menu","useSwiper","useOnNextRound","use","StyledSwiper","div","Positions","setSwiper","rounds","initialIndex","Math","floor","length","map","round","epoch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,IAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,QAAjD;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEAV,UAAU,CAACW,GAAX,CAAe,CAACV,QAAD,EAAWC,UAAX,CAAf;AAEA,MAAMU,YAAY,GAAGb,MAAM,CAACc,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,Y;;AAUN,MAAME,SAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAgBN,SAAS,EAA/B;AACA,QAAMO,MAAM,GAAGV,kBAAkB,EAAjC;AACA,QAAMW,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,MAAP,GAAgB,CAA3B,CAArB;AAEAV,EAAAA,cAAc;AAEd,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,QAAd;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,YAAY,EAAEO,YADhB;AAEE,QAAA,QAAQ,EAAEF,SAFZ;AAGE,QAAA,YAAY,EAAE,EAHhB;AAIE,QAAA,aAAa,EAAC,MAJhB;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,cAAc,MANhB;AAOE,QAAA,cAAc,MAPhB;AAQE,QAAA,qBAAqB,EAAE,IARzB;AASE,QAAA,6BAA6B,EAAE,GATjC;AAUE,QAAA,UAAU,MAVZ;AAWE,QAAA,QAAQ,MAXV;AAYE,QAAA,cAAc,MAZhB;AAAA,kBAcGC,MAAM,CAACK,GAAP,CAAYC,KAAD,iBACV,QAAC,WAAD;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAAkBA,KAAK,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AAdH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAlCD;;GAAMT,S;UACkBL,S,EACPH,kB,EAGfI,c;;;MALII,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport SwiperCore, { Keyboard, Mousewheel } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { Box } from '@pancakeswap/uikit'\nimport { useGetSortedRounds } from 'state/hooks'\nimport 'swiper/swiper.min.css'\nimport RoundCard from './components/RoundCard'\nimport Menu from './components/Menu'\nimport useSwiper from './hooks/useSwiper'\nimport useOnNextRound from './hooks/useOnNextRound'\n\nSwiperCore.use([Keyboard, Mousewheel])\n\nconst StyledSwiper = styled.div`\n  .swiper-wrapper {\n    align-items: center;\n    display: flex;\n  }\n\n  .swiper-slide {\n    width: 320px;\n  }\n`\nconst Positions: React.FC = () => {\n  const { setSwiper } = useSwiper()\n  const rounds = useGetSortedRounds()\n  const initialIndex = Math.floor(rounds.length / 2)\n\n  useOnNextRound()\n\n  return (\n    <Box overflow=\"hidden\">\n      <Menu />\n      <StyledSwiper>\n        <Swiper\n          initialSlide={initialIndex}\n          onSwiper={setSwiper}\n          spaceBetween={16}\n          slidesPerView=\"auto\"\n          freeMode\n          freeModeSticky\n          centeredSlides\n          freeModeMomentumRatio={0.25}\n          freeModeMomentumVelocityRatio={0.5}\n          mousewheel\n          keyboard\n          resizeObserver\n        >\n          {rounds.map((round) => (\n            <SwiperSlide key={round.epoch}>\n              <RoundCard round={round} />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </StyledSwiper>\n    </Box>\n  )\n}\n\nexport default Positions\n"]},"metadata":{},"sourceType":"module"}