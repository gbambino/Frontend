{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import BigNumber from'bignumber.js';import{Card,CardBody,Heading,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{useTranslation}from'contexts/Localization';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{DEFAULT_TOKEN_DECIMAL}from'config';import{useCake,useBunnyFactory}from'hooks/useContract';import useHasCakeBalance from'hooks/useHasCakeBalance';import nftList from'config/constants/nfts';import SelectionCard from'../components/SelectionCard';import NextStepButton from'../components/NextStepButton';import ApproveConfirmButtons from'../components/ApproveConfirmButtons';import useProfileCreation from'./contexts/hook';import{MINT_COST,STARTER_BUNNY_IDENTIFIERS}from'./config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var nfts=nftList.filter(function(nft){return STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier);});var minimumCakeBalanceToMint=new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL);var Mint=function Mint(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),variationId=_useState2[0],setVariationId=_useState2[1];var _useProfileCreation=useProfileCreation(),actions=_useProfileCreation.actions,minimumCakeRequired=_useProfileCreation.minimumCakeRequired,allowance=_useProfileCreation.allowance;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var cakeContract=useCake();var bunnyFactoryContract=useBunnyFactory();var _useTranslation=useTranslation(),t=_useTranslation.t;var hasMinimumCakeRequired=useHasCakeBalance(minimumCakeBalanceToMint);var _useApproveConfirmTra=useApproveConfirmTransaction({onRequiresApproval:function(){var _onRequiresApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,currentAllowance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return cakeContract.allowance(account,bunnyFactoryContract.address);case 3:response=_context.sent;currentAllowance=new BigNumber(response.toString());return _context.abrupt(\"return\",currentAllowance.gte(minimumCakeRequired));case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));function onRequiresApproval(){return _onRequiresApproval.apply(this,arguments);}return onRequiresApproval;}(),onApprove:function onApprove(){return cakeContract.approve(bunnyFactoryContract.address,allowance.toJSON());},onConfirm:function onConfirm(){return bunnyFactoryContract.mintNFT(variationId);},onSuccess:function onSuccess(){return actions.nextStep();}}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirmed=_useApproveConfirmTra.isConfirmed,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",color:\"textSubtle\",bold:true,children:t('Step %num%',{num:1})}),/*#__PURE__*/_jsx(Heading,{as:\"h3\",scale:\"xl\",mb:\"24px\",children:t('Get Starter Collectible')}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('Every profile starts by making a “starter” collectible (NFT).')}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('This starter will also become your first profile picture.')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"24px\",children:t('You can change your profile pic later if you get another approved Pancake Collectible.')}),/*#__PURE__*/_jsx(Card,{mb:\"24px\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",scale:\"lg\",mb:\"8px\",children:t('Choose your Starter!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",children:t('Choose wisely: you can only ever make one starter collectible!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"24px\",color:\"textSubtle\",children:t('Cost: %num% CAKE',{num:MINT_COST})}),nfts.map(function(nft){var handleChange=function handleChange(value){return setVariationId(Number(value));};return/*#__PURE__*/_jsx(SelectionCard,{name:\"mintStarter\",value:nft.variationId,image:\"/images/nfts/\".concat(nft.images.md),isChecked:variationId===nft.variationId,onChange:handleChange,disabled:isApproving||isConfirming||isConfirmed||!hasMinimumCakeRequired,children:/*#__PURE__*/_jsx(Text,{bold:true,children:nft.name})},nft.identifier);}),!hasMinimumCakeRequired&&/*#__PURE__*/_jsx(Text,{color:\"failure\",mb:\"16px\",children:t('A minimum of %num% CAKE is required',{num:MINT_COST})}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:variationId===null||isConfirmed||isConfirming||isApproved,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed||!hasMinimumCakeRequired,isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm})]})}),/*#__PURE__*/_jsx(NextStepButton,{onClick:actions.nextStep,disabled:!isConfirmed,children:t('Next Step')})]});};export default Mint;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Profile/ProfileCreation/Mint.tsx"],"names":["React","useState","BigNumber","Card","CardBody","Heading","Text","useWeb3React","useTranslation","useApproveConfirmTransaction","DEFAULT_TOKEN_DECIMAL","useCake","useBunnyFactory","useHasCakeBalance","nftList","SelectionCard","NextStepButton","ApproveConfirmButtons","useProfileCreation","MINT_COST","STARTER_BUNNY_IDENTIFIERS","nfts","filter","nft","includes","identifier","minimumCakeBalanceToMint","multipliedBy","Mint","variationId","setVariationId","actions","minimumCakeRequired","allowance","account","cakeContract","bunnyFactoryContract","t","hasMinimumCakeRequired","onRequiresApproval","address","response","currentAllowance","toString","gte","onApprove","approve","toJSON","onConfirm","mintNFT","onSuccess","nextStep","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","num","map","handleChange","value","Number","images","md","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { Nft } from 'config/constants/types'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst Mint: React.FC = () => {\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        // TODO: Move this to a helper, this check will be probably be used many times\n        try {\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(bunnyFactoryContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        return bunnyFactoryContract.mintNFT(variationId)\n      },\n      onSuccess: () => actions.nextStep(),\n    })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 1 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t('Cost: %num% CAKE', { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setVariationId(Number(value))\n\n            return (\n              <SelectionCard\n                key={nft.identifier}\n                name=\"mintStarter\"\n                value={nft.variationId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={variationId === nft.variationId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t('A minimum of %num% CAKE is required', { num: MINT_COST })}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n"]},"metadata":{},"sourceType":"module"}