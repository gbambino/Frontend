{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState}from'react';import styled from'styled-components';import{ModalContainer,ModalBody,ModalTitle,ModalHeader,Button,AutoRenewIcon,TrophyGoldIcon,Text,Flex,Heading,Box,LinkExternal,ModalCloseButton}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{getBscScanTransactionUrl}from'utils/bscscan';import{useAppDispatch}from'state';import{usePriceBnbBusd}from'state/hooks';import{fetchClaimableStatuses}from'state/predictions';import{useTranslation}from'contexts/Localization';import useToast from'hooks/useToast';import{usePredictionsContract}from'hooks/useContract';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Modal=styled(ModalContainer)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  overflow: visible;\\n\"])));var BunnyDecoration=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: -116px; // line up bunny at the top of the modal\\n  left: 0px;\\n  text-align: center;\\n  width: 100%;\\n\"])));var CollectRoundWinningsModal=function CollectRoundWinningsModal(_ref){var payout=_ref.payout,betAmount=_ref.betAmount,epoch=_ref.epoch,onDismiss=_ref.onDismiss,onSuccess=_ref.onSuccess;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isPendingTx=_useState2[0],setIsPendingTx=_useState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var predictionsContract=usePredictionsContract();var bnbBusdPrice=usePriceBnbBusd();var dispatch=useAppDispatch();// Convert payout to number for compatibility\nvar payoutAsFloat=parseFloat(payout);var betAmountAsFloat=parseFloat(betAmount);var handleClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tx,receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return predictionsContract.claim(epoch);case 3:tx=_context.sent;setIsPendingTx(true);_context.next=7;return tx.wait();case 7:receipt=_context.sent;if(!onSuccess){_context.next=11;break;}_context.next=11;return onSuccess();case 11:_context.next=13;return dispatch(fetchClaimableStatuses({account:account,epochs:[epoch]}));case 13:onDismiss();setIsPendingTx(false);toastSuccess(t('Winnings collected!'),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",mb:\"8px\",children:t('Your prizes have been sent to your wallet')}),receipt.transactionHash&&/*#__PURE__*/_jsx(LinkExternal,{href:getBscScanTransactionUrl(receipt.transactionHash),children:t('View on BscScan')})]}));_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));case 21:_context.prev=21;setIsPendingTx(false);return _context.finish(21);case 24:case\"end\":return _context.stop();}}},_callee,null,[[0,18,21,24]]);}));return function handleClick(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Modal,{minWidth:\"288px\",position:\"relative\",mt:\"124px\",children:[/*#__PURE__*/_jsx(BunnyDecoration,{children:/*#__PURE__*/_jsx(\"img\",{src:\"/images/decorations/prize-bunny.png\",alt:\"bunny decoration\",height:\"124px\",width:\"168px\"})}),/*#__PURE__*/_jsxs(ModalHeader,{children:[/*#__PURE__*/_jsx(ModalTitle,{children:/*#__PURE__*/_jsx(Heading,{children:t('Collect Winnings')})}),/*#__PURE__*/_jsx(ModalCloseButton,{onDismiss:onDismiss})]}),/*#__PURE__*/_jsxs(ModalBody,{p:\"24px\",children:[/*#__PURE__*/_jsx(TrophyGoldIcon,{width:\"96px\",mx:\"auto\",mb:\"24px\"}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"start\",justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsx(Text,{children:t('Your position')}),/*#__PURE__*/_jsxs(Box,{style:{textAlign:'right'},children:[/*#__PURE__*/_jsx(Text,{children:\"\".concat(betAmount,\" BNB\")}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:\"~$\".concat(bnbBusdPrice.times(betAmountAsFloat).toFormat(2))})]})]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"start\",justifyContent:\"space-between\",mb:\"24px\",children:[/*#__PURE__*/_jsx(Text,{children:t('Your winnings')}),/*#__PURE__*/_jsxs(Box,{style:{textAlign:'right'},children:[/*#__PURE__*/_jsx(Text,{children:\"\".concat(payout,\" BNB\")}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:\"~$\".concat(bnbBusdPrice.times(payoutAsFloat).toFormat(2))})]})]}),/*#__PURE__*/_jsx(Button,{width:\"100%\",mb:\"8px\",onClick:handleClick,isLoading:isPendingTx,endIcon:isPendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,children:t('Confirm')})]})]});};export default CollectRoundWinningsModal;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Predictions/components/CollectRoundWinningsModal.tsx"],"names":["React","useState","styled","ModalContainer","ModalBody","ModalTitle","ModalHeader","Button","AutoRenewIcon","TrophyGoldIcon","Text","Flex","Heading","Box","LinkExternal","ModalCloseButton","useWeb3React","getBscScanTransactionUrl","useAppDispatch","usePriceBnbBusd","fetchClaimableStatuses","useTranslation","useToast","usePredictionsContract","Modal","BunnyDecoration","div","CollectRoundWinningsModal","payout","betAmount","epoch","onDismiss","onSuccess","isPendingTx","setIsPendingTx","account","t","toastSuccess","toastError","predictionsContract","bnbBusdPrice","dispatch","payoutAsFloat","parseFloat","betAmountAsFloat","handleClick","claim","tx","wait","receipt","epochs","transactionHash","textAlign","times","toFormat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  ModalContainer,\n  ModalBody,\n  ModalTitle,\n  ModalHeader,\n  InjectedModalProps,\n  Button,\n  AutoRenewIcon,\n  TrophyGoldIcon,\n  Text,\n  Flex,\n  Heading,\n  Box,\n  LinkExternal,\n  ModalCloseButton,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBscScanTransactionUrl } from 'utils/bscscan'\nimport { useAppDispatch } from 'state'\nimport { usePriceBnbBusd } from 'state/hooks'\nimport { fetchClaimableStatuses } from 'state/predictions'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { usePredictionsContract } from 'hooks/useContract'\n\ninterface CollectRoundWinningsModalProps extends InjectedModalProps {\n  payout: string\n  betAmount: string\n  epoch: number\n  onSuccess?: () => Promise<void>\n}\n\nconst Modal = styled(ModalContainer)`\n  overflow: visible;\n`\n\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -116px; // line up bunny at the top of the modal\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`\n\nconst CollectRoundWinningsModal: React.FC<CollectRoundWinningsModalProps> = ({\n  payout,\n  betAmount,\n  epoch,\n  onDismiss,\n  onSuccess,\n}) => {\n  const [isPendingTx, setIsPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const predictionsContract = usePredictionsContract()\n  const bnbBusdPrice = usePriceBnbBusd()\n  const dispatch = useAppDispatch()\n\n  // Convert payout to number for compatibility\n  const payoutAsFloat = parseFloat(payout)\n  const betAmountAsFloat = parseFloat(betAmount)\n\n  const handleClick = async () => {\n    try {\n      const tx = await predictionsContract.claim(epoch)\n      setIsPendingTx(true)\n      const receipt = await tx.wait()\n\n      if (onSuccess) {\n        await onSuccess()\n      }\n\n      await dispatch(fetchClaimableStatuses({ account, epochs: [epoch] }))\n      onDismiss()\n      setIsPendingTx(false)\n      toastSuccess(\n        t('Winnings collected!'),\n        <Box>\n          <Text as=\"p\" mb=\"8px\">\n            {t('Your prizes have been sent to your wallet')}\n          </Text>\n          {receipt.transactionHash && (\n            <LinkExternal href={getBscScanTransactionUrl(receipt.transactionHash)}>{t('View on BscScan')}</LinkExternal>\n          )}\n        </Box>,\n      )\n    } catch {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    } finally {\n      setIsPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal minWidth=\"288px\" position=\"relative\" mt=\"124px\">\n      <BunnyDecoration>\n        <img src=\"/images/decorations/prize-bunny.png\" alt=\"bunny decoration\" height=\"124px\" width=\"168px\" />\n      </BunnyDecoration>\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Collect Winnings')}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <TrophyGoldIcon width=\"96px\" mx=\"auto\" mb=\"24px\" />\n        <Flex alignItems=\"start\" justifyContent=\"space-between\" mb=\"8px\">\n          <Text>{t('Your position')}</Text>\n          <Box style={{ textAlign: 'right' }}>\n            <Text>{`${betAmount} BNB`}</Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {`~$${bnbBusdPrice.times(betAmountAsFloat).toFormat(2)}`}\n            </Text>\n          </Box>\n        </Flex>\n        <Flex alignItems=\"start\" justifyContent=\"space-between\" mb=\"24px\">\n          <Text>{t('Your winnings')}</Text>\n          <Box style={{ textAlign: 'right' }}>\n            <Text>{`${payout} BNB`}</Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {`~$${bnbBusdPrice.times(payoutAsFloat).toFormat(2)}`}\n            </Text>\n          </Box>\n        </Flex>\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={handleClick}\n          isLoading={isPendingTx}\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {t('Confirm')}\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default CollectRoundWinningsModal\n"]},"metadata":{},"sourceType":"module"}