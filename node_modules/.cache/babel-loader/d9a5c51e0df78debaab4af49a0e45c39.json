{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{useWeb3React}from'@web3-react/core';import{useAppDispatch}from'state';import{updateUserStakedBalance,updateUserBalance}from'state/actions';import{stakeFarm}from'utils/calls';import BigNumber from'bignumber.js';import{DEFAULT_TOKEN_DECIMAL,DEFAULT_GAS_LIMIT}from'config';import{BIG_TEN}from'utils/bigNumber';import{useMasterchef,useSousChef}from'hooks/useContract';var options={gasLimit:DEFAULT_GAS_LIMIT};var sousStake=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(sousChefContract,amount){var decimals,tx,receipt,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:decimals=_args.length>2&&_args[2]!==undefined?_args[2]:18;_context.next=3;return sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(),options);case 3:tx=_context.sent;_context.next=6;return tx.wait();case 6:receipt=_context.sent;return _context.abrupt(\"return\",receipt.status);case 8:case\"end\":return _context.stop();}}},_callee);}));return function sousStake(_x,_x2){return _ref.apply(this,arguments);};}();var sousStakeBnb=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(sousChefContract,amount){var tx,receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),options);case 2:tx=_context2.sent;_context2.next=5;return tx.wait();case 5:receipt=_context2.sent;return _context2.abrupt(\"return\",receipt.status);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function sousStakeBnb(_x3,_x4){return _ref2.apply(this,arguments);};}();var useStakePool=function useStakePool(sousId){var isUsingBnb=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var dispatch=useAppDispatch();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var masterChefContract=useMasterchef();var sousChefContract=useSousChef(sousId);var handleStake=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(amount,decimals){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(sousId===0)){_context3.next=5;break;}_context3.next=3;return stakeFarm(masterChefContract,0,amount);case 3:_context3.next=12;break;case 5:if(!isUsingBnb){_context3.next=10;break;}_context3.next=8;return sousStakeBnb(sousChefContract,amount);case 8:_context3.next=12;break;case 10:_context3.next=12;return sousStake(sousChefContract,amount,decimals);case 12:dispatch(updateUserStakedBalance(sousId,account));dispatch(updateUserBalance(sousId,account));case 14:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref3.apply(this,arguments);};}(),[account,dispatch,isUsingBnb,masterChefContract,sousChefContract,sousId]);return{onStake:handleStake};};export default useStakePool;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Pools/hooks/useStakePool.ts"],"names":["useCallback","useWeb3React","useAppDispatch","updateUserStakedBalance","updateUserBalance","stakeFarm","BigNumber","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","BIG_TEN","useMasterchef","useSousChef","options","gasLimit","sousStake","sousChefContract","amount","decimals","deposit","times","pow","toString","tx","wait","receipt","status","sousStakeBnb","useStakePool","sousId","isUsingBnb","dispatch","account","masterChefContract","handleStake","onStake"],"mappings":"6TAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,OAASC,uBAAT,CAAkCC,iBAAlC,KAA2D,eAA3D,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,qBAAT,CAAgCC,iBAAhC,KAAyD,QAAzD,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,mBAA3C,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACdC,QAAQ,CAAEL,iBADI,CAAhB,CAIA,GAAMM,CAAAA,SAAS,0FAAG,iBAAOC,gBAAP,CAAyBC,MAAzB,0JAAiCC,QAAjC,+CAA4C,EAA5C,uBACCF,CAAAA,gBAAgB,CAACG,OAAjB,CAAyB,GAAIZ,CAAAA,SAAJ,CAAcU,MAAd,EAAsBG,KAAtB,CAA4BV,OAAO,CAACW,GAAR,CAAYH,QAAZ,CAA5B,EAAmDI,QAAnD,EAAzB,CAAwFT,OAAxF,CADD,QACVU,EADU,qCAEMA,CAAAA,EAAE,CAACC,IAAH,EAFN,QAEVC,OAFU,+CAGTA,OAAO,CAACC,MAHC,wDAAH,kBAATX,CAAAA,SAAS,gDAAf,CAMA,GAAMY,CAAAA,YAAY,2FAAG,kBAAOX,gBAAP,CAAyBC,MAAzB,4JACFD,CAAAA,gBAAgB,CAACG,OAAjB,CAAyB,GAAIZ,CAAAA,SAAJ,CAAcU,MAAd,EAAsBG,KAAtB,CAA4BZ,qBAA5B,EAAmDc,QAAnD,EAAzB,CAAwFT,OAAxF,CADE,QACbU,EADa,uCAEGA,CAAAA,EAAE,CAACC,IAAH,EAFH,QAEbC,OAFa,iDAGZA,OAAO,CAACC,MAHI,0DAAH,kBAAZC,CAAAA,YAAY,kDAAlB,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAwC,IAAvBC,CAAAA,UAAuB,2DAAV,KAAU,CAC3D,GAAMC,CAAAA,QAAQ,CAAG5B,cAAc,EAA/B,CACA,kBAAoBD,YAAY,EAAhC,CAAQ8B,OAAR,eAAQA,OAAR,CACA,GAAMC,CAAAA,kBAAkB,CAAGtB,aAAa,EAAxC,CACA,GAAMK,CAAAA,gBAAgB,CAAGJ,WAAW,CAACiB,MAAD,CAApC,CAEA,GAAMK,CAAAA,WAAW,CAAGjC,WAAW,2FAC7B,kBAAOgB,MAAP,CAAuBC,QAAvB,2HACMW,MAAM,GAAK,CADjB,kDAEUvB,CAAAA,SAAS,CAAC2B,kBAAD,CAAqB,CAArB,CAAwBhB,MAAxB,CAFnB,2CAGaa,UAHb,kDAIUH,CAAAA,YAAY,CAACX,gBAAD,CAAmBC,MAAnB,CAJtB,gEAMUF,CAAAA,SAAS,CAACC,gBAAD,CAAmBC,MAAnB,CAA2BC,QAA3B,CANnB,SAQEa,QAAQ,CAAC3B,uBAAuB,CAACyB,MAAD,CAASG,OAAT,CAAxB,CAAR,CACAD,QAAQ,CAAC1B,iBAAiB,CAACwB,MAAD,CAASG,OAAT,CAAlB,CAAR,CATF,yDAD6B,qEAY7B,CAACA,OAAD,CAAUD,QAAV,CAAoBD,UAApB,CAAgCG,kBAAhC,CAAoDjB,gBAApD,CAAsEa,MAAtE,CAZ6B,CAA/B,CAeA,MAAO,CAAEM,OAAO,CAAED,WAAX,CAAP,CACD,CAtBD,CAwBA,cAAeN,CAAAA,YAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n"]},"metadata":{},"sourceType":"module"}