{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useCallback}from'react';import{useWeb3React}from'@web3-react/core';import styled from'styled-components';import BigNumber from'bignumber.js';import{Button,Flex,Heading,IconButton,AddIcon,MinusIcon,useModal}from'@pancakeswap/uikit';import{useLocation}from'react-router-dom';import Balance from'components/Balance';import{useTranslation}from'contexts/Localization';import{useAppDispatch}from'state';import{fetchFarmUserDataAsync}from'state/farms';import{useLpTokenPrice}from'state/hooks';import{getBalanceAmount,getBalanceNumber,getFullDisplayBalance}from'utils/formatBalance';import DepositModal from'../DepositModal';import WithdrawModal from'../WithdrawModal';import useUnstakeFarms from'../../hooks/useUnstakeFarms';import useStakeFarms from'../../hooks/useStakeFarms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IconButtonWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  svg {\\n    width: 20px;\\n  }\\n\"])));var StakeAction=function StakeAction(_ref){var stakedBalance=_ref.stakedBalance,tokenBalance=_ref.tokenBalance,tokenName=_ref.tokenName,pid=_ref.pid,addLiquidityUrl=_ref.addLiquidityUrl;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useStakeFarms=useStakeFarms(pid),onStake=_useStakeFarms.onStake;var _useUnstakeFarms=useUnstakeFarms(pid),onUnstake=_useUnstakeFarms.onUnstake;var location=useLocation();var dispatch=useAppDispatch();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var lpPrice=useLpTokenPrice(tokenName);var handleStake=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(amount){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return onStake(amount);case 2:dispatch(fetchFarmUserDataAsync({account:account,pids:[pid]}));case 3:case\"end\":return _context.stop();}}},_callee);}));return function handleStake(_x){return _ref2.apply(this,arguments);};}();var handleUnstake=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return onUnstake(amount);case 2:dispatch(fetchFarmUserDataAsync({account:account,pids:[pid]}));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function handleUnstake(_x2){return _ref3.apply(this,arguments);};}();var displayBalance=useCallback(function(){var stakedBalanceBigNumber=getBalanceAmount(stakedBalance);if(stakedBalanceBigNumber.gt(0)&&stakedBalanceBigNumber.lt(0.0001)){return getFullDisplayBalance(stakedBalance).toLocaleString();}return stakedBalanceBigNumber.toFixed(3,BigNumber.ROUND_DOWN);},[stakedBalance]);var _useModal=useModal(/*#__PURE__*/_jsx(DepositModal,{max:tokenBalance,onConfirm:handleStake,tokenName:tokenName,addLiquidityUrl:addLiquidityUrl})),_useModal2=_slicedToArray(_useModal,1),onPresentDeposit=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(WithdrawModal,{max:stakedBalance,onConfirm:handleUnstake,tokenName:tokenName})),_useModal4=_slicedToArray(_useModal3,1),onPresentWithdraw=_useModal4[0];var renderStakingButtons=function renderStakingButtons(){return stakedBalance.eq(0)?/*#__PURE__*/_jsx(Button,{onClick:onPresentDeposit,disabled:['history','archived'].some(function(item){return location.pathname.includes(item);}),children:t('Stake LP')}):/*#__PURE__*/_jsxs(IconButtonWrapper,{children:[/*#__PURE__*/_jsx(IconButton,{variant:\"tertiary\",onClick:onPresentWithdraw,mr:\"6px\",children:/*#__PURE__*/_jsx(MinusIcon,{color:\"primary\",width:\"14px\"})}),/*#__PURE__*/_jsx(IconButton,{variant:\"tertiary\",onClick:onPresentDeposit,disabled:['history','archived'].some(function(item){return location.pathname.includes(item);}),children:/*#__PURE__*/_jsx(AddIcon,{color:\"primary\",width:\"14px\"})})]});};return/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"flex-start\",children:[/*#__PURE__*/_jsx(Heading,{color:stakedBalance.eq(0)?'textDisabled':'text',children:displayBalance()}),stakedBalance.gt(0)&&lpPrice.gt(0)&&/*#__PURE__*/_jsx(Balance,{fontSize:\"12px\",color:\"textSubtle\",decimals:2,value:getBalanceNumber(lpPrice.times(stakedBalance)),unit:\" USD\",prefix:\"~\"})]}),renderStakingButtons()]});};export default StakeAction;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Farms/components/FarmCard/StakeAction.tsx"],"names":["React","useCallback","useWeb3React","styled","BigNumber","Button","Flex","Heading","IconButton","AddIcon","MinusIcon","useModal","useLocation","Balance","useTranslation","useAppDispatch","fetchFarmUserDataAsync","useLpTokenPrice","getBalanceAmount","getBalanceNumber","getFullDisplayBalance","DepositModal","WithdrawModal","useUnstakeFarms","useStakeFarms","IconButtonWrapper","div","StakeAction","stakedBalance","tokenBalance","tokenName","pid","addLiquidityUrl","t","onStake","onUnstake","location","dispatch","account","lpPrice","handleStake","amount","pids","handleUnstake","displayBalance","stakedBalanceBigNumber","gt","lt","toLocaleString","toFixed","ROUND_DOWN","onPresentDeposit","onPresentWithdraw","renderStakingButtons","eq","some","item","pathname","includes","times"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/hooks'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\nimport useStakeFarms from '../../hooks/useStakeFarms'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n"]},"metadata":{},"sourceType":"module"}