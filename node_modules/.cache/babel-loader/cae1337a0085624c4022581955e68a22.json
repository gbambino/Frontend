{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{CardBody,Heading,Flex,Skeleton,Text,Box,Button,useModal}from'@pancakeswap/uikit';import{useGetUserLotteriesGraphData}from'state/hooks';import{useTranslation}from'contexts/Localization';import WinningNumbers from'../WinningNumbers';import ViewTicketsModal from'../ViewTicketsModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PreviousRoundCardBody=function PreviousRoundCardBody(_ref){var lotteryData=_ref.lotteryData,lotteryId=_ref.lotteryId;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useModal=useModal(/*#__PURE__*/_jsx(ViewTicketsModal,{roundId:lotteryId,roundStatus:lotteryData===null||lotteryData===void 0?void 0:lotteryData.status})),_useModal2=_slicedToArray(_useModal,1),onPresentViewTicketsModal=_useModal2[0];var userLotteryData=useGetUserLotteriesGraphData();var userDataForRound=userLotteryData.rounds.find(function(userLotteryRound){return userLotteryRound.lotteryId===lotteryId;});return/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",children:[/*#__PURE__*/_jsx(Heading,{mb:\"24px\",children:t('Winning Number')}),lotteryData?/*#__PURE__*/_jsx(WinningNumbers,{number:lotteryData===null||lotteryData===void 0?void 0:lotteryData.finalNumber.toString()}):/*#__PURE__*/_jsx(Skeleton,{width:\"240px\",height:\"34px\"}),userDataForRound&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{mt:\"32px\",children:[/*#__PURE__*/_jsxs(Text,{display:\"inline\",children:[t('You had'),\" \"]}),/*#__PURE__*/_jsxs(Text,{display:\"inline\",bold:true,children:[userDataForRound.totalTickets,\" \",t('tickets'),' ']}),/*#__PURE__*/_jsx(Text,{display:\"inline\",children:t('this round')})]}),/*#__PURE__*/_jsx(Button,{onClick:onPresentViewTicketsModal,height:\"auto\",width:\"fit-content\",p:\"0\",mb:['32px',null,null,'0'],variant:\"text\",scale:\"sm\",children:t('View your tickets')})]})]})});};export default PreviousRoundCardBody;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Lottery/components/PreviousRoundCard/Body.tsx"],"names":["React","CardBody","Heading","Flex","Skeleton","Text","Box","Button","useModal","useGetUserLotteriesGraphData","useTranslation","WinningNumbers","ViewTicketsModal","PreviousRoundCardBody","lotteryData","lotteryId","t","status","onPresentViewTicketsModal","userLotteryData","userDataForRound","rounds","find","userLotteryRound","finalNumber","toString","totalTickets"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,OAAnB,CAA4BC,IAA5B,CAAkCC,QAAlC,CAA4CC,IAA5C,CAAkDC,GAAlD,CAAuDC,MAAvD,CAA+DC,QAA/D,KAA+E,oBAA/E,CAEA,OAASC,4BAAT,KAA6C,aAA7C,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qBAA7B,C,6IAEA,GAAMC,CAAAA,qBAAiF,CAAG,QAApFA,CAAAA,qBAAoF,MAGpF,IAFJC,CAAAA,WAEI,MAFJA,WAEI,CADJC,SACI,MADJA,SACI,CACJ,oBAAcL,cAAc,EAA5B,CAAQM,CAAR,iBAAQA,CAAR,CACA,cAAoCR,QAAQ,cAC1C,KAAC,gBAAD,EAAkB,OAAO,CAAEO,SAA3B,CAAsC,WAAW,CAAED,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEG,MAAhE,EAD0C,CAA5C,wCAAOC,yBAAP,eAGA,GAAMC,CAAAA,eAAe,CAAGV,4BAA4B,EAApD,CACA,GAAMW,CAAAA,gBAAgB,CAAGD,eAAe,CAACE,MAAhB,CAAuBC,IAAvB,CAA4B,SAACC,gBAAD,QAAsBA,CAAAA,gBAAgB,CAACR,SAAjB,GAA+BA,SAArD,EAA5B,CAAzB,CAEA,mBACE,KAAC,QAAD,wBACE,MAAC,IAAD,EAAM,aAAa,CAAC,QAApB,CAA6B,UAAU,CAAC,QAAxC,CAAiD,cAAc,CAAC,QAAhE,wBACE,KAAC,OAAD,EAAS,EAAE,CAAC,MAAZ,UAAoBC,CAAC,CAAC,gBAAD,CAArB,EADF,CAEGF,WAAW,cACV,KAAC,cAAD,EAAgB,MAAM,CAAEA,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEU,WAAb,CAAyBC,QAAzB,EAAxB,EADU,cAGV,KAAC,QAAD,EAAU,KAAK,CAAC,OAAhB,CAAwB,MAAM,CAAC,MAA/B,EALJ,CAOGL,gBAAgB,eACf,wCACE,MAAC,GAAD,EAAK,EAAE,CAAC,MAAR,wBACE,MAAC,IAAD,EAAM,OAAO,CAAC,QAAd,WAAwBJ,CAAC,CAAC,SAAD,CAAzB,OADF,cAEE,MAAC,IAAD,EAAM,OAAO,CAAC,QAAd,CAAuB,IAAI,KAA3B,WACGI,gBAAgB,CAACM,YADpB,KACmCV,CAAC,CAAC,SAAD,CADpC,CACiD,GADjD,GAFF,cAKE,KAAC,IAAD,EAAM,OAAO,CAAC,QAAd,UAAwBA,CAAC,CAAC,YAAD,CAAzB,EALF,GADF,cAQE,KAAC,MAAD,EACE,OAAO,CAAEE,yBADX,CAEE,MAAM,CAAC,MAFT,CAGE,KAAK,CAAC,aAHR,CAIE,CAAC,CAAC,GAJJ,CAKE,EAAE,CAAE,CAAC,MAAD,CAAS,IAAT,CAAe,IAAf,CAAqB,GAArB,CALN,CAME,OAAO,CAAC,MANV,CAOE,KAAK,CAAC,IAPR,UASGF,CAAC,CAAC,mBAAD,CATJ,EARF,GARJ,GADF,EADF,CAkCD,CA7CD,CA+CA,cAAeH,CAAAA,qBAAf","sourcesContent":["import React from 'react'\nimport { CardBody, Heading, Flex, Skeleton, Text, Box, Button, useModal } from '@pancakeswap/uikit'\nimport { LotteryRound } from 'state/types'\nimport { useGetUserLotteriesGraphData } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport WinningNumbers from '../WinningNumbers'\nimport ViewTicketsModal from '../ViewTicketsModal'\n\nconst PreviousRoundCardBody: React.FC<{ lotteryData: LotteryRound; lotteryId: string }> = ({\n  lotteryData,\n  lotteryId,\n}) => {\n  const { t } = useTranslation()\n  const [onPresentViewTicketsModal] = useModal(\n    <ViewTicketsModal roundId={lotteryId} roundStatus={lotteryData?.status} />,\n  )\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const userDataForRound = userLotteryData.rounds.find((userLotteryRound) => userLotteryRound.lotteryId === lotteryId)\n\n  return (\n    <CardBody>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Heading mb=\"24px\">{t('Winning Number')}</Heading>\n        {lotteryData ? (\n          <WinningNumbers number={lotteryData?.finalNumber.toString()} />\n        ) : (\n          <Skeleton width=\"240px\" height=\"34px\" />\n        )}\n        {userDataForRound && (\n          <>\n            <Box mt=\"32px\">\n              <Text display=\"inline\">{t('You had')} </Text>\n              <Text display=\"inline\" bold>\n                {userDataForRound.totalTickets} {t('tickets')}{' '}\n              </Text>\n              <Text display=\"inline\">{t('this round')}</Text>\n            </Box>\n            <Button\n              onClick={onPresentViewTicketsModal}\n              height=\"auto\"\n              width=\"fit-content\"\n              p=\"0\"\n              mb={['32px', null, null, '0']}\n              variant=\"text\"\n              scale=\"sm\"\n            >\n              {t('View your tickets')}\n            </Button>\n          </>\n        )}\n      </Flex>\n    </CardBody>\n  )\n}\n\nexport default PreviousRoundCardBody\n"]},"metadata":{},"sourceType":"module"}