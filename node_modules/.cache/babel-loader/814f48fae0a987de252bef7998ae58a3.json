{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/RoundCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useGetBetByEpoch, useGetCurrentEpoch } from 'state/hooks';\nimport { BetPosition } from 'state/types';\nimport { getMultiplierv2 } from '../../helpers';\nimport ExpiredRoundCard from './ExpiredRoundCard';\nimport LiveRoundCard from './LiveRoundCard';\nimport OpenRoundCard from './OpenRoundCard';\nimport SoonRoundCard from './SoonRoundCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoundCard = ({\n  round\n}) => {\n  _s();\n\n  const {\n    epoch,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount\n  } = round;\n  const currentEpoch = useGetCurrentEpoch();\n  const {\n    account\n  } = useWeb3React();\n  const ledger = useGetBetByEpoch(account, epoch);\n  const hasEntered = ledger ? ledger.amount.gt(0) : false;\n  const hasEnteredUp = hasEntered && ledger.position === BetPosition.BULL;\n  const hasEnteredDown = hasEntered && ledger.position === BetPosition.BEAR;\n  const bullMultiplier = getMultiplierv2(totalAmount, bullAmount);\n  const bearMultiplier = getMultiplierv2(totalAmount, bearAmount);\n  const formattedBullMultiplier = bullMultiplier.toUnsafeFloat().toFixed(bullMultiplier.isZero() ? 0 : 2);\n  const formattedbearMultiplier = bearMultiplier.toUnsafeFloat().toFixed(bearMultiplier.isZero() ? 0 : 2); // Next (open) round\n\n  if (epoch === currentEpoch && lockPrice === null) {\n    return /*#__PURE__*/_jsxDEV(OpenRoundCard, {\n      round: round,\n      hasEnteredDown: hasEnteredDown,\n      hasEnteredUp: hasEnteredUp,\n      betAmount: ledger === null || ledger === void 0 ? void 0 : ledger.amount,\n      bullMultiplier: formattedBullMultiplier,\n      bearMultiplier: formattedbearMultiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } // Live round\n\n\n  if (closePrice === null && epoch === currentEpoch - 1) {\n    return /*#__PURE__*/_jsxDEV(LiveRoundCard, {\n      betAmount: ledger === null || ledger === void 0 ? void 0 : ledger.amount,\n      hasEnteredDown: hasEnteredDown,\n      hasEnteredUp: hasEnteredUp,\n      round: round,\n      bullMultiplier: formattedBullMultiplier,\n      bearMultiplier: formattedbearMultiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } // Fake future rounds\n\n\n  if (epoch > currentEpoch) {\n    return /*#__PURE__*/_jsxDEV(SoonRoundCard, {\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  } // Past rounds\n\n\n  return /*#__PURE__*/_jsxDEV(ExpiredRoundCard, {\n    round: round,\n    hasEnteredDown: hasEnteredDown,\n    hasEnteredUp: hasEnteredUp,\n    betAmount: ledger === null || ledger === void 0 ? void 0 : ledger.amount,\n    bullMultiplier: formattedBullMultiplier,\n    bearMultiplier: formattedbearMultiplier\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoundCard, \"Dvg8vnDGONu0Ab8Ok90V6GJobg8=\", false, function () {\n  return [useGetCurrentEpoch, useWeb3React, useGetBetByEpoch];\n});\n\n_c = RoundCard;\nexport default RoundCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoundCard\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/RoundCard/index.tsx"],"names":["React","useWeb3React","useGetBetByEpoch","useGetCurrentEpoch","BetPosition","getMultiplierv2","ExpiredRoundCard","LiveRoundCard","OpenRoundCard","SoonRoundCard","RoundCard","round","epoch","lockPrice","closePrice","totalAmount","bullAmount","bearAmount","currentEpoch","account","ledger","hasEntered","amount","gt","hasEnteredUp","position","BULL","hasEnteredDown","BEAR","bullMultiplier","bearMultiplier","formattedBullMultiplier","toUnsafeFloat","toFixed","isZero","formattedbearMultiplier"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useGetBetByEpoch, useGetCurrentEpoch } from 'state/hooks'\nimport { BetPosition, NodeRound } from 'state/types'\nimport { getMultiplierv2 } from '../../helpers'\nimport ExpiredRoundCard from './ExpiredRoundCard'\nimport LiveRoundCard from './LiveRoundCard'\nimport OpenRoundCard from './OpenRoundCard'\nimport SoonRoundCard from './SoonRoundCard'\n\ninterface RoundCardProps {\n  round: NodeRound\n}\n\nconst RoundCard: React.FC<RoundCardProps> = ({ round }) => {\n  const { epoch, lockPrice, closePrice, totalAmount, bullAmount, bearAmount } = round\n  const currentEpoch = useGetCurrentEpoch()\n  const { account } = useWeb3React()\n  const ledger = useGetBetByEpoch(account, epoch)\n  const hasEntered = ledger ? ledger.amount.gt(0) : false\n  const hasEnteredUp = hasEntered && ledger.position === BetPosition.BULL\n  const hasEnteredDown = hasEntered && ledger.position === BetPosition.BEAR\n  const bullMultiplier = getMultiplierv2(totalAmount, bullAmount)\n  const bearMultiplier = getMultiplierv2(totalAmount, bearAmount)\n\n  const formattedBullMultiplier = bullMultiplier.toUnsafeFloat().toFixed(bullMultiplier.isZero() ? 0 : 2)\n  const formattedbearMultiplier = bearMultiplier.toUnsafeFloat().toFixed(bearMultiplier.isZero() ? 0 : 2)\n\n  // Next (open) round\n  if (epoch === currentEpoch && lockPrice === null) {\n    return (\n      <OpenRoundCard\n        round={round}\n        hasEnteredDown={hasEnteredDown}\n        hasEnteredUp={hasEnteredUp}\n        betAmount={ledger?.amount}\n        bullMultiplier={formattedBullMultiplier}\n        bearMultiplier={formattedbearMultiplier}\n      />\n    )\n  }\n\n  // Live round\n  if (closePrice === null && epoch === currentEpoch - 1) {\n    return (\n      <LiveRoundCard\n        betAmount={ledger?.amount}\n        hasEnteredDown={hasEnteredDown}\n        hasEnteredUp={hasEnteredUp}\n        round={round}\n        bullMultiplier={formattedBullMultiplier}\n        bearMultiplier={formattedbearMultiplier}\n      />\n    )\n  }\n\n  // Fake future rounds\n  if (epoch > currentEpoch) {\n    return <SoonRoundCard round={round} />\n  }\n\n  // Past rounds\n  return (\n    <ExpiredRoundCard\n      round={round}\n      hasEnteredDown={hasEnteredDown}\n      hasEnteredUp={hasEnteredUp}\n      betAmount={ledger?.amount}\n      bullMultiplier={formattedBullMultiplier}\n      bearMultiplier={formattedbearMultiplier}\n    />\n  )\n}\n\nexport default RoundCard\n"]},"metadata":{},"sourceType":"module"}