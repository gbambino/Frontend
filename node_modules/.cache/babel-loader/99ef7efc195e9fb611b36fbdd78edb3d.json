{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import{Flex,Text}from'@pancakeswap/uikit';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getBackgroundColor=function getBackgroundColor(theme,status){switch(status){case'calculating':return theme.colors.gradients.cardHeader;case'live':return'transparent';case'canceled':return theme.colors.warning;case'next':return theme.colors.secondary;case'expired':case'soon':default:return theme.colors.cardBorder;}};var getTextColorByStatus=function getTextColorByStatus(status,fallback){switch(status){case'expired':return'textDisabled';case'next':return'white';case'live':return'secondary';case'canceled':case'calculating':return'text';default:return fallback;}};var StyledCardHeader=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  background: \",\";\\n  border-radius: 16px 16px 0 0;\\n  display: flex;\\n  justify-content: space-between;\\n  padding: \",\";\\n\"])),function(_ref){var theme=_ref.theme,status=_ref.status;return getBackgroundColor(theme,status);},function(_ref2){var status=_ref2.status;return status==='live'?'16px':'8px';});var Round=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  justify-self: center;\\n\"])));var CardHeader=function CardHeader(_ref3){var status=_ref3.status,title=_ref3.title,epoch=_ref3.epoch,icon=_ref3.icon;var textColor=getTextColorByStatus(status,'text');var isLive=status==='live';return/*#__PURE__*/_jsxs(StyledCardHeader,{status:status,children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[icon,/*#__PURE__*/_jsx(Text,{color:textColor,bold:isLive,textTransform:isLive?'uppercase':'capitalize',lineHeight:\"21px\",children:title})]}),/*#__PURE__*/_jsx(Round,{children:/*#__PURE__*/_jsx(Text,{fontSize:isLive?'14px':'12px',color:getTextColorByStatus(status,'textSubtle'),textAlign:\"center\",children:\"#\".concat(epoch)})})]});};export default CardHeader;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Predictions/components/RoundCard/CardHeader.tsx"],"names":["React","Flex","Text","styled","getBackgroundColor","theme","status","colors","gradients","cardHeader","warning","secondary","cardBorder","getTextColorByStatus","fallback","StyledCardHeader","div","Round","CardHeader","title","epoch","icon","textColor","isLive"],"mappings":"2MAAA,MAAOA,CAAAA,KAAP,KAAoC,OAApC,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,oBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAqC,mBAArC,C,wFAYA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAsBC,MAAtB,CAAyC,CAClE,OAAQA,MAAR,EACE,IAAK,aAAL,CACE,MAAOD,CAAAA,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,UAA9B,CACF,IAAK,MAAL,CACE,MAAO,aAAP,CACF,IAAK,UAAL,CACE,MAAOJ,CAAAA,KAAK,CAACE,MAAN,CAAaG,OAApB,CACF,IAAK,MAAL,CACE,MAAOL,CAAAA,KAAK,CAACE,MAAN,CAAaI,SAApB,CACF,IAAK,SAAL,CACA,IAAK,MAAL,CACA,QACE,MAAON,CAAAA,KAAK,CAACE,MAAN,CAAaK,UAApB,CAZJ,CAcD,CAfD,CAoBA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACP,MAAD,CAAiBQ,QAAjB,CAAwD,CACnF,OAAQR,MAAR,EACE,IAAK,SAAL,CACE,MAAO,cAAP,CACF,IAAK,MAAL,CACE,MAAO,OAAP,CACF,IAAK,MAAL,CACE,MAAO,WAAP,CACF,IAAK,UAAL,CACA,IAAK,aAAL,CACE,MAAO,MAAP,CACF,QACE,MAAOQ,CAAAA,QAAP,CAXJ,CAaD,CAdD,CAgBA,GAAMC,CAAAA,gBAAgB,CAAGZ,MAAM,CAACa,GAAV,sNAEN,kBAAGX,CAAAA,KAAH,MAAGA,KAAH,CAAUC,MAAV,MAAUA,MAAV,OAAuBF,CAAAA,kBAAkB,CAACC,KAAD,CAAQC,MAAR,CAAzC,EAFM,CAMT,mBAAGA,CAAAA,MAAH,OAAGA,MAAH,OAAiBA,CAAAA,MAAM,GAAK,MAAX,CAAoB,MAApB,CAA6B,KAA9C,EANS,CAAtB,CASA,GAAMW,CAAAA,KAAK,CAAGd,MAAM,CAACa,GAAV,8FAAX,CAIA,GAAME,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,OAAoC,IAAjCZ,CAAAA,MAAiC,OAAjCA,MAAiC,CAAzBa,KAAyB,OAAzBA,KAAyB,CAAlBC,KAAkB,OAAlBA,KAAkB,CAAXC,IAAW,OAAXA,IAAW,CAChF,GAAMC,CAAAA,SAAS,CAAGT,oBAAoB,CAACP,MAAD,CAAS,MAAT,CAAtC,CACA,GAAMiB,CAAAA,MAAM,CAAGjB,MAAM,GAAK,MAA1B,CAEA,mBACE,MAAC,gBAAD,EAAkB,MAAM,CAAEA,MAA1B,wBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,WACGe,IADH,cAEE,KAAC,IAAD,EAAM,KAAK,CAAEC,SAAb,CAAwB,IAAI,CAAEC,MAA9B,CAAsC,aAAa,CAAEA,MAAM,CAAG,WAAH,CAAiB,YAA5E,CAA0F,UAAU,CAAC,MAArG,UACGJ,KADH,EAFF,GADF,cAOE,KAAC,KAAD,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAEI,MAAM,CAAG,MAAH,CAAY,MAAlC,CAA0C,KAAK,CAAEV,oBAAoB,CAACP,MAAD,CAAS,YAAT,CAArE,CAA6F,SAAS,CAAC,QAAvG,qBACOc,KADP,GADF,EAPF,GADF,CAeD,CAnBD,CAqBA,cAAeF,CAAAA,UAAf","sourcesContent":["import React, { ReactElement } from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\ntype Status = 'expired' | 'live' | 'next' | 'soon' | 'canceled' | 'calculating'\n\ninterface CardHeaderProps {\n  status: Status\n  title: string\n  epoch: number\n  blockNumber: number\n  icon?: ReactElement\n}\n\nconst getBackgroundColor = (theme: DefaultTheme, status: Status) => {\n  switch (status) {\n    case 'calculating':\n      return theme.colors.gradients.cardHeader\n    case 'live':\n      return 'transparent'\n    case 'canceled':\n      return theme.colors.warning\n    case 'next':\n      return theme.colors.secondary\n    case 'expired':\n    case 'soon':\n    default:\n      return theme.colors.cardBorder\n  }\n}\n\ntype TextColor = 'textDisabled' | 'white' | 'secondary' | 'text' | 'textSubtle'\ntype FallbackColor = 'text' | 'textSubtle'\n\nconst getTextColorByStatus = (status: Status, fallback: FallbackColor): TextColor => {\n  switch (status) {\n    case 'expired':\n      return 'textDisabled'\n    case 'next':\n      return 'white'\n    case 'live':\n      return 'secondary'\n    case 'canceled':\n    case 'calculating':\n      return 'text'\n    default:\n      return fallback\n  }\n}\n\nconst StyledCardHeader = styled.div<{ status: Status }>`\n  align-items: center;\n  background: ${({ theme, status }) => getBackgroundColor(theme, status)};\n  border-radius: 16px 16px 0 0;\n  display: flex;\n  justify-content: space-between;\n  padding: ${({ status }) => (status === 'live' ? '16px' : '8px')};\n`\n\nconst Round = styled.div`\n  justify-self: center;\n`\n\nconst CardHeader: React.FC<CardHeaderProps> = ({ status, title, epoch, icon }) => {\n  const textColor = getTextColorByStatus(status, 'text')\n  const isLive = status === 'live'\n\n  return (\n    <StyledCardHeader status={status}>\n      <Flex alignItems=\"center\">\n        {icon}\n        <Text color={textColor} bold={isLive} textTransform={isLive ? 'uppercase' : 'capitalize'} lineHeight=\"21px\">\n          {title}\n        </Text>\n      </Flex>\n      <Round>\n        <Text fontSize={isLive ? '14px' : '12px'} color={getTextColorByStatus(status, 'textSubtle')} textAlign=\"center\">\n          {`#${epoch}`}\n        </Text>\n      </Round>\n    </StyledCardHeader>\n  )\n}\n\nexport default CardHeader\n"]},"metadata":{},"sourceType":"module"}