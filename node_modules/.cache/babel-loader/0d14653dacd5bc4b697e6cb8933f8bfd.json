{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/src/views/Home/components/LotteryPromotionCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton, Text } from '@pancakeswap/uikit';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'contexts/Localization';\nimport { usePriceCakeBusd } from 'state/hooks';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport Balance from 'components/Balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`;\n_c = StyledFarmStakingCard;\nconst PrizeText = styled(Text)`\n  word-wrap: break-word;\n`;\n_c2 = PrizeText;\n\nconst LotteryPromotionCard = ({\n  currentLotteryPrize\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const cakePriceBusd = usePriceCakeBusd();\n  const prizeInBusd = cakePriceBusd.times(currentLotteryPrize);\n  const prizeTotal = getBalanceNumber(prizeInBusd);\n  const prizeTotalText = prizeInBusd.isNaN() ? prizeTotal.toString() : '-';\n  const prizeText = t('Contract Address: ');\n  const [over, inPrizes] = prizeText.split(prizeTotalText);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      exact: true,\n      activeClassName: \"active\",\n      to: \"/lottery\",\n      id: \"lottery-pot-cta\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"contrast\",\n          scale: \"lg\",\n          children: t('Contract Addresses')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrizeText, {\n          color: \"#7645d9\",\n          fontSize: \"40px\",\n          bold: true,\n          lineHeight: \"1.1\",\n          children: over\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), prizeInBusd.isNaN() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 60,\n            width: 210\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"40px\",\n          color: \"#7645d9\",\n          bold: true,\n          lineHeight: \"1.1\",\n          prefix: \"$\",\n          decimals: 0,\n          value: prizeTotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(PrizeText, {\n            color: \"contrast\",\n            fontSize: \"28px\",\n            bold: true,\n            lineHeight: \"1.1\",\n            children: inPrizes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n            mt: 30,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LotteryPromotionCard, \"vmqtI5HVIrEp4jEZDUzzJIWSERY=\", false, function () {\n  return [useTranslation, usePriceCakeBusd];\n});\n\n_c3 = LotteryPromotionCard;\nexport default LotteryPromotionCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"PrizeText\");\n$RefreshReg$(_c3, \"LotteryPromotionCard\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Home/components/LotteryPromotionCard.tsx"],"names":["React","styled","Heading","Card","CardBody","Flex","ArrowForwardIcon","Skeleton","Text","NavLink","useTranslation","usePriceCakeBusd","getBalanceNumber","Balance","StyledFarmStakingCard","theme","mediaQueries","lg","PrizeText","LotteryPromotionCard","currentLotteryPrize","t","cakePriceBusd","prizeInBusd","times","prizeTotal","prizeTotalText","isNaN","toString","prizeText","over","inPrizes","split"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,IAAlC,EAAwCC,gBAAxC,EAA0DC,QAA1D,EAAoEC,IAApE,QAAgF,oBAAhF;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,qBAAqB,GAAGb,MAAM,CAACE,IAAD,CAAO;AAC3C;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEY,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;KAAMH,qB;AAgBN,MAAMI,SAAS,GAAGjB,MAAM,CAACO,IAAD,CAAO;AAC/B;AACA,CAFA;MAAMU,S;;AAIN,MAAMC,oBAA+D,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AACnG,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,QAAMY,aAAa,GAAGX,gBAAgB,EAAtC;AACA,QAAMY,WAAW,GAAGD,aAAa,CAACE,KAAd,CAAoBJ,mBAApB,CAApB;AACA,QAAMK,UAAU,GAAGb,gBAAgB,CAACW,WAAD,CAAnC;AAEA,QAAMG,cAAc,GAAGH,WAAW,CAACI,KAAZ,KAAsBF,UAAU,CAACG,QAAX,EAAtB,GAA8C,GAArE;AACA,QAAMC,SAAS,GAAGR,CAAC,CAAC,oBAAD,CAAnB;AACA,QAAM,CAACS,IAAD,EAAOC,QAAP,IAAmBF,SAAS,CAACG,KAAV,CAAgBN,cAAhB,CAAzB;AAEA,sBACE,QAAC,qBAAD;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,eAAe,EAAC,QAA/B;AAAwC,MAAA,EAAE,EAAC,UAA3C;AAAsD,MAAA,EAAE,EAAC,iBAAzD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,UAAf;AAA0B,UAAA,KAAK,EAAC,IAAhC;AAAA,oBACGL,CAAC,CAAC,oBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,SAAjB;AAA2B,UAAA,QAAQ,EAAC,MAApC;AAA2C,UAAA,IAAI,MAA/C;AAAgD,UAAA,UAAU,EAAC,KAA3D;AAAA,oBACGS;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF,EAOGP,WAAW,CAACI,KAAZ,kBACC;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,MAAM,EAAE,EAAlB;AAAsB,YAAA,KAAK,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF,yBADD,gBAKC,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAC,MAAlB;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAyC,UAAA,IAAI,MAA7C;AAA8C,UAAA,UAAU,EAAC,KAAzD;AAA+D,UAAA,MAAM,EAAC,GAAtE;AAA0E,UAAA,QAAQ,EAAE,CAApF;AAAuF,UAAA,KAAK,EAAEF;AAA9F;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAcE,QAAC,IAAD;AAAM,UAAA,cAAc,EAAC,eAArB;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,UAAjB;AAA4B,YAAA,QAAQ,EAAC,MAArC;AAA4C,YAAA,IAAI,MAAhD;AAAiD,YAAA,UAAU,EAAC,KAA5D;AAAA,sBACGM;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAA0B,YAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CArCD;;GAAMZ,oB;UACUT,c,EACQC,gB;;;MAFlBQ,oB;AAuCN,eAAeA,oBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton, Text } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\n\nconst PrizeText = styled(Text)`\n  word-wrap: break-word;\n`\n\nconst LotteryPromotionCard: React.FC<{ currentLotteryPrize: string }> = ({ currentLotteryPrize }) => {\n  const { t } = useTranslation()\n  const cakePriceBusd = usePriceCakeBusd()\n  const prizeInBusd = cakePriceBusd.times(currentLotteryPrize)\n  const prizeTotal = getBalanceNumber(prizeInBusd)\n\n  const prizeTotalText = prizeInBusd.isNaN() ? prizeTotal.toString() : '-'\n  const prizeText = t('Contract Address: ')\n  const [over, inPrizes] = prizeText.split(prizeTotalText)\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/lottery\" id=\"lottery-pot-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            {t('Contract Addresses')}\n          </Heading>\n          <PrizeText color=\"#7645d9\" fontSize=\"40px\" bold lineHeight=\"1.1\">\n            {over}\n          </PrizeText>\n          {prizeInBusd.isNaN() ? (\n            <>\n              <Skeleton height={60} width={210} />\n            </>\n          ) : (\n            <Balance fontSize=\"40px\" color=\"#7645d9\" bold lineHeight=\"1.1\" prefix=\"$\" decimals={0} value={prizeTotal} />\n          )}\n          <Flex justifyContent=\"space-between\">\n            <PrizeText color=\"contrast\" fontSize=\"28px\" bold lineHeight=\"1.1\">\n              {inPrizes}\n            </PrizeText>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default LotteryPromotionCard\n"]},"metadata":{},"sourceType":"module"}