{"ast":null,"code":"import React from'react';import{CardBody,Text,WaitIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import{useGetCurrentEpoch,useGetTotalIntervalBlocks}from'state/hooks';import{formatRoundTime}from'../../helpers';import useRoundCountdown from'../../hooks/useRoundCountdown';import{RoundResultBox}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import Card from'./Card';import CardHeader from'./CardHeader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SoonRoundCard=function SoonRoundCard(_ref){var round=_ref.round;var _useTranslation=useTranslation(),t=_useTranslation.t;var interval=useGetTotalIntervalBlocks();var currentEpoch=useGetCurrentEpoch();var estimatedEndBlock=round.startBlock+interval;var seconds=useRoundCountdown(round.epoch-currentEpoch+1);var countdown=formatRoundTime(seconds);return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{status:\"soon\",icon:/*#__PURE__*/_jsx(WaitIcon,{mr:\"4px\",width:\"21px\"}),title:t('Later'),epoch:round.epoch,blockNumber:estimatedEndBlock}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",children:[/*#__PURE__*/_jsx(MultiplierArrow,{isDisabled:true}),/*#__PURE__*/_jsx(RoundResultBox,{children:/*#__PURE__*/_jsxs(Text,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,children:t('Entry starts')}),/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",bold:true,children:\"~\".concat(countdown)})]})}),/*#__PURE__*/_jsx(MultiplierArrow,{betPosition:BetPosition.BEAR,isDisabled:true})]})]});};export default SoonRoundCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/RoundCard/SoonRoundCard.tsx"],"names":["React","CardBody","Text","WaitIcon","useTranslation","BetPosition","useGetCurrentEpoch","useGetTotalIntervalBlocks","formatRoundTime","useRoundCountdown","RoundResultBox","MultiplierArrow","Card","CardHeader","SoonRoundCard","round","t","interval","currentEpoch","estimatedEndBlock","startBlock","seconds","epoch","countdown","BEAR"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,IAAnB,CAAyBC,QAAzB,KAAyC,oBAAzC,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAAoBC,WAApB,KAAuC,aAAvC,CACA,OAASC,kBAAT,CAA6BC,yBAA7B,KAA8D,aAA9D,CACA,OAASC,eAAT,KAAgC,eAAhC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,+BAA9B,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,wFAMA,GAAMC,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACjE,oBAAcX,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGV,yBAAyB,EAA1C,CACA,GAAMW,CAAAA,YAAY,CAAGZ,kBAAkB,EAAvC,CACA,GAAMa,CAAAA,iBAAiB,CAAGJ,KAAK,CAACK,UAAN,CAAmBH,QAA7C,CACA,GAAMI,CAAAA,OAAO,CAAGZ,iBAAiB,CAACM,KAAK,CAACO,KAAN,CAAcJ,YAAd,CAA6B,CAA9B,CAAjC,CACA,GAAMK,CAAAA,SAAS,CAAGf,eAAe,CAACa,OAAD,CAAjC,CAEA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,EACE,MAAM,CAAC,MADT,CAEE,IAAI,cAAE,KAAC,QAAD,EAAU,EAAE,CAAC,KAAb,CAAmB,KAAK,CAAC,MAAzB,EAFR,CAGE,KAAK,CAAEL,CAAC,CAAC,OAAD,CAHV,CAIE,KAAK,CAAED,KAAK,CAACO,KAJf,CAKE,WAAW,CAAEH,iBALf,EADF,cAQE,MAAC,QAAD,EAAU,CAAC,CAAC,MAAZ,wBACE,KAAC,eAAD,EAAiB,UAAU,KAA3B,EADF,cAEE,KAAC,cAAD,wBACE,MAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,UAAYH,CAAC,CAAC,cAAD,CAAb,EADF,cAEE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,IAAI,KAA1B,qBACOO,SADP,GAFF,GADF,EAFF,cAUE,KAAC,eAAD,EAAiB,WAAW,CAAElB,WAAW,CAACmB,IAA1C,CAAgD,UAAU,KAA1D,EAVF,GARF,GADF,CAuBD,CA/BD,CAiCA,cAAeV,CAAAA,aAAf","sourcesContent":["import React from 'react'\nimport { CardBody, Text, WaitIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition } from 'state/types'\nimport { useGetCurrentEpoch, useGetTotalIntervalBlocks } from 'state/hooks'\nimport { formatRoundTime } from '../../helpers'\nimport useRoundCountdown from '../../hooks/useRoundCountdown'\nimport { RoundResultBox } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport Card from './Card'\nimport CardHeader from './CardHeader'\n\ninterface SoonRoundCardProps {\n  round: NodeRound\n}\n\nconst SoonRoundCard: React.FC<SoonRoundCardProps> = ({ round }) => {\n  const { t } = useTranslation()\n  const interval = useGetTotalIntervalBlocks()\n  const currentEpoch = useGetCurrentEpoch()\n  const estimatedEndBlock = round.startBlock + interval\n  const seconds = useRoundCountdown(round.epoch - currentEpoch + 1)\n  const countdown = formatRoundTime(seconds)\n\n  return (\n    <Card>\n      <CardHeader\n        status=\"soon\"\n        icon={<WaitIcon mr=\"4px\" width=\"21px\" />}\n        title={t('Later')}\n        epoch={round.epoch}\n        blockNumber={estimatedEndBlock}\n      />\n      <CardBody p=\"16px\">\n        <MultiplierArrow isDisabled />\n        <RoundResultBox>\n          <Text textAlign=\"center\">\n            <Text bold>{t('Entry starts')}</Text>\n            <Text fontSize=\"24px\" bold>\n              {`~${countdown}`}\n            </Text>\n          </Text>\n        </RoundResultBox>\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SoonRoundCard\n"]},"metadata":{},"sourceType":"module"}