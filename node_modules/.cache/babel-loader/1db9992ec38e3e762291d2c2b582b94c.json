{"ast":null,"code":"import _defineProperty from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useEffect,useMemo}from'react';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{useSelector}from'react-redux';import{ethers}from'ethers';import{minBy,orderBy}from'lodash';import{useAppDispatch}from'state';import Nfts from'config/constants/nfts';import{farmsConfig}from'config/constants';import{simpleRpcProvider}from'utils/providers';import{getBalanceAmount}from'utils/formatBalance';import{BIG_ZERO}from'utils/bigNumber';import useRefresh from'hooks/useRefresh';import{filterFarmsByQuoteToken}from'utils/farmsPriceHelpers';import{fetchFarmsPublicDataAsync,fetchPoolsPublicDataAsync,fetchPoolsUserDataAsync,fetchCakeVaultPublicData,fetchCakeVaultUserData,fetchCakeVaultFees,setBlock}from'./actions';import{fetchProfile}from'./profile';import{fetchTeam,fetchTeams}from'./teams';import{fetchAchievements}from'./achievements';import{fetchWalletNfts}from'./collectibles';import{parseBigNumberObj}from'./predictions/helpers';import{transformPool}from'./pools/helpers';import{fetchPoolsStakingLimitsAsync}from'./pools';import{fetchFarmUserDataAsync,nonArchivedFarms}from'./farms';import{fetchCurrentLotteryId,fetchCurrentLottery,fetchUserTicketsAndLotteries,fetchPastLotteries}from'./lottery';import{useProcessLotteryResponse}from'./lottery/helpers';export var usePollFarmsData=function usePollFarmsData(){var includeArchive=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var dispatch=useAppDispatch();var _useRefresh=useRefresh(),slowRefresh=_useRefresh.slowRefresh;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;useEffect(function(){var farmsToFetch=includeArchive?farmsConfig:nonArchivedFarms;var pids=farmsToFetch.map(function(farmToFetch){return farmToFetch.pid;});dispatch(fetchFarmsPublicDataAsync(pids));if(account){dispatch(fetchFarmUserDataAsync({account:account,pids:pids}));}},[includeArchive,dispatch,slowRefresh,account]);};/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */export var usePollCoreFarmData=function usePollCoreFarmData(){var dispatch=useAppDispatch();var _useRefresh2=useRefresh(),fastRefresh=_useRefresh2.fastRefresh;useEffect(function(){dispatch(fetchFarmsPublicDataAsync([251,252]));},[dispatch,fastRefresh]);};export var usePollBlockNumber=function usePollBlockNumber(){var dispatch=useAppDispatch();useEffect(function(){var interval=setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var blockNumber;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return simpleRpcProvider.getBlockNumber();case 2:blockNumber=_context.sent;dispatch(setBlock(blockNumber));case 4:case\"end\":return _context.stop();}}},_callee);})),6000);return function(){return clearInterval(interval);};},[dispatch]);};// Farms\nexport var useFarms=function useFarms(){var farms=useSelector(function(state){return state.farms;});return farms;};export var useFarmFromPid=function useFarmFromPid(pid){var farm=useSelector(function(state){return state.farms.data.find(function(f){return f.pid===pid;});});return farm;};export var useFarmFromLpSymbol=function useFarmFromLpSymbol(lpSymbol){var farm=useSelector(function(state){return state.farms.data.find(function(f){return f.lpSymbol===lpSymbol;});});return farm;};export var useFarmUser=function useFarmUser(pid){var farm=useFarmFromPid(pid);return{allowance:farm.userData?new BigNumber(farm.userData.allowance):BIG_ZERO,tokenBalance:farm.userData?new BigNumber(farm.userData.tokenBalance):BIG_ZERO,stakedBalance:farm.userData?new BigNumber(farm.userData.stakedBalance):BIG_ZERO,earnings:farm.userData?new BigNumber(farm.userData.earnings):BIG_ZERO};};// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport var useFarmFromTokenSymbol=function useFarmFromTokenSymbol(tokenSymbol,preferredQuoteTokens){var farms=useSelector(function(state){return state.farms.data.filter(function(farm){return farm.token.symbol===tokenSymbol;});});var filteredFarm=filterFarmsByQuoteToken(farms,preferredQuoteTokens);return filteredFarm;};// Return the base token price for a farm, from a given pid\nexport var useBusdPriceFromPid=function useBusdPriceFromPid(pid){var farm=useFarmFromPid(pid);return farm&&new BigNumber(farm.token.busdPrice);};export var useBusdPriceFromToken=function useBusdPriceFromToken(tokenSymbol){var tokenFarm=useFarmFromTokenSymbol(tokenSymbol);var tokenPrice=useBusdPriceFromPid(tokenFarm===null||tokenFarm===void 0?void 0:tokenFarm.pid);return tokenPrice;};export var useLpTokenPrice=function useLpTokenPrice(symbol){var farm=useFarmFromLpSymbol(symbol);var farmTokenPriceInUsd=useBusdPriceFromPid(farm.pid);var lpTokenPrice=BIG_ZERO;if(farm.lpTotalSupply&&farm.lpTotalInQuoteToken){// Total value of base token in LP\nvar valueOfBaseTokenInFarm=farmTokenPriceInUsd.times(farm.tokenAmountTotal);// Double it to get overall value in LP\nvar overallValueOfAllTokensInFarm=valueOfBaseTokenInFarm.times(2);// Divide total value of all tokens, by the number of LP tokens\nvar totalLpTokens=getBalanceAmount(new BigNumber(farm.lpTotalSupply));lpTokenPrice=overallValueOfAllTokensInFarm.div(totalLpTokens);}return lpTokenPrice;};// Pools\nexport var useFetchPublicPoolsData=function useFetchPublicPoolsData(){var dispatch=useAppDispatch();var _useRefresh3=useRefresh(),slowRefresh=_useRefresh3.slowRefresh;useEffect(function(){var fetchPoolsPublicData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var blockNumber;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return simpleRpcProvider.getBlockNumber();case 2:blockNumber=_context2.sent;dispatch(fetchPoolsPublicDataAsync(blockNumber));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchPoolsPublicData(){return _ref2.apply(this,arguments);};}();fetchPoolsPublicData();dispatch(fetchPoolsStakingLimitsAsync());},[dispatch,slowRefresh]);};export var usePools=function usePools(account){var _useRefresh4=useRefresh(),fastRefresh=_useRefresh4.fastRefresh;var dispatch=useAppDispatch();useEffect(function(){if(account){dispatch(fetchPoolsUserDataAsync(account));}},[account,dispatch,fastRefresh]);var _useSelector=useSelector(function(state){return{pools:state.pools.data,userDataLoaded:state.pools.userDataLoaded};}),pools=_useSelector.pools,userDataLoaded=_useSelector.userDataLoaded;return{pools:pools.map(transformPool),userDataLoaded:userDataLoaded};};export var usePoolFromPid=function usePoolFromPid(sousId){var pool=useSelector(function(state){return state.pools.data.find(function(p){return p.sousId===sousId;});});return transformPool(pool);};export var useFetchCakeVault=function useFetchCakeVault(){var _useWeb3React2=useWeb3React(),account=_useWeb3React2.account;var _useRefresh5=useRefresh(),fastRefresh=_useRefresh5.fastRefresh;var dispatch=useAppDispatch();useEffect(function(){dispatch(fetchCakeVaultPublicData());},[dispatch,fastRefresh]);useEffect(function(){dispatch(fetchCakeVaultUserData({account:account}));},[dispatch,fastRefresh,account]);useEffect(function(){dispatch(fetchCakeVaultFees());},[dispatch]);};export var useCakeVault=function useCakeVault(){var _useSelector2=useSelector(function(state){return state.pools.cakeVault;}),totalSharesAsString=_useSelector2.totalShares,pricePerFullShareAsString=_useSelector2.pricePerFullShare,totalCakeInVaultAsString=_useSelector2.totalCakeInVault,estimatedCakeBountyRewardAsString=_useSelector2.estimatedCakeBountyReward,totalPendingCakeHarvestAsString=_useSelector2.totalPendingCakeHarvest,_useSelector2$fees=_useSelector2.fees,performanceFee=_useSelector2$fees.performanceFee,callFee=_useSelector2$fees.callFee,withdrawalFee=_useSelector2$fees.withdrawalFee,withdrawalFeePeriod=_useSelector2$fees.withdrawalFeePeriod,_useSelector2$userDat=_useSelector2.userData,isLoading=_useSelector2$userDat.isLoading,userSharesAsString=_useSelector2$userDat.userShares,cakeAtLastUserActionAsString=_useSelector2$userDat.cakeAtLastUserAction,lastDepositedTime=_useSelector2$userDat.lastDepositedTime,lastUserActionTime=_useSelector2$userDat.lastUserActionTime;var estimatedCakeBountyReward=useMemo(function(){return new BigNumber(estimatedCakeBountyRewardAsString);},[estimatedCakeBountyRewardAsString]);var totalPendingCakeHarvest=useMemo(function(){return new BigNumber(totalPendingCakeHarvestAsString);},[totalPendingCakeHarvestAsString]);var totalShares=useMemo(function(){return new BigNumber(totalSharesAsString);},[totalSharesAsString]);var pricePerFullShare=useMemo(function(){return new BigNumber(pricePerFullShareAsString);},[pricePerFullShareAsString]);var totalCakeInVault=useMemo(function(){return new BigNumber(totalCakeInVaultAsString);},[totalCakeInVaultAsString]);var userShares=useMemo(function(){return new BigNumber(userSharesAsString);},[userSharesAsString]);var cakeAtLastUserAction=useMemo(function(){return new BigNumber(cakeAtLastUserActionAsString);},[cakeAtLastUserActionAsString]);return{totalShares:totalShares,pricePerFullShare:pricePerFullShare,totalCakeInVault:totalCakeInVault,estimatedCakeBountyReward:estimatedCakeBountyReward,totalPendingCakeHarvest:totalPendingCakeHarvest,fees:{performanceFee:performanceFee,callFee:callFee,withdrawalFee:withdrawalFee,withdrawalFeePeriod:withdrawalFeePeriod},userData:{isLoading:isLoading,userShares:userShares,cakeAtLastUserAction:cakeAtLastUserAction,lastDepositedTime:lastDepositedTime,lastUserActionTime:lastUserActionTime}};};// Profile\nexport var useFetchProfile=function useFetchProfile(){var _useWeb3React3=useWeb3React(),account=_useWeb3React3.account;var dispatch=useAppDispatch();useEffect(function(){dispatch(fetchProfile(account));},[account,dispatch]);};export var useProfile=function useProfile(){var _useSelector3=useSelector(function(state){return state.profile;}),isInitialized=_useSelector3.isInitialized,isLoading=_useSelector3.isLoading,data=_useSelector3.data,hasRegistered=_useSelector3.hasRegistered;return{profile:data,hasProfile:isInitialized&&hasRegistered,isInitialized:isInitialized,isLoading:isLoading};};// Teams\nexport var useTeam=function useTeam(id){var team=useSelector(function(state){return state.teams.data[id];});var dispatch=useAppDispatch();useEffect(function(){dispatch(fetchTeam(id));},[id,dispatch]);return team;};export var useTeams=function useTeams(){var _useSelector4=useSelector(function(state){return state.teams;}),isInitialized=_useSelector4.isInitialized,isLoading=_useSelector4.isLoading,data=_useSelector4.data;var dispatch=useAppDispatch();useEffect(function(){dispatch(fetchTeams());},[dispatch]);return{teams:data,isInitialized:isInitialized,isLoading:isLoading};};// Achievements\nexport var useFetchAchievements=function useFetchAchievements(){var _useWeb3React4=useWeb3React(),account=_useWeb3React4.account;var dispatch=useAppDispatch();useEffect(function(){if(account){dispatch(fetchAchievements(account));}},[account,dispatch]);};export var useAchievements=function useAchievements(){var achievements=useSelector(function(state){return state.achievements.data;});return achievements;};export var usePriceBnbBusd=function usePriceBnbBusd(){var bnbBusdFarm=useFarmFromPid(252);return new BigNumber(bnbBusdFarm.quoteToken.busdPrice);};export var usePriceCakeBusd=function usePriceCakeBusd(){var cakeBnbFarm=useFarmFromPid(251);return new BigNumber(cakeBnbFarm.token.busdPrice);};// Block\nexport var useBlock=function useBlock(){return useSelector(function(state){return state.block;});};export var useInitialBlock=function useInitialBlock(){return useSelector(function(state){return state.block.initialBlock;});};// Predictions\nexport var useGetRounds=function useGetRounds(){var rounds=useSelector(function(state){return state.predictions.rounds;});return Object.keys(rounds).reduce(function(accum,epoch){return _objectSpread(_objectSpread({},accum),{},_defineProperty({},epoch,parseBigNumberObj(rounds[epoch])));},{});};export var useGetRound=function useGetRound(epoch){var round=useSelector(function(state){return state.predictions.rounds[epoch];});return parseBigNumberObj(round);};export var useGetSortedRounds=function useGetSortedRounds(){var roundData=useGetRounds();return orderBy(Object.values(roundData),['epoch'],['asc']);};export var useGetBetByEpoch=function useGetBetByEpoch(account,epoch){var bets=useSelector(function(state){return state.predictions.ledgers;});if(!bets[account]){return null;}if(!bets[account][epoch]){return null;}return parseBigNumberObj(bets[account][epoch]);};export var useGetIsClaimable=function useGetIsClaimable(epoch){var claimableStatuses=useSelector(function(state){return state.predictions.claimableStatuses;});return claimableStatuses[epoch]||false;};/**\n * Used to get the range of rounds to poll for\n */export var useGetEarliestEpoch=function useGetEarliestEpoch(){return useSelector(function(state){var earliestRound=minBy(Object.values(state.predictions.rounds),'epoch');return earliestRound===null||earliestRound===void 0?void 0:earliestRound.epoch;});};export var useIsHistoryPaneOpen=function useIsHistoryPaneOpen(){return useSelector(function(state){return state.predictions.isHistoryPaneOpen;});};export var useIsChartPaneOpen=function useIsChartPaneOpen(){return useSelector(function(state){return state.predictions.isChartPaneOpen;});};export var useGetCurrentEpoch=function useGetCurrentEpoch(){return useSelector(function(state){return state.predictions.currentEpoch;});};export var useGetIntervalBlocks=function useGetIntervalBlocks(){return useSelector(function(state){return state.predictions.intervalBlocks;});};export var useGetBufferBlocks=function useGetBufferBlocks(){return useSelector(function(state){return state.predictions.bufferBlocks;});};export var useGetTotalIntervalBlocks=function useGetTotalIntervalBlocks(){var intervalBlocks=useGetIntervalBlocks();var bufferBlocks=useGetBufferBlocks();return intervalBlocks+bufferBlocks;};export var useGetCurrentRound=function useGetCurrentRound(){var currentEpoch=useGetCurrentEpoch();var rounds=useGetSortedRounds();return rounds.find(function(round){return round.epoch===currentEpoch;});};export var useGetPredictionsStatus=function useGetPredictionsStatus(){return useSelector(function(state){return state.predictions.status;});};export var useGetHistoryFilter=function useGetHistoryFilter(){return useSelector(function(state){return state.predictions.historyFilter;});};export var useGetCurrentRoundBlockNumber=function useGetCurrentRoundBlockNumber(){return useSelector(function(state){return state.predictions.currentRoundStartBlockNumber;});};export var useGetMinBetAmount=function useGetMinBetAmount(){var minBetAmount=useSelector(function(state){return state.predictions.minBetAmount;});return useMemo(function(){return ethers.BigNumber.from(minBetAmount);},[minBetAmount]);};export var useGetRewardRate=function useGetRewardRate(){var rewardRate=useSelector(function(state){return state.predictions.rewardRate;});return rewardRate/100;};export var useGetIsFetchingHistory=function useGetIsFetchingHistory(){return useSelector(function(state){return state.predictions.isFetchingHistory;});};export var useGetHistory=function useGetHistory(){return useSelector(function(state){return state.predictions.history;});};export var useGetHistoryByAccount=function useGetHistoryByAccount(account){var bets=useGetHistory();return bets?bets[account]:[];};export var useGetLedgerByRoundId=function useGetLedgerByRoundId(account,roundId){var ledgers=useSelector(function(state){return state.predictions.ledgers;});if(!ledgers[account]){return null;}if(!ledgers[account][roundId]){return null;}return ledgers[account][roundId];};export var useGetLastOraclePrice=function useGetLastOraclePrice(){var lastOraclePrice=useSelector(function(state){return state.predictions.lastOraclePrice;});return useMemo(function(){return ethers.BigNumber.from(lastOraclePrice);},[lastOraclePrice]);};// Collectibles\nexport var useGetCollectibles=function useGetCollectibles(){var _useWeb3React5=useWeb3React(),account=_useWeb3React5.account;var dispatch=useAppDispatch();var _useSelector5=useSelector(function(state){return state.collectibles;}),isInitialized=_useSelector5.isInitialized,isLoading=_useSelector5.isLoading,data=_useSelector5.data;var identifiers=Object.keys(data);useEffect(function(){// Fetch nfts only if we have not done so already\nif(!isInitialized){dispatch(fetchWalletNfts(account));}},[isInitialized,account,dispatch]);return{isInitialized:isInitialized,isLoading:isLoading,tokenIds:data,nftsInWallet:Nfts.filter(function(nft){return identifiers.includes(nft.identifier);})};};// Voting\nexport var useGetProposals=function useGetProposals(){var proposals=useSelector(function(state){return state.voting.proposals;});return Object.values(proposals);};export var useGetProposal=function useGetProposal(proposalId){var proposal=useSelector(function(state){return state.voting.proposals[proposalId];});return proposal;};export var useGetVotes=function useGetVotes(proposalId){var votes=useSelector(function(state){return state.voting.votes[proposalId];});return votes?votes.filter(function(vote){return vote._inValid!==true;}):[];};export var useGetVotingStateLoadingStatus=function useGetVotingStateLoadingStatus(){var votingStatus=useSelector(function(state){return state.voting.voteLoadingStatus;});return votingStatus;};export var useGetProposalLoadingStatus=function useGetProposalLoadingStatus(){var votingStatus=useSelector(function(state){return state.voting.proposalLoadingStatus;});return votingStatus;};// Lottery\nexport var useGetCurrentLotteryId=function useGetCurrentLotteryId(){return useSelector(function(state){return state.lottery.currentLotteryId;});};export var useGetUserLotteriesGraphData=function useGetUserLotteriesGraphData(){return useSelector(function(state){return state.lottery.userLotteryData;});};export var useGetUserLotteryGraphRoundById=function useGetUserLotteryGraphRoundById(lotteryId){var userLotteriesData=useGetUserLotteriesGraphData();return userLotteriesData.rounds.find(function(userRound){return userRound.lotteryId===lotteryId;});};export var useGetLotteriesGraphData=function useGetLotteriesGraphData(){return useSelector(function(state){return state.lottery.lotteriesData;});};export var useGetLotteryGraphDataById=function useGetLotteryGraphDataById(lotteryId){var lotteriesData=useGetLotteriesGraphData();return lotteriesData.find(function(lottery){return lottery.id===lotteryId;});};export var useFetchLottery=function useFetchLottery(){var _useWeb3React6=useWeb3React(),account=_useWeb3React6.account;var _useRefresh6=useRefresh(),fastRefresh=_useRefresh6.fastRefresh;var dispatch=useAppDispatch();var currentLotteryId=useGetCurrentLotteryId();useEffect(function(){// get current lottery ID, max tickets and historical lottery subgraph data\ndispatch(fetchCurrentLotteryId());dispatch(fetchPastLotteries());},[dispatch]);useEffect(function(){// get public data for current lottery\nif(currentLotteryId){dispatch(fetchCurrentLottery({currentLotteryId:currentLotteryId}));}},[dispatch,currentLotteryId,fastRefresh]);useEffect(function(){// get user tickets for current lottery, and user lottery subgraph data\nif(account&&currentLotteryId){dispatch(fetchUserTicketsAndLotteries({account:account,lotteryId:currentLotteryId}));}},[dispatch,currentLotteryId,account]);};export var useLottery=function useLottery(){var currentRound=useSelector(function(state){return state.lottery.currentRound;});var processedCurrentRound=useProcessLotteryResponse(currentRound);var isTransitioning=useSelector(function(state){return state.lottery.isTransitioning;});var currentLotteryId=useGetCurrentLotteryId();var userLotteryData=useGetUserLotteriesGraphData();var lotteriesData=useGetLotteriesGraphData();var maxNumberTicketsPerBuyOrClaimAsString=useSelector(function(state){return state.lottery.maxNumberTicketsPerBuyOrClaim;});var maxNumberTicketsPerBuyOrClaim=useMemo(function(){return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString);},[maxNumberTicketsPerBuyOrClaimAsString]);return{currentLotteryId:currentLotteryId,maxNumberTicketsPerBuyOrClaim:maxNumberTicketsPerBuyOrClaim,isTransitioning:isTransitioning,userLotteryData:userLotteryData,lotteriesData:lotteriesData,currentRound:processedCurrentRound};};","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/state/hooks.ts"],"names":["useEffect","useMemo","BigNumber","useWeb3React","useSelector","ethers","minBy","orderBy","useAppDispatch","Nfts","farmsConfig","simpleRpcProvider","getBalanceAmount","BIG_ZERO","useRefresh","filterFarmsByQuoteToken","fetchFarmsPublicDataAsync","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","setBlock","fetchProfile","fetchTeam","fetchTeams","fetchAchievements","fetchWalletNfts","parseBigNumberObj","transformPool","fetchPoolsStakingLimitsAsync","fetchFarmUserDataAsync","nonArchivedFarms","fetchCurrentLotteryId","fetchCurrentLottery","fetchUserTicketsAndLotteries","fetchPastLotteries","useProcessLotteryResponse","usePollFarmsData","includeArchive","dispatch","slowRefresh","account","farmsToFetch","pids","map","farmToFetch","pid","usePollCoreFarmData","fastRefresh","usePollBlockNumber","interval","setInterval","getBlockNumber","blockNumber","clearInterval","useFarms","farms","state","useFarmFromPid","farm","data","find","f","useFarmFromLpSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","useFarmFromTokenSymbol","tokenSymbol","preferredQuoteTokens","filter","token","symbol","filteredFarm","useBusdPriceFromPid","busdPrice","useBusdPriceFromToken","tokenFarm","tokenPrice","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","valueOfBaseTokenInFarm","times","tokenAmountTotal","overallValueOfAllTokensInFarm","totalLpTokens","div","useFetchPublicPoolsData","fetchPoolsPublicData","usePools","pools","userDataLoaded","usePoolFromPid","sousId","pool","p","useFetchCakeVault","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useFetchProfile","useProfile","profile","isInitialized","hasRegistered","hasProfile","useTeam","id","team","teams","useTeams","useFetchAchievements","useAchievements","achievements","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakeBnbFarm","useBlock","block","useInitialBlock","initialBlock","useGetRounds","rounds","predictions","Object","keys","reduce","accum","epoch","useGetRound","round","useGetSortedRounds","roundData","values","useGetBetByEpoch","bets","ledgers","useGetIsClaimable","claimableStatuses","useGetEarliestEpoch","earliestRound","useIsHistoryPaneOpen","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetBufferBlocks","bufferBlocks","useGetTotalIntervalBlocks","useGetCurrentRound","useGetPredictionsStatus","status","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","from","useGetRewardRate","rewardRate","useGetIsFetchingHistory","isFetchingHistory","useGetHistory","history","useGetHistoryByAccount","useGetLedgerByRoundId","roundId","useGetLastOraclePrice","lastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","nft","includes","identifier","useGetProposals","proposals","voting","useGetProposal","proposalId","proposal","useGetVotes","votes","vote","_inValid","useGetVotingStateLoadingStatus","votingStatus","voteLoadingStatus","useGetProposalLoadingStatus","proposalLoadingStatus","useGetCurrentLotteryId","lottery","currentLotteryId","useGetUserLotteriesGraphData","userLotteryData","useGetUserLotteryGraphRoundById","lotteryId","userLotteriesData","userRound","useGetLotteriesGraphData","lotteriesData","useGetLotteryGraphDataById","useFetchLottery","useLottery","currentRound","processedCurrentRound","isTransitioning","maxNumberTicketsPerBuyOrClaimAsString","maxNumberTicketsPerBuyOrClaim"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { ethers } from 'ethers'\nimport { minBy, orderBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport {\n  State,\n  Farm,\n  Pool,\n  ProfileState,\n  TeamsState,\n  AchievementState,\n  FarmsState,\n  NodeRound,\n  ReduxNodeLedger,\n  NodeLedger,\n  ReduxNodeRound,\n} from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { parseBigNumberObj } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPastLotteries } from './lottery'\nimport { useProcessLotteryResponse } from './lottery/helpers'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useGetRounds = () => {\n  const rounds = useSelector((state: State) => state.predictions.rounds)\n  return Object.keys(rounds).reduce((accum, epoch) => {\n    return {\n      ...accum,\n      [epoch]: parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch]),\n    }\n  }, {}) as { [key: string]: NodeRound }\n}\n\nexport const useGetRound = (epoch: number) => {\n  const round = useSelector((state: State) => state.predictions.rounds[epoch])\n  return parseBigNumberObj<ReduxNodeRound, NodeRound>(round)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetBetByEpoch = (account: string, epoch: number) => {\n  const bets = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][epoch]) {\n    return null\n  }\n\n  return parseBigNumberObj<ReduxNodeLedger, NodeLedger>(bets[account][epoch])\n}\n\nexport const useGetIsClaimable = (epoch) => {\n  const claimableStatuses = useSelector((state: State) => state.predictions.claimableStatuses)\n  return claimableStatuses[epoch] || false\n}\n\n/**\n * Used to get the range of rounds to poll for\n */\nexport const useGetEarliestEpoch = () => {\n  return useSelector((state: State) => {\n    const earliestRound = minBy(Object.values(state.predictions.rounds), 'epoch')\n    return earliestRound?.epoch\n  })\n}\n\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => ethers.BigNumber.from(minBetAmount), [minBetAmount])\n}\n\nexport const useGetRewardRate = () => {\n  const rewardRate = useSelector((state: State) => state.predictions.rewardRate)\n  return rewardRate / 100\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetLedgerByRoundId = (account: string, roundId: string) => {\n  const ledgers = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!ledgers[account]) {\n    return null\n  }\n\n  if (!ledgers[account][roundId]) {\n    return null\n  }\n\n  return ledgers[account][roundId]\n}\n\nexport const useGetLastOraclePrice = () => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return useMemo(() => {\n    return ethers.BigNumber.from(lastOraclePrice)\n  }, [lastOraclePrice])\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n\n// Voting\nexport const useGetProposals = () => {\n  const proposals = useSelector((state: State) => state.voting.proposals)\n  return Object.values(proposals)\n}\n\nexport const useGetProposal = (proposalId: string) => {\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\n  return proposal\n}\n\nexport const useGetVotes = (proposalId: string) => {\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\n}\n\nexport const useGetVotingStateLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\n  return votingStatus\n}\n\nexport const useGetProposalLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\n  return votingStatus\n}\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID, max tickets and historical lottery subgraph data\n    dispatch(fetchCurrentLotteryId())\n    dispatch(fetchPastLotteries())\n  }, [dispatch])\n\n  useEffect(() => {\n    // get public data for current lottery\n    if (currentLotteryId) {\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, lotteryId: currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}