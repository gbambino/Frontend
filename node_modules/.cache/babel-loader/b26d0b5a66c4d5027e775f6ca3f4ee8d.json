{"ast":null,"code":"import _objectSpread from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useState,useEffect}from'react';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import{useProfile}from'state/hooks';import{Flex,Box,Image}from'@pancakeswap/uikit';import styled from'styled-components';import{useTradingCompetitionContract}from'hooks/useContract';import useTheme from'hooks/useTheme';import{SmartContractPhases,CompetitionPhases,LIVE,FINISHED,CLAIM,OVER,REGISTRATION}from'config/constants/trading-competition/easterPhases';import PageSection from'components/PageSection';import{DARKBG,DARKFILL,MIDBLUEBG,MIDBLUEBG_DARK,MIDBLUEFILL,MIDBLUEFILL_DARK,LIGHTBLUEBG,LIGHTBLUEBG_DARK,LIGHTBLUEFILL,LIGHTBLUEFILL_DARK}from'./pageSectionStyles';import{PrizesIcon,RanksIcon,RulesIcon}from'./svgs';import Countdown from'./components/Countdown';import YourScore from'./components/YourScore';import StormBunny from'./pngs/storm.png';import RibbonWithImage from'./components/RibbonWithImage';import HowToJoin from'./components/HowToJoin';import BattleBanner from'./components/BattleBanner';import BattleCta from'./components/BattleCta';import PrizesInfo from'./components/PrizesInfo';import Rules from'./components/Rules';import TeamRanks from'./components/TeamRanks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CompetitionPage=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: calc(100vh - 64px);\\n\"])));var BannerFlex=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex-direction: column;\\n  \",\" {\\n    padding-top: 10px;\\n    flex-direction: row-reverse;\\n    justify-content: space-between;\\n  }\\n\\n  @media screen and (min-width: 1920px) {\\n    padding-top: 32px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.xl;});var BattleBannerSection=styled(PageSection)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-top: -32px;\\n  \",\" {\\n    margin-top: -64px;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.lg;});var YourScoreSection=styled(PageSection)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin-top: -32px;\\n  \",\" {\\n    margin-top: -64px;\\n  }\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.mediaQueries.lg;});var PrizesSection=styled(PageSection)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin: -32px 0;\\n  \",\" {\\n    margin: -64px 0;\\n  }\\n\"])),function(_ref4){var theme=_ref4.theme;return theme.mediaQueries.lg;});var BottomBunnyWrapper=styled(Box)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: none;\\n\\n  \",\" {\\n    display: flex;\\n    margin-left: 40px;\\n    width: 147px;\\n    height: 200px;\\n  }\\n\"])),function(_ref5){var theme=_ref5.theme;return theme.mediaQueries.md;});var TradingCompetition=function TradingCompetition(){var profileApiUrl=process.env.REACT_APP_API_PROFILE;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useProfile=useProfile(),profile=_useProfile.profile,isLoading=_useProfile.isLoading;var _useTheme=useTheme(),isDark=_useTheme.isDark;var tradingCompetitionContract=useTradingCompetitionContract();var _useState=useState(CompetitionPhases.LIVE),_useState2=_slicedToArray(_useState,2),currentPhase=_useState2[0],setCurrentPhase=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),registrationSuccessful=_useState4[0],setRegistrationSuccessful=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),claimSuccessful=_useState6[0],setClaimSuccessful=_useState6[1];var _useState7=useState({hasRegistered:false,hasUserClaimed:false,userRewardGroup:'0',userCakeRewards:'0',userPointReward:'0',canClaimNFT:false}),_useState8=_slicedToArray(_useState7,2),userTradingInformation=_useState8[0],setUserTradingInformation=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),globalLeaderboardInformation=_useState10[0],setGlobalLeaderboardInformation=_useState10[1];var _useState11=useState({global:0,team:0,volume:0,next_rank:0}),_useState12=_slicedToArray(_useState11,2),userLeaderboardInformation=_useState12[0],setUserLeaderboardInformation=_useState12[1];// 1. Storm\nvar _useState13=useState({teamId:1,leaderboardData:null}),_useState14=_slicedToArray(_useState13,2),team1LeaderboardInformation=_useState14[0],setTeam1LeaderboardInformation=_useState14[1];// 2. Flippers\nvar _useState15=useState({teamId:2,leaderboardData:null}),_useState16=_slicedToArray(_useState15,2),team2LeaderboardInformation=_useState16[0],setTeam2LeaderboardInformation=_useState16[1];// 3. Cakers\nvar _useState17=useState({teamId:3,leaderboardData:null}),_useState18=_slicedToArray(_useState17,2),team3LeaderboardInformation=_useState18[0],setTeam3LeaderboardInformation=_useState18[1];var isCompetitionLive=currentPhase.state===LIVE;var hasCompetitionEnded=currentPhase.state===FINISHED||currentPhase.state===CLAIM||currentPhase.state===OVER;var hasUserClaimed=userTradingInformation.hasUserClaimed,userCakeRewards=userTradingInformation.userCakeRewards,userPointReward=userTradingInformation.userPointReward,canClaimNFT=userTradingInformation.canClaimNFT;var userCanClaimPrizes=currentPhase.state===CLAIM&&!hasUserClaimed&&(userCakeRewards!=='0'||userPointReward!=='0'||canClaimNFT);var finishedAndPrizesClaimed=hasCompetitionEnded&&account&&hasUserClaimed;var finishedAndNothingToClaim=hasCompetitionEnded&&account&&!userCanClaimPrizes;var onRegisterSuccess=function onRegisterSuccess(){setRegistrationSuccessful(true);};var onClaimSuccess=function onClaimSuccess(){setClaimSuccessful(true);};useEffect(function(){var fetchCompetitionInfoContract=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var competitionStatus;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return tradingCompetitionContract.currentStatus();case 2:competitionStatus=_context.sent;setCurrentPhase(SmartContractPhases[competitionStatus]);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchCompetitionInfoContract(){return _ref6.apply(this,arguments);};}();var fetchUserContract=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var user,userObject;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return tradingCompetitionContract.claimInformation(account);case 2:user=_context2.sent;userObject={hasRegistered:user[0],hasUserClaimed:user[1],userRewardGroup:user[2].toString(),userCakeRewards:user[3].toString(),userPointReward:user[4].toString(),canClaimNFT:user[5]};setUserTradingInformation(userObject);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchUserContract(){return _ref7.apply(this,arguments);};}();if(account){fetchUserContract();}else{setUserTradingInformation({hasRegistered:false,hasUserClaimed:false,userRewardGroup:'0',userCakeRewards:'0',userPointReward:'0',canClaimNFT:false});}fetchCompetitionInfoContract();},[account,registrationSuccessful,claimSuccessful,tradingCompetitionContract]);useEffect(function(){var fetchUserTradingStats=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var res,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(profileApiUrl,\"/api/users/\").concat(account));case 2:res=_context3.sent;_context3.next=5;return res.json();case 5:data=_context3.sent;setUserLeaderboardInformation(data.leaderboard);case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchUserTradingStats(){return _ref8.apply(this,arguments);};}();// If user has not registered, user trading information will not be displayed and should not be fetched\nif(account&&userTradingInformation.hasRegistered){fetchUserTradingStats();}},[account,userTradingInformation,profileApiUrl]);useEffect(function(){var fetchGlobalLeaderboardStats=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var res,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"\".concat(profileApiUrl,\"/api/leaderboard/global\"));case 2:res=_context4.sent;_context4.next=5;return res.json();case 5:data=_context4.sent;setGlobalLeaderboardInformation(data);case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function fetchGlobalLeaderboardStats(){return _ref9.apply(this,arguments);};}();var fetchTeamsLeaderboardStats=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(teamId,callBack){var res,_data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(\"\".concat(profileApiUrl,\"/api/leaderboard/team/\").concat(teamId));case 3:res=_context5.sent;_context5.next=6;return res.json();case 6:_data=_context5.sent;callBack(_data);_context5.next=13;break;case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](0);console.error(_context5.t0);case 13:case\"end\":return _context5.stop();}}},_callee5,null,[[0,10]]);}));return function fetchTeamsLeaderboardStats(_x,_x2){return _ref10.apply(this,arguments);};}();fetchTeamsLeaderboardStats(1,function(data){return setTeam1LeaderboardInformation(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{leaderboardData:data});});});fetchTeamsLeaderboardStats(2,function(data){return setTeam2LeaderboardInformation(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{leaderboardData:data});});});fetchTeamsLeaderboardStats(3,function(data){return setTeam3LeaderboardInformation(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{leaderboardData:data});});});fetchGlobalLeaderboardStats();},[profileApiUrl]);// Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\nvar shouldHideCta=!isLoading&&account&&!userTradingInformation.hasRegistered&&(isCompetitionLive||hasCompetitionEnded);return/*#__PURE__*/_jsxs(CompetitionPage,{children:[/*#__PURE__*/_jsx(BattleBannerSection,{background:DARKBG,svgFill:DARKFILL,index:5,dividerComponent:shouldHideCta?null:/*#__PURE__*/_jsx(BattleCta,{userTradingInformation:userTradingInformation,currentPhase:currentPhase,account:account,isCompetitionLive:isCompetitionLive,hasCompetitionEnded:hasCompetitionEnded,userCanClaimPrizes:userCanClaimPrizes,finishedAndPrizesClaimed:finishedAndPrizesClaimed,finishedAndNothingToClaim:finishedAndNothingToClaim,profile:profile,isLoading:isLoading,onRegisterSuccess:onRegisterSuccess,onClaimSuccess:onClaimSuccess}),children:/*#__PURE__*/_jsxs(BannerFlex,{mb:shouldHideCta?'0px':'48px',children:[/*#__PURE__*/_jsx(Countdown,{currentPhase:currentPhase,hasCompetitionEnded:hasCompetitionEnded}),/*#__PURE__*/_jsx(BattleBanner,{})]})}),/*#__PURE__*/_jsx(YourScoreSection,{background:isDark?MIDBLUEBG_DARK:MIDBLUEBG,svgFill:isDark?MIDBLUEFILL_DARK:MIDBLUEFILL,index:4,dividerComponent:/*#__PURE__*/_jsx(RibbonWithImage,{imageComponent:/*#__PURE__*/_jsx(RanksIcon,{width:\"175px\"}),ribbonDirection:\"up\",children:t('Team Ranks')}),children:/*#__PURE__*/_jsx(Box,{mt:shouldHideCta?'0px':['94px',null,'36px'],mb:['24px',null,'0'],children:currentPhase.state===REGISTRATION?/*#__PURE__*/_jsx(HowToJoin,{}):/*#__PURE__*/_jsx(YourScore,{currentPhase:currentPhase,hasRegistered:userTradingInformation.hasRegistered,userTradingInformation:userTradingInformation,account:account,profile:profile,isLoading:isLoading,userLeaderboardInformation:userLeaderboardInformation,userCanClaimPrizes:userCanClaimPrizes,finishedAndPrizesClaimed:finishedAndPrizesClaimed,finishedAndNothingToClaim:finishedAndNothingToClaim,onClaimSuccess:onClaimSuccess})})}),/*#__PURE__*/_jsx(PageSection,{index:3,dividerComponent:/*#__PURE__*/_jsx(RibbonWithImage,{imageComponent:/*#__PURE__*/_jsx(PrizesIcon,{width:\"175px\"}),ribbonDirection:\"up\",children:t('Prizes')}),children:/*#__PURE__*/_jsx(Box,{mt:\"54px\",children:/*#__PURE__*/_jsx(TeamRanks,{team1LeaderboardInformation:team1LeaderboardInformation,team2LeaderboardInformation:team2LeaderboardInformation,team3LeaderboardInformation:team3LeaderboardInformation,globalLeaderboardInformation:globalLeaderboardInformation})})}),/*#__PURE__*/_jsx(PrizesSection,{background:isDark?LIGHTBLUEBG_DARK:LIGHTBLUEBG,svgFill:isDark?LIGHTBLUEFILL_DARK:LIGHTBLUEFILL,index:2,hasCurvedDivider:false,children:/*#__PURE__*/_jsx(Box,{my:\"64px\",children:/*#__PURE__*/_jsx(PrizesInfo,{})})}),/*#__PURE__*/_jsx(PageSection,{index:3,curvePosition:\"top\",dividerComponent:/*#__PURE__*/_jsx(RibbonWithImage,{imageComponent:/*#__PURE__*/_jsx(RulesIcon,{width:\"175px\"}),ribbonDirection:\"up\",children:t('Rules')}),children:/*#__PURE__*/_jsx(Box,{mt:\"32px\",children:/*#__PURE__*/_jsx(Rules,{})})}),/*#__PURE__*/_jsx(PageSection,{background:DARKBG,svgFill:DARKFILL,index:4,curvePosition:\"top\",children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[shouldHideCta?null:/*#__PURE__*/_jsx(Flex,{height:\"fit-content\",children:/*#__PURE__*/_jsx(BattleCta,{userTradingInformation:userTradingInformation,currentPhase:currentPhase,account:account,isCompetitionLive:isCompetitionLive,hasCompetitionEnded:hasCompetitionEnded,userCanClaimPrizes:userCanClaimPrizes,finishedAndPrizesClaimed:finishedAndPrizesClaimed,finishedAndNothingToClaim:finishedAndNothingToClaim,profile:profile,isLoading:isLoading,onRegisterSuccess:onRegisterSuccess,onClaimSuccess:onClaimSuccess})}),/*#__PURE__*/_jsx(BottomBunnyWrapper,{children:/*#__PURE__*/_jsx(Image,{src:StormBunny,width:147,height:200})})]})})]});};export default TradingCompetition;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/TradingCompetition/index.tsx"],"names":["React","useState","useEffect","useTranslation","useWeb3React","useProfile","Flex","Box","Image","styled","useTradingCompetitionContract","useTheme","SmartContractPhases","CompetitionPhases","LIVE","FINISHED","CLAIM","OVER","REGISTRATION","PageSection","DARKBG","DARKFILL","MIDBLUEBG","MIDBLUEBG_DARK","MIDBLUEFILL","MIDBLUEFILL_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","LIGHTBLUEFILL","LIGHTBLUEFILL_DARK","PrizesIcon","RanksIcon","RulesIcon","Countdown","YourScore","StormBunny","RibbonWithImage","HowToJoin","BattleBanner","BattleCta","PrizesInfo","Rules","TeamRanks","CompetitionPage","div","BannerFlex","theme","mediaQueries","xl","BattleBannerSection","lg","YourScoreSection","PrizesSection","BottomBunnyWrapper","md","TradingCompetition","profileApiUrl","process","env","REACT_APP_API_PROFILE","account","t","profile","isLoading","isDark","tradingCompetitionContract","currentPhase","setCurrentPhase","registrationSuccessful","setRegistrationSuccessful","claimSuccessful","setClaimSuccessful","hasRegistered","hasUserClaimed","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","userTradingInformation","setUserTradingInformation","globalLeaderboardInformation","setGlobalLeaderboardInformation","global","team","volume","next_rank","userLeaderboardInformation","setUserLeaderboardInformation","teamId","leaderboardData","team1LeaderboardInformation","setTeam1LeaderboardInformation","team2LeaderboardInformation","setTeam2LeaderboardInformation","team3LeaderboardInformation","setTeam3LeaderboardInformation","isCompetitionLive","state","hasCompetitionEnded","userCanClaimPrizes","finishedAndPrizesClaimed","finishedAndNothingToClaim","onRegisterSuccess","onClaimSuccess","fetchCompetitionInfoContract","currentStatus","competitionStatus","fetchUserContract","claimInformation","user","userObject","toString","fetchUserTradingStats","fetch","res","json","data","leaderboard","fetchGlobalLeaderboardStats","fetchTeamsLeaderboardStats","callBack","console","error","prevState","shouldHideCta"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useProfile } from 'state/hooks'\nimport { Flex, Box, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTradingCompetitionContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport {\n  SmartContractPhases,\n  CompetitionPhases,\n  LIVE,\n  FINISHED,\n  CLAIM,\n  OVER,\n  REGISTRATION,\n} from 'config/constants/trading-competition/easterPhases'\nimport PageSection from 'components/PageSection'\nimport {\n  DARKBG,\n  DARKFILL,\n  MIDBLUEBG,\n  MIDBLUEBG_DARK,\n  MIDBLUEFILL,\n  MIDBLUEFILL_DARK,\n  LIGHTBLUEBG,\n  LIGHTBLUEBG_DARK,\n  LIGHTBLUEFILL,\n  LIGHTBLUEFILL_DARK,\n} from './pageSectionStyles'\nimport { PrizesIcon, RanksIcon, RulesIcon } from './svgs'\nimport Countdown from './components/Countdown'\nimport YourScore from './components/YourScore'\nimport StormBunny from './pngs/storm.png'\nimport RibbonWithImage from './components/RibbonWithImage'\nimport HowToJoin from './components/HowToJoin'\nimport BattleBanner from './components/BattleBanner'\nimport BattleCta from './components/BattleCta'\nimport PrizesInfo from './components/PrizesInfo'\nimport Rules from './components/Rules'\nimport TeamRanks from './components/TeamRanks'\n\nconst CompetitionPage = styled.div`\n  min-height: calc(100vh - 64px);\n`\n\nconst BannerFlex = styled(Flex)`\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-top: 10px;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 1920px) {\n    padding-top: 32px;\n  }\n`\n\nconst BattleBannerSection = styled(PageSection)`\n  margin-top: -32px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-top: -64px;\n  }\n`\n\nconst YourScoreSection = styled(PageSection)`\n  margin-top: -32px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-top: -64px;\n  }\n`\n\nconst PrizesSection = styled(PageSection)`\n  margin: -32px 0;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: -64px 0;\n  }\n`\n\nconst BottomBunnyWrapper = styled(Box)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    margin-left: 40px;\n    width: 147px;\n    height: 200px;\n  }\n`\n\nconst TradingCompetition = () => {\n  const profileApiUrl = process.env.REACT_APP_API_PROFILE\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { profile, isLoading } = useProfile()\n  const { isDark } = useTheme()\n  const tradingCompetitionContract = useTradingCompetitionContract()\n  const [currentPhase, setCurrentPhase] = useState(CompetitionPhases.LIVE)\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false)\n  const [claimSuccessful, setClaimSuccessful] = useState(false)\n  const [userTradingInformation, setUserTradingInformation] = useState({\n    hasRegistered: false,\n    hasUserClaimed: false,\n    userRewardGroup: '0',\n    userCakeRewards: '0',\n    userPointReward: '0',\n    canClaimNFT: false,\n  })\n  const [globalLeaderboardInformation, setGlobalLeaderboardInformation] = useState(null)\n  const [userLeaderboardInformation, setUserLeaderboardInformation] = useState({\n    global: 0,\n    team: 0,\n    volume: 0,\n    next_rank: 0,\n  })\n  // 1. Storm\n  const [team1LeaderboardInformation, setTeam1LeaderboardInformation] = useState({ teamId: 1, leaderboardData: null })\n  // 2. Flippers\n  const [team2LeaderboardInformation, setTeam2LeaderboardInformation] = useState({ teamId: 2, leaderboardData: null })\n  // 3. Cakers\n  const [team3LeaderboardInformation, setTeam3LeaderboardInformation] = useState({ teamId: 3, leaderboardData: null })\n\n  const isCompetitionLive = currentPhase.state === LIVE\n  const hasCompetitionEnded =\n    currentPhase.state === FINISHED || currentPhase.state === CLAIM || currentPhase.state === OVER\n\n  const { hasUserClaimed, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\n\n  const userCanClaimPrizes =\n    currentPhase.state === CLAIM &&\n    !hasUserClaimed &&\n    (userCakeRewards !== '0' || userPointReward !== '0' || canClaimNFT)\n  const finishedAndPrizesClaimed = hasCompetitionEnded && account && hasUserClaimed\n  const finishedAndNothingToClaim = hasCompetitionEnded && account && !userCanClaimPrizes\n\n  const onRegisterSuccess = () => {\n    setRegistrationSuccessful(true)\n  }\n\n  const onClaimSuccess = () => {\n    setClaimSuccessful(true)\n  }\n\n  useEffect(() => {\n    const fetchCompetitionInfoContract = async () => {\n      const competitionStatus = await tradingCompetitionContract.currentStatus()\n      setCurrentPhase(SmartContractPhases[competitionStatus])\n    }\n\n    const fetchUserContract = async () => {\n      const user = await tradingCompetitionContract.claimInformation(account)\n      const userObject = {\n        hasRegistered: user[0],\n        hasUserClaimed: user[1],\n        userRewardGroup: user[2].toString(),\n        userCakeRewards: user[3].toString(),\n        userPointReward: user[4].toString(),\n        canClaimNFT: user[5],\n      }\n      setUserTradingInformation(userObject)\n    }\n\n    if (account) {\n      fetchUserContract()\n    } else {\n      setUserTradingInformation({\n        hasRegistered: false,\n        hasUserClaimed: false,\n        userRewardGroup: '0',\n        userCakeRewards: '0',\n        userPointReward: '0',\n        canClaimNFT: false,\n      })\n    }\n    fetchCompetitionInfoContract()\n  }, [account, registrationSuccessful, claimSuccessful, tradingCompetitionContract])\n\n  useEffect(() => {\n    const fetchUserTradingStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/users/${account}`)\n      const data = await res.json()\n      setUserLeaderboardInformation(data.leaderboard)\n    }\n    // If user has not registered, user trading information will not be displayed and should not be fetched\n    if (account && userTradingInformation.hasRegistered) {\n      fetchUserTradingStats()\n    }\n  }, [account, userTradingInformation, profileApiUrl])\n\n  useEffect(() => {\n    const fetchGlobalLeaderboardStats = async () => {\n      const res = await fetch(`${profileApiUrl}/api/leaderboard/global`)\n      const data = await res.json()\n      setGlobalLeaderboardInformation(data)\n    }\n\n    const fetchTeamsLeaderboardStats = async (teamId: number, callBack: (data: any) => void) => {\n      try {\n        const res = await fetch(`${profileApiUrl}/api/leaderboard/team/${teamId}`)\n        const data = await res.json()\n        callBack(data)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    fetchTeamsLeaderboardStats(1, (data) =>\n      setTeam1LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchTeamsLeaderboardStats(2, (data) =>\n      setTeam2LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchTeamsLeaderboardStats(3, (data) =>\n      setTeam3LeaderboardInformation((prevState) => {\n        return { ...prevState, leaderboardData: data }\n      }),\n    )\n    fetchGlobalLeaderboardStats()\n  }, [profileApiUrl])\n\n  // Don't hide when loading. Hide if the account is connected && the user hasn't registered && the competition is live or finished\n  const shouldHideCta =\n    !isLoading && account && !userTradingInformation.hasRegistered && (isCompetitionLive || hasCompetitionEnded)\n\n  return (\n    <CompetitionPage>\n      <BattleBannerSection\n        background={DARKBG}\n        svgFill={DARKFILL}\n        index={5}\n        dividerComponent={\n          shouldHideCta ? null : (\n            <BattleCta\n              userTradingInformation={userTradingInformation}\n              currentPhase={currentPhase}\n              account={account}\n              isCompetitionLive={isCompetitionLive}\n              hasCompetitionEnded={hasCompetitionEnded}\n              userCanClaimPrizes={userCanClaimPrizes}\n              finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n              finishedAndNothingToClaim={finishedAndNothingToClaim}\n              profile={profile}\n              isLoading={isLoading}\n              onRegisterSuccess={onRegisterSuccess}\n              onClaimSuccess={onClaimSuccess}\n            />\n          )\n        }\n      >\n        <BannerFlex mb={shouldHideCta ? '0px' : '48px'}>\n          <Countdown currentPhase={currentPhase} hasCompetitionEnded={hasCompetitionEnded} />\n          <BattleBanner />\n        </BannerFlex>\n      </BattleBannerSection>\n      <YourScoreSection\n        background={isDark ? MIDBLUEBG_DARK : MIDBLUEBG}\n        svgFill={isDark ? MIDBLUEFILL_DARK : MIDBLUEFILL}\n        index={4}\n        dividerComponent={\n          <RibbonWithImage imageComponent={<RanksIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('Team Ranks')}\n          </RibbonWithImage>\n        }\n      >\n        <Box mt={shouldHideCta ? '0px' : ['94px', null, '36px']} mb={['24px', null, '0']}>\n          {/* If competition has not yet started, render HowToJoin component - if not, render YourScore */}\n          {currentPhase.state === REGISTRATION ? (\n            <HowToJoin />\n          ) : (\n            <YourScore\n              currentPhase={currentPhase}\n              hasRegistered={userTradingInformation.hasRegistered}\n              userTradingInformation={userTradingInformation}\n              account={account}\n              profile={profile}\n              isLoading={isLoading}\n              userLeaderboardInformation={userLeaderboardInformation}\n              userCanClaimPrizes={userCanClaimPrizes}\n              finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n              finishedAndNothingToClaim={finishedAndNothingToClaim}\n              onClaimSuccess={onClaimSuccess}\n            />\n          )}\n        </Box>\n      </YourScoreSection>\n      <PageSection\n        index={3}\n        dividerComponent={\n          <RibbonWithImage imageComponent={<PrizesIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('Prizes')}\n          </RibbonWithImage>\n        }\n      >\n        <Box mt=\"54px\">\n          <TeamRanks\n            team1LeaderboardInformation={team1LeaderboardInformation}\n            team2LeaderboardInformation={team2LeaderboardInformation}\n            team3LeaderboardInformation={team3LeaderboardInformation}\n            globalLeaderboardInformation={globalLeaderboardInformation}\n          />\n        </Box>\n      </PageSection>\n      <PrizesSection\n        background={isDark ? LIGHTBLUEBG_DARK : LIGHTBLUEBG}\n        svgFill={isDark ? LIGHTBLUEFILL_DARK : LIGHTBLUEFILL}\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <Box my=\"64px\">\n          <PrizesInfo />\n        </Box>\n      </PrizesSection>\n      <PageSection\n        index={3}\n        curvePosition=\"top\"\n        dividerComponent={\n          <RibbonWithImage imageComponent={<RulesIcon width=\"175px\" />} ribbonDirection=\"up\">\n            {t('Rules')}\n          </RibbonWithImage>\n        }\n      >\n        <Box mt=\"32px\">\n          <Rules />\n        </Box>\n      </PageSection>\n      <PageSection background={DARKBG} svgFill={DARKFILL} index={4} curvePosition=\"top\">\n        <Flex alignItems=\"center\">\n          {shouldHideCta ? null : (\n            <Flex height=\"fit-content\">\n              <BattleCta\n                userTradingInformation={userTradingInformation}\n                currentPhase={currentPhase}\n                account={account}\n                isCompetitionLive={isCompetitionLive}\n                hasCompetitionEnded={hasCompetitionEnded}\n                userCanClaimPrizes={userCanClaimPrizes}\n                finishedAndPrizesClaimed={finishedAndPrizesClaimed}\n                finishedAndNothingToClaim={finishedAndNothingToClaim}\n                profile={profile}\n                isLoading={isLoading}\n                onRegisterSuccess={onRegisterSuccess}\n                onClaimSuccess={onClaimSuccess}\n              />\n            </Flex>\n          )}\n          <BottomBunnyWrapper>\n            <Image src={StormBunny} width={147} height={200} />\n          </BottomBunnyWrapper>\n        </Flex>\n      </PageSection>\n    </CompetitionPage>\n  )\n}\n\nexport default TradingCompetition\n"]},"metadata":{},"sourceType":"module"}