{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{Heading,Card,CardBody,Flex,ArrowForwardIcon,Skeleton,Text}from'@pancakeswap/uikit';import{NavLink}from'react-router-dom';import{useTranslation}from'contexts/Localization';import{usePriceCakeBusd}from'state/hooks';import{getBalanceNumber}from'utils/formatBalance';import Balance from'components/Balance';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFarmStakingCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 100%;\\n\\n  \",\" {\\n    margin: 0;\\n    max-width: none;\\n  }\\n\\n  transition: opacity 200ms;\\n  &:hover {\\n    opacity: 0.65;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.lg;});var PrizeText=styled(Text)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  word-wrap: break-word;\\n\"])));var LotteryPromotionCard=function LotteryPromotionCard(_ref2){var currentLotteryPrize=_ref2.currentLotteryPrize;var _useTranslation=useTranslation(),t=_useTranslation.t;var cakePriceBusd=usePriceCakeBusd();var prizeInBusd=cakePriceBusd.times(currentLotteryPrize);var prizeTotal=getBalanceNumber(prizeInBusd);var prizeTotalText=prizeInBusd.isNaN()?prizeTotal.toString():'-';var prizeText=t('Contract Address: ');var _prizeText$split=prizeText.split(prizeTotalText),_prizeText$split2=_slicedToArray(_prizeText$split,2),over=_prizeText$split2[0],inPrizes=_prizeText$split2[1];return/*#__PURE__*/_jsx(StyledFarmStakingCard,{children:/*#__PURE__*/_jsx(NavLink,{exact:true,activeClassName:\"active\",to:\"/lottery\",id:\"lottery-pot-cta\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{color:\"contrast\",scale:\"lg\",children:t('Contract Addresses')}),/*#__PURE__*/_jsx(PrizeText,{color:\"#7645d9\",fontSize:\"40px\",bold:true,lineHeight:\"1.1\",children:over}),prizeInBusd.isNaN()?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Skeleton,{height:60,width:210})}):/*#__PURE__*/_jsx(Balance,{fontSize:\"40px\",color:\"#7645d9\",bold:true,lineHeight:\"1.1\",prefix:\"$\",decimals:0,value:prizeTotal}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(PrizeText,{color:\"contrast\",fontSize:\"28px\",bold:true,lineHeight:\"1.1\",children:inPrizes}),/*#__PURE__*/_jsx(ArrowForwardIcon,{mt:30,color:\"primary\"})]})]})})});};export default LotteryPromotionCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Home/components/LotteryPromotionCard.tsx"],"names":["React","styled","Heading","Card","CardBody","Flex","ArrowForwardIcon","Skeleton","Text","NavLink","useTranslation","usePriceCakeBusd","getBalanceNumber","Balance","StyledFarmStakingCard","theme","mediaQueries","lg","PrizeText","LotteryPromotionCard","currentLotteryPrize","t","cakePriceBusd","prizeInBusd","times","prizeTotal","prizeTotalText","isNaN","toString","prizeText","split","over","inPrizes"],"mappings":"iWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,OAAT,CAAkBC,IAAlB,CAAwBC,QAAxB,CAAkCC,IAAlC,CAAwCC,gBAAxC,CAA0DC,QAA1D,CAAoEC,IAApE,KAAgF,oBAAhF,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,gBAAT,KAAiC,aAAjC,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,6IAEA,GAAMC,CAAAA,qBAAqB,CAAGb,MAAM,CAACE,IAAD,CAAT,4PAKvB,kBAAGY,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EALuB,CAA3B,CAgBA,GAAMC,CAAAA,SAAS,CAAGjB,MAAM,CAACO,IAAD,CAAT,+FAAf,CAIA,GAAMW,CAAAA,oBAA+D,CAAG,QAAlEA,CAAAA,oBAAkE,OAA6B,IAA1BC,CAAAA,mBAA0B,OAA1BA,mBAA0B,CACnG,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,aAAa,CAAGX,gBAAgB,EAAtC,CACA,GAAMY,CAAAA,WAAW,CAAGD,aAAa,CAACE,KAAd,CAAoBJ,mBAApB,CAApB,CACA,GAAMK,CAAAA,UAAU,CAAGb,gBAAgB,CAACW,WAAD,CAAnC,CAEA,GAAMG,CAAAA,cAAc,CAAGH,WAAW,CAACI,KAAZ,GAAsBF,UAAU,CAACG,QAAX,EAAtB,CAA8C,GAArE,CACA,GAAMC,CAAAA,SAAS,CAAGR,CAAC,CAAC,oBAAD,CAAnB,CACA,qBAAyBQ,SAAS,CAACC,KAAV,CAAgBJ,cAAhB,CAAzB,sDAAOK,IAAP,sBAAaC,QAAb,sBAEA,mBACE,KAAC,qBAAD,wBACE,KAAC,OAAD,EAAS,KAAK,KAAd,CAAe,eAAe,CAAC,QAA/B,CAAwC,EAAE,CAAC,UAA3C,CAAsD,EAAE,CAAC,iBAAzD,uBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EAAS,KAAK,CAAC,UAAf,CAA0B,KAAK,CAAC,IAAhC,UACGX,CAAC,CAAC,oBAAD,CADJ,EADF,cAIE,KAAC,SAAD,EAAW,KAAK,CAAC,SAAjB,CAA2B,QAAQ,CAAC,MAApC,CAA2C,IAAI,KAA/C,CAAgD,UAAU,CAAC,KAA3D,UACGU,IADH,EAJF,CAOGR,WAAW,CAACI,KAAZ,gBACC,sCACE,KAAC,QAAD,EAAU,MAAM,CAAE,EAAlB,CAAsB,KAAK,CAAE,GAA7B,EADF,EADD,cAKC,KAAC,OAAD,EAAS,QAAQ,CAAC,MAAlB,CAAyB,KAAK,CAAC,SAA/B,CAAyC,IAAI,KAA7C,CAA8C,UAAU,CAAC,KAAzD,CAA+D,MAAM,CAAC,GAAtE,CAA0E,QAAQ,CAAE,CAApF,CAAuF,KAAK,CAAEF,UAA9F,EAZJ,cAcE,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,wBACE,KAAC,SAAD,EAAW,KAAK,CAAC,UAAjB,CAA4B,QAAQ,CAAC,MAArC,CAA4C,IAAI,KAAhD,CAAiD,UAAU,CAAC,KAA5D,UACGO,QADH,EADF,cAIE,KAAC,gBAAD,EAAkB,EAAE,CAAE,EAAtB,CAA0B,KAAK,CAAC,SAAhC,EAJF,GAdF,GADF,EADF,EADF,CA2BD,CArCD,CAuCA,cAAeb,CAAAA,oBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton, Text } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\n\nconst PrizeText = styled(Text)`\n  word-wrap: break-word;\n`\n\nconst LotteryPromotionCard: React.FC<{ currentLotteryPrize: string }> = ({ currentLotteryPrize }) => {\n  const { t } = useTranslation()\n  const cakePriceBusd = usePriceCakeBusd()\n  const prizeInBusd = cakePriceBusd.times(currentLotteryPrize)\n  const prizeTotal = getBalanceNumber(prizeInBusd)\n\n  const prizeTotalText = prizeInBusd.isNaN() ? prizeTotal.toString() : '-'\n  const prizeText = t('Contract Address: ')\n  const [over, inPrizes] = prizeText.split(prizeTotalText)\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/lottery\" id=\"lottery-pot-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            {t('Contract Addresses')}\n          </Heading>\n          <PrizeText color=\"#7645d9\" fontSize=\"40px\" bold lineHeight=\"1.1\">\n            {over}\n          </PrizeText>\n          {prizeInBusd.isNaN() ? (\n            <>\n              <Skeleton height={60} width={210} />\n            </>\n          ) : (\n            <Balance fontSize=\"40px\" color=\"#7645d9\" bold lineHeight=\"1.1\" prefix=\"$\" decimals={0} value={prizeTotal} />\n          )}\n          <Flex justifyContent=\"space-between\">\n            <PrizeText color=\"contrast\" fontSize=\"28px\" bold lineHeight=\"1.1\">\n              {inPrizes}\n            </PrizeText>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default LotteryPromotionCard\n"]},"metadata":{},"sourceType":"module"}