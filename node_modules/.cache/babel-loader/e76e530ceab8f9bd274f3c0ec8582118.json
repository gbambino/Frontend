{"ast":null,"code":"import _toConsumableArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useEffect,useMemo,useRef,useState}from'react';import{useLocation}from'react-router-dom';import styled from'styled-components';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{Heading,Flex,Image,Text}from'@pancakeswap/uikit';import orderBy from'lodash/orderBy';import partition from'lodash/partition';import{useTranslation}from'contexts/Localization';import usePersistState from'hooks/usePersistState';import{usePools,useFetchCakeVault,useFetchPublicPoolsData,usePollFarmsData,useCakeVault}from'state/hooks';import{latinise}from'utils/latinise';import FlexLayout from'components/Layout/Flex';import Page from'components/Layout/Page';import PageHeader from'components/PageHeader';import SearchInput from'components/SearchInput';import Select from'components/Select/Select';import PoolCard from'./components/PoolCard';import CakeVaultCard from'./components/CakeVaultCard';import PoolTabButtons from'./components/PoolTabButtons';import BountyCard from'./components/BountyCard';import HelpButton from'./components/HelpButton';import PoolsTable from'./components/PoolsTable/PoolsTable';import{ViewMode}from'./components/ToggleView/ToggleView';import{getAprData,getCakeVaultEarnings}from'./helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CardLayout=styled(FlexLayout)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  justify-content: center;\\n\"])));var PoolControls=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex-direction: column;\\n  margin-bottom: 24px;\\n  \",\" {\\n    flex-direction: row;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.md;});var SearchSortContainer=styled(Flex)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  gap: 10px;\\n  justify-content: space-between;\\n\"])));var ControlStretch=styled(Flex)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  > div {\\n    flex: 1;\\n  }\\n\"])));var NUMBER_OF_POOLS_VISIBLE=12;var Pools=function Pools(){var location=useLocation();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _usePools=usePools(account),poolsWithoutAutoVault=_usePools.pools,userDataLoaded=_usePools.userDataLoaded;var _usePersistState=usePersistState(false,{localStorageKey:'pancake_pool_staked'}),_usePersistState2=_slicedToArray(_usePersistState,2),stakedOnly=_usePersistState2[0],setStakedOnly=_usePersistState2[1];var _useState=useState(NUMBER_OF_POOLS_VISIBLE),_useState2=_slicedToArray(_useState,2),numberOfPoolsVisible=_useState2[0],setNumberOfPoolsVisible=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),observerIsSet=_useState4[0],setObserverIsSet=_useState4[1];var loadMoreRef=useRef(null);var _usePersistState3=usePersistState(ViewMode.TABLE,{localStorageKey:'pancake_farm_view'}),_usePersistState4=_slicedToArray(_usePersistState3,2),viewMode=_usePersistState4[0],setViewMode=_usePersistState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchQuery=_useState6[0],setSearchQuery=_useState6[1];var _useState7=useState('hot'),_useState8=_slicedToArray(_useState7,2),sortOption=_useState8[0],setSortOption=_useState8[1];var _useCakeVault=useCakeVault(),_useCakeVault$userDat=_useCakeVault.userData,cakeAtLastUserAction=_useCakeVault$userDat.cakeAtLastUserAction,userShares=_useCakeVault$userDat.userShares,performanceFee=_useCakeVault.fees.performanceFee,pricePerFullShare=_useCakeVault.pricePerFullShare,totalCakeInVault=_useCakeVault.totalCakeInVault;var accountHasVaultShares=userShares&&userShares.gt(0);var performanceFeeAsDecimal=performanceFee&&performanceFee/100;var pools=useMemo(function(){var cakePool=poolsWithoutAutoVault.find(function(pool){return pool.sousId===0;});var cakeAutoVault=_objectSpread(_objectSpread({},cakePool),{},{isAutoVault:true});return[cakeAutoVault].concat(_toConsumableArray(poolsWithoutAutoVault));},[poolsWithoutAutoVault]);// TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\nvar _useMemo=useMemo(function(){return partition(pools,function(pool){return pool.isFinished;});},[pools]),_useMemo2=_slicedToArray(_useMemo,2),finishedPools=_useMemo2[0],openPools=_useMemo2[1];var stakedOnlyFinishedPools=useMemo(function(){return finishedPools.filter(function(pool){if(pool.isAutoVault){return accountHasVaultShares;}return pool.userData&&new BigNumber(pool.userData.stakedBalance).isGreaterThan(0);});},[finishedPools,accountHasVaultShares]);var stakedOnlyOpenPools=useMemo(function(){return openPools.filter(function(pool){if(pool.isAutoVault){return accountHasVaultShares;}return pool.userData&&new BigNumber(pool.userData.stakedBalance).isGreaterThan(0);});},[openPools,accountHasVaultShares]);var hasStakeInFinishedPools=stakedOnlyFinishedPools.length>0;usePollFarmsData();useFetchCakeVault();useFetchPublicPoolsData();useEffect(function(){var showMorePools=function showMorePools(entries){var _entries=_slicedToArray(entries,1),entry=_entries[0];if(entry.isIntersecting){setNumberOfPoolsVisible(function(poolsCurrentlyVisible){return poolsCurrentlyVisible+NUMBER_OF_POOLS_VISIBLE;});}};if(!observerIsSet){var loadMoreObserver=new IntersectionObserver(showMorePools,{rootMargin:'0px',threshold:1});loadMoreObserver.observe(loadMoreRef.current);setObserverIsSet(true);}},[observerIsSet]);var showFinishedPools=location.pathname.includes('history');var handleChangeSearchQuery=function handleChangeSearchQuery(event){setSearchQuery(event.target.value);};var handleSortOptionChange=function handleSortOptionChange(option){setSortOption(option.value);};var sortPools=function sortPools(poolsToSort){switch(sortOption){case'apr':// Ternary is needed to prevent pools without APR (like MIX) getting top spot\nreturn orderBy(poolsToSort,function(pool){return pool.apr?getAprData(pool,performanceFeeAsDecimal).apr:0;},'desc');case'earned':return orderBy(poolsToSort,function(pool){if(!pool.userData||!pool.earningTokenPrice){return 0;}return pool.isAutoVault?getCakeVaultEarnings(account,cakeAtLastUserAction,userShares,pricePerFullShare,pool.earningTokenPrice).autoUsdToDisplay:pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber();},'desc');case'totalStaked':return orderBy(poolsToSort,function(pool){return pool.isAutoVault?totalCakeInVault.toNumber():pool.totalStaked.toNumber();},'desc');default:return poolsToSort;}};var poolsToShow=function poolsToShow(){var chosenPools=[];if(showFinishedPools){chosenPools=stakedOnly?stakedOnlyFinishedPools:finishedPools;}else{chosenPools=stakedOnly?stakedOnlyOpenPools:openPools;}if(searchQuery){var lowercaseQuery=latinise(searchQuery.toLowerCase());chosenPools=chosenPools.filter(function(pool){return latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery);});}return sortPools(chosenPools).slice(0,numberOfPoolsVisible);};var cardLayout=/*#__PURE__*/_jsx(CardLayout,{children:poolsToShow().map(function(pool){return pool.isAutoVault?/*#__PURE__*/_jsx(CakeVaultCard,{pool:pool,showStakedOnly:stakedOnly},\"auto-cake\"):/*#__PURE__*/_jsx(PoolCard,{pool:pool,account:account},pool.sousId);})});var tableLayout=/*#__PURE__*/_jsx(PoolsTable,{pools:poolsToShow(),account:account,userDataLoaded:userDataLoaded});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PageHeader,{children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",flexDirection:['column',null,null,'row'],children:[/*#__PURE__*/_jsxs(Flex,{flex:\"1\",flexDirection:\"column\",mr:['8px',0],children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",scale:\"xxl\",color:\"secondary\",mb:\"24px\",children:t('TOCO Nests')}),/*#__PURE__*/_jsx(Heading,{scale:\"md\",color:\"text\",children:t('Sustainably High Yields Brought to You by the Toucans.')}),/*#__PURE__*/_jsx(Heading,{scale:\"md\",color:\"text\",children:t('The First BSC Yield Farm Powered By Proprietary AI Algorithms.')})]}),/*#__PURE__*/_jsxs(Flex,{flex:\"1\",height:\"fit-content\",justifyContent:\"center\",alignItems:\"center\",mt:['24px',null,'0'],children:[/*#__PURE__*/_jsx(HelpButton,{}),/*#__PURE__*/_jsx(BountyCard,{})]})]})}),/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(PoolControls,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(PoolTabButtons,{stakedOnly:stakedOnly,setStakedOnly:setStakedOnly,hasStakeInFinishedPools:hasStakeInFinishedPools,viewMode:viewMode,setViewMode:setViewMode}),/*#__PURE__*/_jsxs(SearchSortContainer,{children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",width:\"50%\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",textTransform:\"uppercase\",children:t('Sort by')}),/*#__PURE__*/_jsx(ControlStretch,{children:/*#__PURE__*/_jsx(Select,{options:[{label:t('Hot'),value:'hot'},{label:t('APR'),value:'apr'},{label:t('Earned'),value:'earned'},{label:t('Total staked'),value:'totalStaked'}],onChange:handleSortOptionChange})})]}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",width:\"50%\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",textTransform:\"uppercase\",children:t('Search')}),/*#__PURE__*/_jsx(ControlStretch,{children:/*#__PURE__*/_jsx(SearchInput,{onChange:handleChangeSearchQuery,placeholder:\"Search Pools\"})})]})]})]}),showFinishedPools&&/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",color:\"failure\",pb:\"32px\",children:t('These pools are no longer distributing rewards. Please unstake your tokens.')}),viewMode===ViewMode.CARD?cardLayout:tableLayout,/*#__PURE__*/_jsx(\"div\",{ref:loadMoreRef}),/*#__PURE__*/_jsx(Image,{mx:\"auto\",mt:\"12px\",src:\"/images/decorations/3d-syrup-bunnies.png\",alt:\"Pancake illustration\",width:192,height:184.5})]})]});};export default Pools;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Pools/index.tsx"],"names":["React","useEffect","useMemo","useRef","useState","useLocation","styled","BigNumber","useWeb3React","Heading","Flex","Image","Text","orderBy","partition","useTranslation","usePersistState","usePools","useFetchCakeVault","useFetchPublicPoolsData","usePollFarmsData","useCakeVault","latinise","FlexLayout","Page","PageHeader","SearchInput","Select","PoolCard","CakeVaultCard","PoolTabButtons","BountyCard","HelpButton","PoolsTable","ViewMode","getAprData","getCakeVaultEarnings","CardLayout","PoolControls","theme","mediaQueries","md","SearchSortContainer","ControlStretch","NUMBER_OF_POOLS_VISIBLE","Pools","location","t","account","poolsWithoutAutoVault","pools","userDataLoaded","localStorageKey","stakedOnly","setStakedOnly","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","TABLE","viewMode","setViewMode","searchQuery","setSearchQuery","sortOption","setSortOption","userData","cakeAtLastUserAction","userShares","performanceFee","fees","pricePerFullShare","totalCakeInVault","accountHasVaultShares","gt","performanceFeeAsDecimal","cakePool","find","pool","sousId","cakeAutoVault","isAutoVault","isFinished","finishedPools","openPools","stakedOnlyFinishedPools","filter","stakedBalance","isGreaterThan","stakedOnlyOpenPools","hasStakeInFinishedPools","length","showMorePools","entries","entry","isIntersecting","poolsCurrentlyVisible","loadMoreObserver","IntersectionObserver","rootMargin","threshold","observe","current","showFinishedPools","pathname","includes","handleChangeSearchQuery","event","target","value","handleSortOptionChange","option","sortPools","poolsToSort","apr","earningTokenPrice","autoUsdToDisplay","pendingReward","times","toNumber","totalStaked","poolsToShow","chosenPools","lowercaseQuery","toLowerCase","earningToken","symbol","slice","cardLayout","map","tableLayout","label","CARD"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\n  flex-direction: column;\n  margin-bottom: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('TOCO Nests')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Sustainably High Yields Brought to You by the Toucans.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('The First BSC Yield Farm Powered By Proprietary AI Algorithms.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls justifyContent=\"space-between\">\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <SearchSortContainer>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </Flex>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <ControlStretch>\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n              </ControlStretch>\n            </Flex>\n          </SearchSortContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n"]},"metadata":{},"sourceType":"module"}