{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/src/views/Home/components/CakeHarvestBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from 'contexts/Localization';\nimport { usePriceCakeBusd } from 'state/hooks';\nimport styled from 'styled-components';\nimport { DEFAULT_TOKEN_DECIMAL } from 'config';\nimport CardValue from './CardValue';\nimport CardBusdValue from './CardBusdValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Block = styled.div`\n  margin-bottom: 24px;\n`;\n_c = Block;\n\nconst CakeHarvestBalance = ({\n  farmsWithBalance\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const earningsSum = farmsWithBalance.reduce((accum, earning) => {\n    const earningNumber = new BigNumber(earning.balance);\n\n    if (earningNumber.eq(0)) {\n      return accum;\n    }\n\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber();\n  }, 0);\n  const cakePriceBusd = usePriceCakeBusd();\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber();\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      color: \"textDisabled\",\n      style: {\n        lineHeight: '76px'\n      },\n      children: t('Locked')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Block, {\n    children: [/*#__PURE__*/_jsxDEV(CardValue, {\n      value: earningsSum,\n      lineHeight: \"1.5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), cakePriceBusd.gt(0) && /*#__PURE__*/_jsxDEV(CardBusdValue, {\n      value: earningsBusd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CakeHarvestBalance, \"IRzvWUC2hjtS//G5CXl6hvK1I3Y=\", false, function () {\n  return [useTranslation, useWeb3React, usePriceCakeBusd];\n});\n\n_c2 = CakeHarvestBalance;\nexport default CakeHarvestBalance;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Block\");\n$RefreshReg$(_c2, \"CakeHarvestBalance\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Home/components/CakeHarvestBalance.tsx"],"names":["React","Text","useWeb3React","BigNumber","useTranslation","usePriceCakeBusd","styled","DEFAULT_TOKEN_DECIMAL","CardValue","CardBusdValue","Block","div","CakeHarvestBalance","farmsWithBalance","t","account","earningsSum","reduce","accum","earning","earningNumber","balance","eq","toNumber","cakePriceBusd","earningsBusd","multipliedBy","lineHeight","gt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,qBAAT,QAAsC,QAAtC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,GAAI;AACzB;AACA,CAFA;KAAMD,K;;AAQN,MAAME,kBAAqD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AACtF,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAcb,YAAY,EAAhC;AACA,QAAMc,WAAW,GAAGH,gBAAgB,CAACI,MAAjB,CAAwB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC9D,UAAMC,aAAa,GAAG,IAAIjB,SAAJ,CAAcgB,OAAO,CAACE,OAAtB,CAAtB;;AACA,QAAID,aAAa,CAACE,EAAd,CAAiB,CAAjB,CAAJ,EAAyB;AACvB,aAAOJ,KAAP;AACD;;AACD,WAAOA,KAAK,GAAGE,aAAa,CAACT,GAAd,CAAkBJ,qBAAlB,EAAyCgB,QAAzC,EAAf;AACD,GANmB,EAMjB,CANiB,CAApB;AAOA,QAAMC,aAAa,GAAGnB,gBAAgB,EAAtC;AACA,QAAMoB,YAAY,GAAG,IAAItB,SAAJ,CAAca,WAAd,EAA2BU,YAA3B,CAAwCF,aAAxC,EAAuDD,QAAvD,EAArB;;AAEA,MAAI,CAACR,OAAL,EAAc;AACZ,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAA2B,MAAA,KAAK,EAAE;AAAEY,QAAAA,UAAU,EAAE;AAAd,OAAlC;AAAA,gBACGb,CAAC,CAAC,QAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,KAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEE,WAAlB;AAA+B,MAAA,UAAU,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,EAEGQ,aAAa,CAACI,EAAd,CAAiB,CAAjB,kBAAuB,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEH;AAAtB;AAAA;AAAA;AAAA;AAAA,YAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3BD;;GAAMb,kB;UACUR,c,EACMF,Y,EAQEG,gB;;;MAVlBO,kB;AA6BN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { FarmWithBalance } from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n`\n\ninterface CakeHarvestBalanceProps {\n  farmsWithBalance: FarmWithBalance[]\n}\n\nconst CakeHarvestBalance: React.FC<CakeHarvestBalanceProps> = ({ farmsWithBalance }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const earningsSum = farmsWithBalance.reduce((accum, earning) => {\n    const earningNumber = new BigNumber(earning.balance)\n    if (earningNumber.eq(0)) {\n      return accum\n    }\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n  }, 0)\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      {cakePriceBusd.gt(0) && <CardBusdValue value={earningsBusd} />}\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n"]},"metadata":{},"sourceType":"module"}