{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from'react';import styled from'styled-components';import{Flex,ExpandableLabel,CardFooter,Skeleton,Heading,Box,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useGetLotteryGraphDataById,usePriceCakeBusd}from'state/hooks';import{formatNumber,getBalanceNumber}from'utils/formatBalance';import Balance from'components/Balance';import RewardBrackets from'../RewardBrackets';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NextDrawWrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  padding: 24px;\\n  flex-direction: column;\\n\\n  \",\" {\\n    flex-direction: row;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.background;},function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var PreviousRoundCardFooter=function PreviousRoundCardFooter(_ref3){var lotteryData=_ref3.lotteryData,lotteryId=_ref3.lotteryId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExpanded=_useState2[0],setIsExpanded=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var amountCollectedInCake=lotteryData.amountCollectedInCake;var lotteryGraphData=useGetLotteryGraphDataById(lotteryId);var cakePriceBusd=usePriceCakeBusd();var prizeInBusd=amountCollectedInCake.times(cakePriceBusd);var getPrizeBalances=function getPrizeBalances(){return/*#__PURE__*/_jsxs(_Fragment,{children:[prizeInBusd.isNaN()?/*#__PURE__*/_jsx(Skeleton,{my:\"7px\",height:40,width:160}):/*#__PURE__*/_jsxs(Heading,{scale:\"xl\",lineHeight:\"1\",color:\"secondary\",children:[\"~$\",formatNumber(getBalanceNumber(prizeInBusd),0,0)]}),prizeInBusd.isNaN()?/*#__PURE__*/_jsx(Skeleton,{my:\"2px\",height:14,width:90}):/*#__PURE__*/_jsx(Balance,{fontSize:\"14px\",color:\"textSubtle\",unit:\" CAKE\",value:getBalanceNumber(amountCollectedInCake),decimals:0})]});};return/*#__PURE__*/_jsxs(CardFooter,{p:\"0\",children:[isExpanded&&/*#__PURE__*/_jsxs(NextDrawWrapper,{children:[/*#__PURE__*/_jsxs(Flex,{mr:\"24px\",flexDirection:\"column\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{children:t('Prize pot')}),getPrizeBalances()]}),/*#__PURE__*/_jsx(Box,{mb:\"24px\",children:/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",children:[t('Total players this round'),\": \",lotteryGraphData.totalUsers.toLocaleString()]})})]}),/*#__PURE__*/_jsx(RewardBrackets,{lotteryData:lotteryData,isHistoricRound:true})]}),/*#__PURE__*/_jsx(Flex,{p:\"8px 24px\",alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(ExpandableLabel,{expanded:isExpanded,onClick:function onClick(){return setIsExpanded(!isExpanded);},children:isExpanded?t('Hide'):t('Details')})})]});};export default PreviousRoundCardFooter;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Lottery/components/PreviousRoundCard/Footer.tsx"],"names":["React","useState","styled","Flex","ExpandableLabel","CardFooter","Skeleton","Heading","Box","Text","useTranslation","useGetLotteryGraphDataById","usePriceCakeBusd","formatNumber","getBalanceNumber","Balance","RewardBrackets","NextDrawWrapper","theme","colors","background","mediaQueries","sm","PreviousRoundCardFooter","lotteryData","lotteryId","isExpanded","setIsExpanded","t","amountCollectedInCake","lotteryGraphData","cakePriceBusd","prizeInBusd","times","getPrizeBalances","isNaN","totalUsers","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, ExpandableLabel, CardFooter, Skeleton, Heading, Box, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryRound } from 'state/types'\nimport { useGetLotteryGraphDataById, usePriceCakeBusd } from 'state/hooks'\nimport { formatNumber, getBalanceNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport RewardBrackets from '../RewardBrackets'\n\nconst NextDrawWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.background};\n  padding: 24px;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst PreviousRoundCardFooter: React.FC<{ lotteryData: LotteryRound; lotteryId: string }> = ({\n  lotteryData,\n  lotteryId,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const { amountCollectedInCake } = lotteryData\n  const lotteryGraphData = useGetLotteryGraphDataById(lotteryId)\n  const cakePriceBusd = usePriceCakeBusd()\n  const prizeInBusd = amountCollectedInCake.times(cakePriceBusd)\n\n  const getPrizeBalances = () => {\n    return (\n      <>\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"7px\" height={40} width={160} />\n        ) : (\n          <Heading scale=\"xl\" lineHeight=\"1\" color=\"secondary\">\n            ~${formatNumber(getBalanceNumber(prizeInBusd), 0, 0)}\n          </Heading>\n        )}\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"2px\" height={14} width={90} />\n        ) : (\n          <Balance\n            fontSize=\"14px\"\n            color=\"textSubtle\"\n            unit=\" CAKE\"\n            value={getBalanceNumber(amountCollectedInCake)}\n            decimals={0}\n          />\n        )}\n      </>\n    )\n  }\n\n  return (\n    <CardFooter p=\"0\">\n      {isExpanded && (\n        <NextDrawWrapper>\n          <Flex mr=\"24px\" flexDirection=\"column\" justifyContent=\"space-between\">\n            <Box>\n              <Heading>{t('Prize pot')}</Heading>\n              {getPrizeBalances()}\n            </Box>\n            <Box mb=\"24px\">\n              <Text fontSize=\"14px\">\n                {t('Total players this round')}: {lotteryGraphData.totalUsers.toLocaleString()}\n              </Text>\n            </Box>\n          </Flex>\n          <RewardBrackets lotteryData={lotteryData} isHistoricRound />\n        </NextDrawWrapper>\n      )}\n      <Flex p=\"8px 24px\" alignItems=\"center\" justifyContent=\"center\">\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </Flex>\n    </CardFooter>\n  )\n}\n\nexport default PreviousRoundCardFooter\n"]},"metadata":{},"sourceType":"module"}