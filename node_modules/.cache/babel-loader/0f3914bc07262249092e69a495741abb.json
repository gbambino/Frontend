{"ast":null,"code":"import React from'react';import{Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import useTokenBalance from'hooks/useTokenBalance';import{useTranslation}from'contexts/Localization';import{getCakeAddress}from'utils/addressHelpers';import{getBalanceNumber}from'utils/formatBalance';import{usePriceCakeBusd}from'state/hooks';import{BigNumber}from'bignumber.js';import CardValue from'./CardValue';import CardBusdValue from'./CardBusdValue';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CakeWalletBalance=function CakeWalletBalance(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTokenBalance=useTokenBalance(getCakeAddress()),cakeBalance=_useTokenBalance.balance;var cakePriceBusd=usePriceCakeBusd();var busdBalance=new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(cakePriceBusd).toNumber();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;if(!account){return/*#__PURE__*/_jsx(Text,{color:\"textDisabled\",style:{lineHeight:'54px'},children:t('Locked')});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CardValue,{value:getBalanceNumber(cakeBalance),decimals:4,fontSize:\"24px\",lineHeight:\"36px\"}),cakePriceBusd.gt(0)?/*#__PURE__*/_jsx(CardBusdValue,{value:busdBalance}):/*#__PURE__*/_jsx(\"br\",{})]});};export default CakeWalletBalance;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Home/components/CakeWalletBalance.tsx"],"names":["React","Text","useWeb3React","useTokenBalance","useTranslation","getCakeAddress","getBalanceNumber","usePriceCakeBusd","BigNumber","CardValue","CardBusdValue","CakeWalletBalance","t","cakeBalance","balance","cakePriceBusd","busdBalance","multipliedBy","toNumber","account","lineHeight","gt"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,oBAArB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OAASC,gBAAT,KAAiC,aAAjC,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,6IAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,oBAAcP,cAAc,EAA5B,CAAQQ,CAAR,iBAAQA,CAAR,CACA,qBAAiCT,eAAe,CAACE,cAAc,EAAf,CAAhD,CAAiBQ,WAAjB,kBAAQC,OAAR,CACA,GAAMC,CAAAA,aAAa,CAAGR,gBAAgB,EAAtC,CACA,GAAMS,CAAAA,WAAW,CAAG,GAAIR,CAAAA,SAAJ,CAAcF,gBAAgB,CAACO,WAAD,CAA9B,EAA6CI,YAA7C,CAA0DF,aAA1D,EAAyEG,QAAzE,EAApB,CACA,kBAAoBhB,YAAY,EAAhC,CAAQiB,OAAR,eAAQA,OAAR,CAEA,GAAI,CAACA,OAAL,CAAc,CACZ,mBACE,KAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,CAA2B,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAAlC,UACGR,CAAC,CAAC,QAAD,CADJ,EADF,CAKD,CAED,mBACE,wCACE,KAAC,SAAD,EAAW,KAAK,CAAEN,gBAAgB,CAACO,WAAD,CAAlC,CAAiD,QAAQ,CAAE,CAA3D,CAA8D,QAAQ,CAAC,MAAvE,CAA8E,UAAU,CAAC,MAAzF,EADF,CAEGE,aAAa,CAACM,EAAd,CAAiB,CAAjB,eAAsB,KAAC,aAAD,EAAe,KAAK,CAAEL,WAAtB,EAAtB,cAA8D,aAFjE,GADF,CAMD,CArBD,CAuBA,cAAeL,CAAAA,iBAAf","sourcesContent":["import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const { t } = useTranslation()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const cakePriceBusd = usePriceCakeBusd()\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(cakePriceBusd).toNumber()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <>\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      {cakePriceBusd.gt(0) ? <CardBusdValue value={busdBalance} /> : <br />}\n    </>\n  )\n}\n\nexport default CakeWalletBalance\n"]},"metadata":{},"sourceType":"module"}