{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{useCountUp}from'react-countup';import{Text}from'@pancakeswap/uikit';import{jsxs as _jsxs}from\"react/jsx-runtime\";var CardValue=function CardValue(_ref){var value=_ref.value,decimals=_ref.decimals,_ref$fontSize=_ref.fontSize,fontSize=_ref$fontSize===void 0?'40px':_ref$fontSize,_ref$lineHeight=_ref.lineHeight,lineHeight=_ref$lineHeight===void 0?'1':_ref$lineHeight,_ref$prefix=_ref.prefix,prefix=_ref$prefix===void 0?'':_ref$prefix,_ref$bold=_ref.bold,bold=_ref$bold===void 0?true:_ref$bold,_ref$color=_ref.color,color=_ref$color===void 0?'text':_ref$color;var _useCountUp=useCountUp({start:0,end:value,duration:1,separator:',',decimals:// eslint-disable-next-line no-nested-ternary\ndecimals!==undefined?decimals:value<0?4:value>1e5?0:3}),countUp=_useCountUp.countUp,update=_useCountUp.update;var updateValue=useRef(update);useEffect(function(){updateValue.current(value);},[value,updateValue]);return/*#__PURE__*/_jsxs(Text,{bold:bold,fontSize:fontSize,style:{lineHeight:lineHeight},color:color,children:[prefix,countUp]});};export default CardValue;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Home/components/CardValue.tsx"],"names":["React","useEffect","useRef","useCountUp","Text","CardValue","value","decimals","fontSize","lineHeight","prefix","bold","color","start","end","duration","separator","undefined","countUp","update","updateValue","current"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,UAAT,KAA2B,eAA3B,CACA,OAASC,IAAT,KAAqB,oBAArB,C,6CAYA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAQtC,IAPJC,CAAAA,KAOI,MAPJA,KAOI,CANJC,QAMI,MANJA,QAMI,oBALJC,QAKI,CALJA,QAKI,wBALO,MAKP,oCAJJC,UAII,CAJJA,UAII,0BAJS,GAIT,kCAHJC,MAGI,CAHJA,MAGI,sBAHK,EAGL,4BAFJC,IAEI,CAFJA,IAEI,oBAFG,IAEH,2BADJC,KACI,CADJA,KACI,qBADI,MACJ,YACJ,gBAA4BT,UAAU,CAAC,CACrCU,KAAK,CAAE,CAD8B,CAErCC,GAAG,CAAER,KAFgC,CAGrCS,QAAQ,CAAE,CAH2B,CAIrCC,SAAS,CAAE,GAJ0B,CAKrCT,QAAQ,CACN;AACAA,QAAQ,GAAKU,SAAb,CAAyBV,QAAzB,CAAoCD,KAAK,CAAG,CAAR,CAAY,CAAZ,CAAgBA,KAAK,CAAG,GAAR,CAAc,CAAd,CAAkB,CAPnC,CAAD,CAAtC,CAAQY,OAAR,aAAQA,OAAR,CAAiBC,MAAjB,aAAiBA,MAAjB,CAUA,GAAMC,CAAAA,WAAW,CAAGlB,MAAM,CAACiB,MAAD,CAA1B,CAEAlB,SAAS,CAAC,UAAM,CACdmB,WAAW,CAACC,OAAZ,CAAoBf,KAApB,EACD,CAFQ,CAEN,CAACA,KAAD,CAAQc,WAAR,CAFM,CAAT,CAIA,mBACE,MAAC,IAAD,EAAM,IAAI,CAAET,IAAZ,CAAkB,QAAQ,CAAEH,QAA5B,CAAsC,KAAK,CAAE,CAAEC,UAAU,CAAVA,UAAF,CAA7C,CAA6D,KAAK,CAAEG,KAApE,WACGF,MADH,CAEGQ,OAFH,GADF,CAMD,CA/BD,CAiCA,cAAeb,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n"]},"metadata":{},"sourceType":"module"}