{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Flex,TooltipText,IconButton,useModal,CalculateIcon,Skeleton,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import Balance from'components/Balance';import ApyCalculatorModal from'components/ApyCalculatorModal';import{BASE_EXCHANGE_URL}from'config';import{getAprData}from'views/Pools/helpers';import{getAddress}from'utils/addressHelpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AprRow=function AprRow(_ref){var pool=_ref.pool,_ref$performanceFee=_ref.performanceFee,performanceFee=_ref$performanceFee===void 0?0:_ref$performanceFee;var _useTranslation=useTranslation(),t=_useTranslation.t;var stakingToken=pool.stakingToken,earningToken=pool.earningToken,isFinished=pool.isFinished,apr=pool.apr,earningTokenPrice=pool.earningTokenPrice,isAutoVault=pool.isAutoVault;var tooltipContent=isAutoVault?t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.'):t('This pool’s rewards aren’t compounded automatically, so we show APR');var _useTooltip=useTooltip(tooltipContent,{placement:'bottom-start'}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var _getAprData=getAprData(pool,performanceFee),earningsPercentageToDisplay=_getAprData.apr,roundingDecimals=_getAprData.roundingDecimals,compoundFrequency=_getAprData.compoundFrequency;var apyModalLink=stakingToken.address&&\"\".concat(BASE_EXCHANGE_URL,\"/#/swap?outputCurrency=\").concat(getAddress(stakingToken.address));var _useModal=useModal(/*#__PURE__*/_jsx(ApyCalculatorModal,{tokenPrice:earningTokenPrice,apr:apr,linkLabel:t('Get %symbol%',{symbol:stakingToken.symbol}),linkHref:apyModalLink||BASE_EXCHANGE_URL,earningTokenSymbol:earningToken.symbol,roundingDecimals:roundingDecimals,compoundFrequency:compoundFrequency,performanceFee:performanceFee})),_useModal2=_slicedToArray(_useModal,1),onPresentApyModal=_useModal2[0];return/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsx(TooltipText,{ref:targetRef,children:isAutoVault?\"\".concat(t('APY'),\":\"):\"\".concat(t('APR'),\":\")}),isFinished||!apr?/*#__PURE__*/_jsx(Skeleton,{width:\"82px\",height:\"32px\"}):/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",isDisabled:isFinished,value:earningsPercentageToDisplay,decimals:2,unit:\"%\",bold:true}),/*#__PURE__*/_jsx(IconButton,{onClick:onPresentApyModal,variant:\"text\",scale:\"sm\",children:/*#__PURE__*/_jsx(CalculateIcon,{color:\"textSubtle\",width:\"18px\"})})]})]});};export default AprRow;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Pools/components/PoolCard/AprRow.tsx"],"names":["React","Flex","TooltipText","IconButton","useModal","CalculateIcon","Skeleton","useTooltip","useTranslation","Balance","ApyCalculatorModal","BASE_EXCHANGE_URL","getAprData","getAddress","AprRow","pool","performanceFee","t","stakingToken","earningToken","isFinished","apr","earningTokenPrice","isAutoVault","tooltipContent","placement","targetRef","tooltip","tooltipVisible","earningsPercentageToDisplay","roundingDecimals","compoundFrequency","apyModalLink","address","symbol","onPresentApyModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address && `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${getAddress(stakingToken.address)}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n"]},"metadata":{},"sourceType":"module"}