{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{useWeb3React}from'@web3-react/core';import{Box,Flex,Heading,Text,Button,Link,OpenNewIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{getRoundResult,Result}from'state/predictions/helpers';import{getBscScanAddressUrl}from'utils/bscscan';import store from'state';import{useGetCurrentEpoch,usePriceBnbBusd}from'state/hooks';import{BetPosition}from'state/types';import{formatBnb,getMultiplier,getNetPayout}from'../helpers';import PnlChart from'./PnlChart';import SummaryRow from'./SummaryRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Divider=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  height: 1px;\\n  margin: 24px auto;\\n  width: 100%;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.backgroundDisabled;});var initialPnlSummary={won:{rounds:0,amount:0,payout:0,// net payout after all deductions\nbestRound:{id:'0',payout:0,// net payout after all deductions\nmultiplier:0}},lost:{rounds:0,amount:0},entered:{rounds:0,amount:0}};var getPnlSummary=function getPnlSummary(bets,currentEpoch){var state=store.getState();var rewardRate=state.predictions.rewardRate/100;return bets.reduce(function(summary,bet){var roundResult=getRoundResult(bet,currentEpoch);if(roundResult===Result.WIN){var payout=getNetPayout(bet,rewardRate);var bestRound=summary.won.bestRound;if(payout>bestRound.payout){var _bet$round=bet.round,bullAmount=_bet$round.bullAmount,bearAmount=_bet$round.bearAmount,totalAmount=_bet$round.totalAmount;var multiplier=getMultiplier(totalAmount,bet.position===BetPosition.BULL?bullAmount:bearAmount);bestRound={id:bet.round.id,payout:payout,multiplier:multiplier};}return{won:{rounds:summary.won.rounds+1,amount:summary.won.amount+bet.amount,payout:summary.won.payout+payout,bestRound:bestRound},entered:{rounds:summary.entered.rounds+1,amount:summary.entered.amount+bet.amount},lost:summary.lost};}if(roundResult===Result.LOSE){return{lost:{rounds:summary.lost.rounds+1,amount:summary.lost.amount+bet.amount},entered:{rounds:summary.entered.rounds+1,amount:summary.entered.amount+bet.amount},won:summary.won};}// Ignore Canceled and Live rounds\nreturn summary;},initialPnlSummary);};var PnlTab=function PnlTab(_ref2){var hasBetHistory=_ref2.hasBetHistory,bets=_ref2.bets;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var currentEpoch=useGetCurrentEpoch();var bnbBusdPrice=usePriceBnbBusd();var summary=getPnlSummary(bets,currentEpoch);var netResultAmount=summary.won.payout-summary.lost.amount;var netResultIsPositive=netResultAmount>0;var avgPositionEntered=summary.entered.amount/summary.entered.rounds;var avgBnbWonPerRound=netResultAmount/summary.entered.rounds;var avgBnbWonIsPositive=avgBnbWonPerRound>0;// Guard in case user has only lost rounds\nvar hasBestRound=summary.won.bestRound.payout!==0;return hasBetHistory?/*#__PURE__*/_jsxs(Box,{p:\"16px\",children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"24px\",color:\"secondary\",pb:\"24px\",children:t('Your history')}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(PnlChart,{lost:summary.lost.rounds,won:summary.won.rounds}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",justifyContent:\"center\",pl:\"24px\",children:[/*#__PURE__*/_jsx(Text,{bold:true,color:\"textSubtle\",children:t('Net results')}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"24px\",lineHeight:\"1\",color:netResultIsPositive?'success':'failure',children:\"\".concat(netResultIsPositive?'+':'').concat(formatBnb(netResultAmount),\" BNB\")}),/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",children:\"~$\".concat(formatBnb(bnbBusdPrice.times(netResultAmount).toNumber()))})]})]}),/*#__PURE__*/_jsxs(Box,{pl:\"8px\",children:[/*#__PURE__*/_jsx(Text,{mt:\"24px\",bold:true,color:\"textSubtle\",children:t('Average return / round')}),/*#__PURE__*/_jsx(Text,{bold:true,color:avgBnbWonIsPositive?'success':'failure',children:\"\".concat(avgBnbWonIsPositive?'+':'').concat(formatBnb(avgBnbWonPerRound),\" BNB\")}),/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",children:\"~$\".concat(formatBnb(bnbBusdPrice.times(avgBnbWonPerRound).toNumber()))}),hasBestRound&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mt:\"16px\",bold:true,color:\"textSubtle\",children:t('Best round: #%roundId%',{roundId:summary.won.bestRound.id})}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"flex-end\",children:[/*#__PURE__*/_jsx(Text,{bold:true,color:\"success\",children:\"+\".concat(formatBnb(summary.won.bestRound.payout),\" BNB\")}),/*#__PURE__*/_jsxs(Text,{ml:\"4px\",small:true,color:\"textSubtle\",children:[\"(\",summary.won.bestRound.multiplier.toFixed(2),\"x)\"]})]}),/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",children:\"~$\".concat(formatBnb(bnbBusdPrice.times(summary.won.bestRound.payout).toNumber()))})]}),/*#__PURE__*/_jsx(Text,{mt:\"16px\",bold:true,color:\"textSubtle\",children:t('Average position entered / round')}),/*#__PURE__*/_jsx(Text,{bold:true,children:\"\".concat(formatBnb(avgPositionEntered),\" BNB\")}),/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",children:\"~$\".concat(formatBnb(bnbBusdPrice.times(avgPositionEntered).toNumber()))}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(SummaryRow,{type:\"won\",summary:summary,bnbBusdPrice:bnbBusdPrice}),/*#__PURE__*/_jsx(SummaryRow,{type:\"lost\",summary:summary,bnbBusdPrice:bnbBusdPrice}),/*#__PURE__*/_jsx(SummaryRow,{type:\"entered\",summary:summary,bnbBusdPrice:bnbBusdPrice}),/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",mt:\"24px\",children:/*#__PURE__*/_jsx(Link,{href:\"\".concat(getBscScanAddressUrl(account),\"#internaltx\"),mb:\"16px\",external:true,children:/*#__PURE__*/_jsxs(Button,{mt:\"8px\",width:\"100%\",children:[t('View Reclaimed & Won'),/*#__PURE__*/_jsx(OpenNewIcon,{color:\"white\",ml:\"4px\"})]})})})]})]}):/*#__PURE__*/_jsxs(Box,{p:\"24px\",children:[/*#__PURE__*/_jsx(Heading,{size:\"lg\",textAlign:\"center\",mb:\"8px\",children:t('No prediction history available')}),/*#__PURE__*/_jsx(Text,{as:\"p\",textAlign:\"center\",children:t('If you are sure you should see history here, make sure youâ€™re connected to the correct wallet and try again.')})]});};export default PnlTab;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/History/PnlTab/PnlTab.tsx"],"names":["React","styled","useWeb3React","Box","Flex","Heading","Text","Button","Link","OpenNewIcon","useTranslation","getRoundResult","Result","getBscScanAddressUrl","store","useGetCurrentEpoch","usePriceBnbBusd","BetPosition","formatBnb","getMultiplier","getNetPayout","PnlChart","SummaryRow","Divider","div","theme","colors","backgroundDisabled","initialPnlSummary","won","rounds","amount","payout","bestRound","id","multiplier","lost","entered","getPnlSummary","bets","currentEpoch","state","getState","rewardRate","predictions","reduce","summary","bet","roundResult","WIN","round","bullAmount","bearAmount","totalAmount","position","BULL","LOSE","PnlTab","hasBetHistory","t","account","bnbBusdPrice","netResultAmount","netResultIsPositive","avgPositionEntered","avgBnbWonPerRound","avgBnbWonIsPositive","hasBestRound","times","toNumber","roundId","toFixed"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Box, Flex, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getRoundResult, Result } from 'state/predictions/helpers'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport store from 'state'\nimport { useGetCurrentEpoch, usePriceBnbBusd } from 'state/hooks'\nimport { Bet, BetPosition } from 'state/types'\nimport { formatBnb, getMultiplier, getNetPayout } from '../helpers'\nimport PnlChart from './PnlChart'\nimport SummaryRow from './SummaryRow'\n\ninterface PnlTabProps {\n  hasBetHistory: boolean\n  bets: Bet[]\n}\n\ninterface PnlCategory {\n  rounds: number\n  amount: number\n}\n\ninterface PnlSummary {\n  won: PnlCategory & { payout: number; bestRound: { id: string; payout: number; multiplier: number } }\n  lost: PnlCategory\n  entered: PnlCategory\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 24px auto;\n  width: 100%;\n`\n\nconst initialPnlSummary: PnlSummary = {\n  won: {\n    rounds: 0,\n    amount: 0,\n    payout: 0, // net payout after all deductions\n    bestRound: {\n      id: '0',\n      payout: 0, // net payout after all deductions\n      multiplier: 0,\n    },\n  },\n  lost: {\n    rounds: 0,\n    amount: 0,\n  },\n  entered: {\n    rounds: 0,\n    amount: 0,\n  },\n}\n\nconst getPnlSummary = (bets: Bet[], currentEpoch: number): PnlSummary => {\n  const state = store.getState()\n  const rewardRate = state.predictions.rewardRate / 100\n\n  return bets.reduce((summary: PnlSummary, bet) => {\n    const roundResult = getRoundResult(bet, currentEpoch)\n    if (roundResult === Result.WIN) {\n      const payout = getNetPayout(bet, rewardRate)\n      let { bestRound } = summary.won\n      if (payout > bestRound.payout) {\n        const { bullAmount, bearAmount, totalAmount } = bet.round\n        const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount)\n        bestRound = { id: bet.round.id, payout, multiplier }\n      }\n      return {\n        won: {\n          rounds: summary.won.rounds + 1,\n          amount: summary.won.amount + bet.amount,\n          payout: summary.won.payout + payout,\n          bestRound,\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount,\n        },\n        lost: summary.lost,\n      }\n    }\n    if (roundResult === Result.LOSE) {\n      return {\n        lost: {\n          rounds: summary.lost.rounds + 1,\n          amount: summary.lost.amount + bet.amount,\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount,\n        },\n        won: summary.won,\n      }\n    }\n    // Ignore Canceled and Live rounds\n    return summary\n  }, initialPnlSummary)\n}\n\nconst PnlTab: React.FC<PnlTabProps> = ({ hasBetHistory, bets }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const currentEpoch = useGetCurrentEpoch()\n  const bnbBusdPrice = usePriceBnbBusd()\n\n  const summary = getPnlSummary(bets, currentEpoch)\n  const netResultAmount = summary.won.payout - summary.lost.amount\n  const netResultIsPositive = netResultAmount > 0\n  const avgPositionEntered = summary.entered.amount / summary.entered.rounds\n  const avgBnbWonPerRound = netResultAmount / summary.entered.rounds\n  const avgBnbWonIsPositive = avgBnbWonPerRound > 0\n\n  // Guard in case user has only lost rounds\n  const hasBestRound = summary.won.bestRound.payout !== 0\n\n  return hasBetHistory ? (\n    <Box p=\"16px\">\n      <Text bold fontSize=\"24px\" color=\"secondary\" pb=\"24px\">\n        {t('Your history')}\n      </Text>\n      <Flex>\n        <PnlChart lost={summary.lost.rounds} won={summary.won.rounds} />\n        <Flex flexDirection=\"column\" justifyContent=\"center\" pl=\"24px\">\n          <Text bold color=\"textSubtle\">\n            {t('Net results')}\n          </Text>\n          <Text bold fontSize=\"24px\" lineHeight=\"1\" color={netResultIsPositive ? 'success' : 'failure'}>\n            {`${netResultIsPositive ? '+' : ''}${formatBnb(netResultAmount)} BNB`}\n          </Text>\n          <Text small color=\"textSubtle\">\n            {`~$${formatBnb(bnbBusdPrice.times(netResultAmount).toNumber())}`}\n          </Text>\n        </Flex>\n      </Flex>\n      <Box pl=\"8px\">\n        <Text mt=\"24px\" bold color=\"textSubtle\">\n          {t('Average return / round')}\n        </Text>\n        <Text bold color={avgBnbWonIsPositive ? 'success' : 'failure'}>\n          {`${avgBnbWonIsPositive ? '+' : ''}${formatBnb(avgBnbWonPerRound)} BNB`}\n        </Text>\n        <Text small color=\"textSubtle\">\n          {`~$${formatBnb(bnbBusdPrice.times(avgBnbWonPerRound).toNumber())}`}\n        </Text>\n\n        {hasBestRound && (\n          <>\n            <Text mt=\"16px\" bold color=\"textSubtle\">\n              {t('Best round: #%roundId%', { roundId: summary.won.bestRound.id })}\n            </Text>\n            <Flex alignItems=\"flex-end\">\n              <Text bold color=\"success\">{`+${formatBnb(summary.won.bestRound.payout)} BNB`}</Text>\n              <Text ml=\"4px\" small color=\"textSubtle\">\n                ({summary.won.bestRound.multiplier.toFixed(2)}x)\n              </Text>\n            </Flex>\n            <Text small color=\"textSubtle\">\n              {`~$${formatBnb(bnbBusdPrice.times(summary.won.bestRound.payout).toNumber())}`}\n            </Text>\n          </>\n        )}\n\n        <Text mt=\"16px\" bold color=\"textSubtle\">\n          {t('Average position entered / round')}\n        </Text>\n        <Text bold>{`${formatBnb(avgPositionEntered)} BNB`}</Text>\n        <Text small color=\"textSubtle\">\n          {`~$${formatBnb(bnbBusdPrice.times(avgPositionEntered).toNumber())}`}\n        </Text>\n\n        <Divider />\n\n        <SummaryRow type=\"won\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n        <SummaryRow type=\"lost\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n        <SummaryRow type=\"entered\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n\n        <Flex justifyContent=\"center\" mt=\"24px\">\n          <Link href={`${getBscScanAddressUrl(account)}#internaltx`} mb=\"16px\" external>\n            <Button mt=\"8px\" width=\"100%\">\n              {t('View Reclaimed & Won')}\n              <OpenNewIcon color=\"white\" ml=\"4px\" />\n            </Button>\n          </Link>\n        </Flex>\n      </Box>\n    </Box>\n  ) : (\n    <Box p=\"24px\">\n      <Heading size=\"lg\" textAlign=\"center\" mb=\"8px\">\n        {t('No prediction history available')}\n      </Heading>\n      <Text as=\"p\" textAlign=\"center\">\n        {t(\n          'If you are sure you should see history here, make sure youâ€™re connected to the correct wallet and try again.',\n        )}\n      </Text>\n    </Box>\n  )\n}\n\nexport default PnlTab\n"]},"metadata":{},"sourceType":"module"}