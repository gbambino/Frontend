{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{Skeleton,Text,useTooltip,HelpIcon,Flex,Box,useModal,useMatchBreakpoints}from'@pancakeswap/uikit';import BigNumber from'bignumber.js';import{PoolCategory}from'config/constants/types';import{BIG_ZERO}from'utils/bigNumber';import{formatNumber,getBalanceNumber,getFullDisplayBalance}from'utils/formatBalance';import Balance from'components/Balance';import{useCakeVault}from'state/hooks';import{useTranslation}from'contexts/Localization';import{getCakeVaultEarnings}from'views/Pools/helpers';import BaseCell,{CellContent}from'./BaseCell';import CollectModal from'../../PoolCard/Modals/CollectModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCell=styled(BaseCell)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex: 4.5;\\n  \",\" {\\n    flex: 1 0 120px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var HelpIconWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-self: center;\\n\"])));var EarningsCell=function EarningsCell(_ref2){var pool=_ref2.pool,account=_ref2.account,userDataLoaded=_ref2.userDataLoaded;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useMatchBreakpoints=useMatchBreakpoints(),isXs=_useMatchBreakpoints.isXs,isSm=_useMatchBreakpoints.isSm;var sousId=pool.sousId,earningToken=pool.earningToken,poolCategory=pool.poolCategory,userData=pool.userData,earningTokenPrice=pool.earningTokenPrice,isAutoVault=pool.isAutoVault;var isManualCakePool=sousId===0;var earnings=(userData===null||userData===void 0?void 0:userData.pendingReward)?new BigNumber(userData.pendingReward):BIG_ZERO;// These will be reassigned later if its Auto CAKE vault\nvar earningTokenBalance=getBalanceNumber(earnings,earningToken.decimals);var earningTokenDollarBalance=getBalanceNumber(earnings.multipliedBy(earningTokenPrice),earningToken.decimals);var hasEarnings=account&&earnings.gt(0);var fullBalance=getFullDisplayBalance(earnings,earningToken.decimals);var formattedBalance=formatNumber(earningTokenBalance,3,3);var isBnbPool=poolCategory===PoolCategory.BINANCE;// Auto CAKE vault calculations\nvar _useCakeVault=useCakeVault(),_useCakeVault$userDat=_useCakeVault.userData,cakeAtLastUserAction=_useCakeVault$userDat.cakeAtLastUserAction,userShares=_useCakeVault$userDat.userShares,lastUserActionTime=_useCakeVault$userDat.lastUserActionTime,pricePerFullShare=_useCakeVault.pricePerFullShare;var _getCakeVaultEarnings=getCakeVaultEarnings(account,cakeAtLastUserAction,userShares,pricePerFullShare,earningTokenPrice),hasAutoEarnings=_getCakeVaultEarnings.hasAutoEarnings,autoCakeToDisplay=_getCakeVaultEarnings.autoCakeToDisplay,autoUsdToDisplay=_getCakeVaultEarnings.autoUsdToDisplay;var lastActionInMs=lastUserActionTime&&parseInt(lastUserActionTime)*1000;var dateTimeLastAction=new Date(lastActionInMs);var dateStringToDisplay=dateTimeLastAction.toLocaleString();var labelText=isAutoVault?t('Recent CAKE profit'):t('%asset% Earned',{asset:earningToken.symbol});earningTokenBalance=isAutoVault?autoCakeToDisplay:earningTokenBalance;hasEarnings=isAutoVault?hasAutoEarnings:hasEarnings;earningTokenDollarBalance=isAutoVault?autoUsdToDisplay:earningTokenDollarBalance;var _useTooltip=useTooltip(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",value:autoCakeToDisplay,decimals:3,bold:true,unit:\" CAKE\"}),/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",value:autoUsdToDisplay,decimals:2,bold:true,prefix:\"~$\"}),t('Earned since your last action'),/*#__PURE__*/_jsx(Text,{children:dateStringToDisplay})]}),{placement:'bottom'}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var _useModal=useModal(/*#__PURE__*/_jsx(CollectModal,{formattedBalance:formattedBalance,fullBalance:fullBalance,earningToken:earningToken,earningsDollarValue:earningTokenDollarBalance,sousId:sousId,isBnbPool:isBnbPool,isCompoundPool:isManualCakePool})),_useModal2=_slicedToArray(_useModal,1),onPresentCollect=_useModal2[0];var handleEarningsClick=function handleEarningsClick(event){event.stopPropagation();onPresentCollect();};return/*#__PURE__*/_jsx(StyledCell,{role:\"cell\",children:/*#__PURE__*/_jsxs(CellContent,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",textAlign:\"left\",children:labelText}),!userDataLoaded&&account?/*#__PURE__*/_jsx(Skeleton,{width:\"80px\",height:\"16px\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsxs(Box,{mr:\"8px\",height:\"32px\",onClick:!isAutoVault&&hasEarnings?handleEarningsClick:undefined,children:[/*#__PURE__*/_jsx(Balance,{mt:\"4px\",bold:!isXs&&!isSm,fontSize:isXs||isSm?'14px':'16px',color:hasEarnings?'primary':'textDisabled',decimals:hasEarnings?5:1,value:hasEarnings?earningTokenBalance:0}),hasEarnings?/*#__PURE__*/_jsx(_Fragment,{children:earningTokenPrice>0&&/*#__PURE__*/_jsx(Balance,{display:\"inline\",fontSize:\"12px\",color:\"textSubtle\",decimals:2,prefix:\"~\",value:earningTokenDollarBalance,unit:\" USD\"})}):/*#__PURE__*/_jsx(Text,{mt:\"4px\",fontSize:\"12px\",color:\"textDisabled\",children:\"0 USD\"})]}),isAutoVault&&hasEarnings&&!isXs&&!isSm&&/*#__PURE__*/_jsx(HelpIconWrapper,{ref:targetRef,children:/*#__PURE__*/_jsx(HelpIcon,{color:\"textSubtle\"})})]})]})]})});};export default EarningsCell;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Pools/components/PoolsTable/Cells/EarningsCell.tsx"],"names":["React","styled","Skeleton","Text","useTooltip","HelpIcon","Flex","Box","useModal","useMatchBreakpoints","BigNumber","PoolCategory","BIG_ZERO","formatNumber","getBalanceNumber","getFullDisplayBalance","Balance","useCakeVault","useTranslation","getCakeVaultEarnings","BaseCell","CellContent","CollectModal","StyledCell","theme","mediaQueries","sm","HelpIconWrapper","div","EarningsCell","pool","account","userDataLoaded","t","isXs","isSm","sousId","earningToken","poolCategory","userData","earningTokenPrice","isAutoVault","isManualCakePool","earnings","pendingReward","earningTokenBalance","decimals","earningTokenDollarBalance","multipliedBy","hasEarnings","gt","fullBalance","formattedBalance","isBnbPool","BINANCE","cakeAtLastUserAction","userShares","lastUserActionTime","pricePerFullShare","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","lastActionInMs","parseInt","dateTimeLastAction","Date","dateStringToDisplay","toLocaleString","labelText","asset","symbol","placement","targetRef","tooltip","tooltipVisible","onPresentCollect","handleEarningsClick","event","stopPropagation","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n"]},"metadata":{},"sourceType":"module"}