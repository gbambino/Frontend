{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from'react';import styled from'styled-components';import{Modal,Text,Flex,Image,Button,Slider,BalanceInput,AutoRenewIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import{BASE_EXCHANGE_URL}from'config';import{useAppDispatch}from'state';import{BIG_TEN}from'utils/bigNumber';import{useCakeVault,usePriceCakeBusd}from'state/hooks';import{useCakeVaultContract}from'hooks/useContract';import useTheme from'hooks/useTheme';import useWithdrawalFeeTimer from'views/Pools/hooks/useWithdrawalFeeTimer';import BigNumber from'bignumber.js';import{getFullDisplayBalance,formatNumber,getDecimalAmount}from'utils/formatBalance';import useToast from'hooks/useToast';import{fetchCakeVaultUserData}from'state/pools';import{getAddress}from'utils/addressHelpers';import{convertCakeToShares}from'../../helpers';import FeeSummary from'./FeeSummary';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var StyledButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n\"])));var callOptions={gasLimit:380000};var VaultStakeModal=function VaultStakeModal(_ref){var pool=_ref.pool,stakingMax=_ref.stakingMax,_ref$isRemovingStake=_ref.isRemovingStake,isRemovingStake=_ref$isRemovingStake===void 0?false:_ref$isRemovingStake,onDismiss=_ref.onDismiss;var dispatch=useAppDispatch();var stakingToken=pool.stakingToken;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var cakeVaultContract=useCakeVaultContract();var _useCakeVault=useCakeVault(),_useCakeVault$userDat=_useCakeVault.userData,lastDepositedTime=_useCakeVault$userDat.lastDepositedTime,userShares=_useCakeVault$userDat.userShares,pricePerFullShare=_useCakeVault.pricePerFullShare;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),stakeAmount=_useState4[0],setStakeAmount=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),percent=_useState6[0],setPercent=_useState6[1];var _useWithdrawalFeeTime=useWithdrawalFeeTimer(parseInt(lastDepositedTime,10),userShares),hasUnstakingFee=_useWithdrawalFeeTime.hasUnstakingFee;var cakePriceBusd=usePriceCakeBusd();var usdValueStaked=cakePriceBusd.gt(0)&&stakeAmount?formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()):'';var handleStakeInputChange=function handleStakeInputChange(input){if(input){var convertedInput=new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals));var percentage=Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber());setPercent(percentage>100?100:percentage);}else{setPercent(0);}setStakeAmount(input);};var handleChangePercent=function handleChangePercent(sliderPercent){if(sliderPercent>0){var percentageOfStakingMax=stakingMax.dividedBy(100).multipliedBy(sliderPercent);var amountToStake=getFullDisplayBalance(percentageOfStakingMax,stakingToken.decimals,stakingToken.decimals);setStakeAmount(amountToStake);}else{setStakeAmount('');}setPercent(sliderPercent);};var handleWithdrawal=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(convertedStakeAmount){var shareStakeToWithdraw,triggerWithdrawAllThreshold,sharesRemaining,isWithdrawingAll,tx,receipt,_tx,_receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);shareStakeToWithdraw=convertCakeToShares(convertedStakeAmount,pricePerFullShare);// trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\ntriggerWithdrawAllThreshold=new BigNumber(1000000000000);sharesRemaining=userShares.minus(shareStakeToWithdraw.sharesAsBigNumber);isWithdrawingAll=sharesRemaining.lte(triggerWithdrawAllThreshold);if(!isWithdrawingAll){_context.next=22;break;}_context.prev=6;_context.next=9;return cakeVaultContract.withdrawAll(callOptions);case 9:tx=_context.sent;_context.next=12;return tx.wait();case 12:receipt=_context.sent;if(receipt.status){toastSuccess(t('Unstaked!'),t('Your earnings have also been harvested to your wallet'));setPendingTx(false);onDismiss();dispatch(fetchCakeVaultUserData({account:account}));}_context.next=20;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](6);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 20:_context.next=36;break;case 22:_context.prev=22;_context.next=25;return cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(),callOptions);case 25:_tx=_context.sent;_context.next=28;return _tx.wait();case 28:_receipt=_context.sent;if(_receipt.status){toastSuccess(t('Unstaked!'),t('Your earnings have also been harvested to your wallet'));setPendingTx(false);onDismiss();dispatch(fetchCakeVaultUserData({account:account}));}_context.next=36;break;case 32:_context.prev=32;_context.t1=_context[\"catch\"](22);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 36:case\"end\":return _context.stop();}}},_callee,null,[[6,16],[22,32]]);}));return function handleWithdrawal(_x){return _ref2.apply(this,arguments);};}();var handleDeposit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(convertedStakeAmount){var tx,receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setPendingTx(true);_context2.prev=1;_context2.next=4;return cakeVaultContract.deposit(convertedStakeAmount.toString(),callOptions);case 4:tx=_context2.sent;_context2.next=7;return tx.wait();case 7:receipt=_context2.sent;if(receipt.status){toastSuccess(t('Staked!'),t('Your funds have been staked in the pool'));setPendingTx(false);onDismiss();dispatch(fetchCakeVaultUserData({account:account}));}_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return function handleDeposit(_x2){return _ref3.apply(this,arguments);};}();var handleConfirmClick=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var convertedStakeAmount;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:convertedStakeAmount=getDecimalAmount(new BigNumber(stakeAmount),stakingToken.decimals);if(isRemovingStake){// unstaking\nhandleWithdrawal(convertedStakeAmount);}else{// staking\nhandleDeposit(convertedStakeAmount);}case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function handleConfirmClick(){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Modal,{title:isRemovingStake?t('Unstake'):t('Stake in Pool'),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{bold:true,children:[isRemovingStake?t('Unstake'):t('Stake'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",minWidth:\"70px\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/tokens/\".concat(getAddress(stakingToken.address),\".png\"),width:24,height:24,alt:stakingToken.symbol}),/*#__PURE__*/_jsx(Text,{ml:\"4px\",bold:true,children:stakingToken.symbol})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:stakeAmount,onUserInput:handleStakeInputChange,currencyValue:cakePriceBusd.gt(0)&&\"~\".concat(usdValueStaked||0,\" USD\"),decimals:stakingToken.decimals}),/*#__PURE__*/_jsx(Text,{mt:\"8px\",ml:\"auto\",color:\"textSubtle\",fontSize:\"12px\",mb:\"8px\",children:t('Balance: %balance%',{balance:getFullDisplayBalance(stakingMax,stakingToken.decimals)})}),/*#__PURE__*/_jsx(Slider,{min:0,max:100,value:percent,onValueChanged:handleChangePercent,name:\"stake\",valueLabel:\"\".concat(percent,\"%\"),step:1}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mt:\"8px\",children:[/*#__PURE__*/_jsx(StyledButton,{scale:\"xs\",mx:\"2px\",p:\"4px 16px\",variant:\"tertiary\",onClick:function onClick(){return handleChangePercent(25);},children:\"25%\"}),/*#__PURE__*/_jsx(StyledButton,{scale:\"xs\",mx:\"2px\",p:\"4px 16px\",variant:\"tertiary\",onClick:function onClick(){return handleChangePercent(50);},children:\"50%\"}),/*#__PURE__*/_jsx(StyledButton,{scale:\"xs\",mx:\"2px\",p:\"4px 16px\",variant:\"tertiary\",onClick:function onClick(){return handleChangePercent(75);},children:\"75%\"}),/*#__PURE__*/_jsx(StyledButton,{scale:\"xs\",mx:\"2px\",p:\"4px 16px\",variant:\"tertiary\",onClick:function onClick(){return handleChangePercent(100);},children:t('Max')})]}),isRemovingStake&&hasUnstakingFee&&/*#__PURE__*/_jsx(FeeSummary,{stakingTokenSymbol:stakingToken.symbol,stakeAmount:stakeAmount}),/*#__PURE__*/_jsx(Button,{isLoading:pendingTx,endIcon:pendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,onClick:handleConfirmClick,disabled:!stakeAmount||parseFloat(stakeAmount)===0,mt:\"24px\",children:pendingTx?t('Confirming'):t('Confirm')}),!isRemovingStake&&/*#__PURE__*/_jsx(Button,{mt:\"8px\",as:\"a\",external:true,href:BASE_EXCHANGE_URL,variant:\"secondary\",children:t('Get %symbol%',{symbol:stakingToken.symbol})})]});};export default VaultStakeModal;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Pools/components/CakeVaultCard/VaultStakeModal.tsx"],"names":["React","useState","styled","Modal","Text","Flex","Image","Button","Slider","BalanceInput","AutoRenewIcon","useTranslation","useWeb3React","BASE_EXCHANGE_URL","useAppDispatch","BIG_TEN","useCakeVault","usePriceCakeBusd","useCakeVaultContract","useTheme","useWithdrawalFeeTimer","BigNumber","getFullDisplayBalance","formatNumber","getDecimalAmount","useToast","fetchCakeVaultUserData","getAddress","convertCakeToShares","FeeSummary","StyledButton","callOptions","gasLimit","VaultStakeModal","pool","stakingMax","isRemovingStake","onDismiss","dispatch","stakingToken","account","cakeVaultContract","userData","lastDepositedTime","userShares","pricePerFullShare","t","theme","toastSuccess","toastError","pendingTx","setPendingTx","stakeAmount","setStakeAmount","percent","setPercent","parseInt","hasUnstakingFee","cakePriceBusd","usdValueStaked","gt","times","toNumber","handleStakeInputChange","input","convertedInput","multipliedBy","pow","decimals","percentage","Math","floor","dividedBy","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","minus","sharesAsBigNumber","isWithdrawingAll","lte","withdrawAll","tx","wait","receipt","status","withdraw","toString","handleDeposit","deposit","handleConfirmClick","colors","gradients","cardHeader","address","symbol","balance","parseFloat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n"]},"metadata":{},"sourceType":"module"}