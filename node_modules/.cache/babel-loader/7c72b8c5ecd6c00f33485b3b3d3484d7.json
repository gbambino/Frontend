{"ast":null,"code":"import _objectSpread from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useEffect,useCallback,useState,useMemo,useRef}from'react';import{Route,useRouteMatch,useLocation,NavLink}from'react-router-dom';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{Image,Heading,Toggle,Text,Button,ArrowForwardIcon}from'@pancakeswap/uikit';import{ChainId}from'@pancakeswap/sdk';import styled from'styled-components';import FlexLayout from'components/Layout/Flex';import Page from'components/Layout/Page';import{useFarms,usePollFarmsData,usePriceCakeBusd}from'state/hooks';import usePersistState from'hooks/usePersistState';import{useTranslation}from'contexts/Localization';import{getBalanceNumber}from'utils/formatBalance';import{getFarmApr}from'utils/apr';import{orderBy}from'lodash';import isArchivedPid from'utils/farmHelpers';import{latinise}from'utils/latinise';import PageHeader from'components/PageHeader';import SearchInput from'components/SearchInput';import Select from'components/Select/Select';import FarmCard from'./components/FarmCard/FarmCard';import Table from'./components/FarmTable/FarmTable';import FarmTabButtons from'./components/FarmTabButtons';import ToggleView from'./components/ToggleView/ToggleView';import{DesktopColumnSchema,ViewMode}from'./components/types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ControlContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n  position: relative;\\n\\n  justify-content: space-between;\\n  flex-direction: column;\\n  margin-bottom: 32px;\\n\\n  \",\" {\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 16px 32px;\\n    margin-bottom: 0;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var ToggleWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  margin-left: 10px;\\n\\n  \",\" {\\n    margin-left: 8px;\\n  }\\n\"])),Text);var LabelWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  > \",\" {\\n    font-size: 12px;\\n  }\\n\"])),Text);var FilterContainer=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  padding: 8px 0px;\\n\\n  \",\" {\\n    width: auto;\\n    padding: 0;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var ViewControls=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n\\n  > div {\\n    padding: 8px 0px;\\n  }\\n\\n  \",\" {\\n    justify-content: flex-start;\\n    width: auto;\\n\\n    > div {\\n      padding: 0;\\n    }\\n  }\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.mediaQueries.sm;});var StyledImage=styled(Image)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 58px;\\n\"])));var NUMBER_OF_FARMS_VISIBLE=6;var getDisplayApr=function getDisplayApr(cakeRewardsApr,lpRewardsApr){if(cakeRewardsApr&&lpRewardsApr){return(cakeRewardsApr+lpRewardsApr).toLocaleString('en-US',{maximumFractionDigits:2});}if(cakeRewardsApr){return cakeRewardsApr.toLocaleString('en-US',{maximumFractionDigits:2});}return null;};var Farms=function Farms(){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useFarms=useFarms(),farmsLP=_useFarms.data,userDataLoaded=_useFarms.userDataLoaded;var cakePrice=usePriceCakeBusd();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _usePersistState=usePersistState(ViewMode.CARD,{localStorageKey:'pancake_farm_view'}),_usePersistState2=_slicedToArray(_usePersistState,2),viewMode=_usePersistState2[0],setViewMode=_usePersistState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useState3=useState('hot'),_useState4=_slicedToArray(_useState3,2),sortOption=_useState4[0],setSortOption=_useState4[1];var isArchived=pathname.includes('archived');var isInactive=pathname.includes('history');var isActive=!isInactive&&!isArchived;usePollFarmsData(isArchived);// Users with no wallet connected should see 0 as Earned amount\n// Connected users should see loading indicator until first userData has loaded\nvar userDataReady=!account||!!account&&userDataLoaded;var _useState5=useState(!isActive),_useState6=_slicedToArray(_useState5,2),stakedOnly=_useState6[0],setStakedOnly=_useState6[1];useEffect(function(){setStakedOnly(!isActive);},[isActive]);var activeFarms=farmsLP.filter(function(farm){return farm.pid!==0&&farm.multiplier!=='0X'&&!isArchivedPid(farm.pid);});var inactiveFarms=farmsLP.filter(function(farm){return farm.pid!==0&&farm.multiplier==='0X'&&!isArchivedPid(farm.pid);});var archivedFarms=farmsLP.filter(function(farm){return isArchivedPid(farm.pid);});var stakedOnlyFarms=activeFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var stakedInactiveFarms=inactiveFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var stakedArchivedFarms=archivedFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var farmsList=useCallback(function(farmsToDisplay){var farmsToDisplayWithAPR=farmsToDisplay.map(function(farm){if(!farm.lpTotalInQuoteToken||!farm.quoteToken.busdPrice){return farm;}var totalLiquidity=new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice);var _ref4=isActive?getFarmApr(new BigNumber(farm.poolWeight),cakePrice,totalLiquidity,farm.lpAddresses[ChainId.MAINNET]):{cakeRewardsApr:0,lpRewardsApr:0},cakeRewardsApr=_ref4.cakeRewardsApr,lpRewardsApr=_ref4.lpRewardsApr;return _objectSpread(_objectSpread({},farm),{},{apr:cakeRewardsApr,lpRewardsApr:lpRewardsApr,liquidity:totalLiquidity});});if(query){var lowercaseQuery=latinise(query.toLowerCase());farmsToDisplayWithAPR=farmsToDisplayWithAPR.filter(function(farm){return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery);});}return farmsToDisplayWithAPR;},[cakePrice,query,isActive]);var handleChangeQuery=function handleChangeQuery(event){setQuery(event.target.value);};var loadMoreRef=useRef(null);var _useState7=useState(NUMBER_OF_FARMS_VISIBLE),_useState8=_slicedToArray(_useState7,2),numberOfFarmsVisible=_useState8[0],setNumberOfFarmsVisible=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),observerIsSet=_useState10[0],setObserverIsSet=_useState10[1];var farmsStakedMemoized=useMemo(function(){var farmsStaked=[];var sortFarms=function sortFarms(farms){switch(sortOption){case'apr':return orderBy(farms,function(farm){return farm.apr+farm.lpRewardsApr;},'desc');case'multiplier':return orderBy(farms,function(farm){return farm.multiplier?Number(farm.multiplier.slice(0,-1)):0;},'desc');case'earned':return orderBy(farms,function(farm){return farm.userData?Number(farm.userData.earnings):0;},'desc');case'liquidity':return orderBy(farms,function(farm){return Number(farm.liquidity);},'desc');default:return farms;}};if(isActive){farmsStaked=stakedOnly?farmsList(stakedOnlyFarms):farmsList(activeFarms);}if(isInactive){farmsStaked=stakedOnly?farmsList(stakedInactiveFarms):farmsList(inactiveFarms);}if(isArchived){farmsStaked=stakedOnly?farmsList(stakedArchivedFarms):farmsList(archivedFarms);}return sortFarms(farmsStaked).slice(0,numberOfFarmsVisible);},[sortOption,activeFarms,farmsList,inactiveFarms,archivedFarms,isActive,isInactive,isArchived,stakedArchivedFarms,stakedInactiveFarms,stakedOnly,stakedOnlyFarms,numberOfFarmsVisible]);useEffect(function(){var showMoreFarms=function showMoreFarms(entries){var _entries=_slicedToArray(entries,1),entry=_entries[0];if(entry.isIntersecting){setNumberOfFarmsVisible(function(farmsCurrentlyVisible){return farmsCurrentlyVisible+NUMBER_OF_FARMS_VISIBLE;});}};if(!observerIsSet){var loadMoreObserver=new IntersectionObserver(showMoreFarms,{rootMargin:'0px',threshold:1});loadMoreObserver.observe(loadMoreRef.current);setObserverIsSet(true);}},[farmsStakedMemoized,observerIsSet]);var rowData=farmsStakedMemoized.map(function(farm){var token=farm.token,quoteToken=farm.quoteToken;var tokenAddress=token.address;var quoteTokenAddress=quoteToken.address;var lpLabel=farm.lpSymbol&&farm.lpSymbol.split(' ')[0].toUpperCase().replace('TOCO','');var row={apr:{value:getDisplayApr(farm.apr,farm.lpRewardsApr),multiplier:farm.multiplier,lpLabel:lpLabel,tokenAddress:tokenAddress,quoteTokenAddress:quoteTokenAddress,cakePrice:cakePrice,originalValue:farm.apr},farm:{label:lpLabel,pid:farm.pid,token:farm.token,quoteToken:farm.quoteToken},earned:{earnings:getBalanceNumber(new BigNumber(farm.userData.earnings)),pid:farm.pid},liquidity:{liquidity:farm.liquidity},multiplier:{multiplier:farm.multiplier},details:farm};return row;});var renderContent=function renderContent(){if(viewMode===ViewMode.TABLE&&rowData.length){var columnSchema=DesktopColumnSchema;var columns=columnSchema.map(function(column){return{id:column.id,name:column.name,label:column.label,sort:function sort(a,b){switch(column.name){case'farm':return b.id-a.id;case'apr':if(a.original.apr.value&&b.original.apr.value){return Number(a.original.apr.value)-Number(b.original.apr.value);}return 0;case'earned':return a.original.earned.earnings-b.original.earned.earnings;default:return 1;}},sortable:column.sortable};});return/*#__PURE__*/_jsx(Table,{data:rowData,columns:columns,userDataReady:userDataReady});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:farmsStakedMemoized.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:false},farm.pid);})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/history\"),children:farmsStakedMemoized.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:true},farm.pid);})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/archived\"),children:farmsStakedMemoized.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,displayApr:getDisplayApr(farm.apr,farm.lpRewardsApr),cakePrice:cakePrice,account:account,removed:true},farm.pid);})})]})});};var handleSortOptionChange=function handleSortOptionChange(option){setSortOption(option.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(PageHeader,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",scale:\"xxl\",color:\"secondary\",mb:\"24px\",children:t('Farms')}),/*#__PURE__*/_jsx(Heading,{scale:\"lg\",color:\"text\",children:t('Stake LP tokens to earn.')}),/*#__PURE__*/_jsx(NavLink,{exact:true,activeClassName:\"active\",to:\"/farms/auction\",id:\"lottery-pot-banner\",children:/*#__PURE__*/_jsxs(Button,{p:\"0\",variant:\"text\",children:[/*#__PURE__*/_jsx(Text,{color:\"primary\",bold:true,fontSize:\"16px\",mr:\"4px\",children:t('Community Auctions')}),/*#__PURE__*/_jsx(ArrowForwardIcon,{color:\"primary\"})]})})]}),/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(ControlContainer,{children:[/*#__PURE__*/_jsxs(ViewControls,{children:[/*#__PURE__*/_jsx(ToggleView,{viewMode:viewMode,onToggle:function onToggle(mode){return setViewMode(mode);}}),/*#__PURE__*/_jsxs(ToggleWrapper,{children:[/*#__PURE__*/_jsx(Toggle,{checked:stakedOnly,onChange:function onChange(){return setStakedOnly(!stakedOnly);},scale:\"sm\"}),/*#__PURE__*/_jsxs(Text,{children:[\" \",t('Staked only')]})]}),/*#__PURE__*/_jsx(FarmTabButtons,{hasStakeInFinishedFarms:stakedInactiveFarms.length>0})]}),/*#__PURE__*/_jsxs(FilterContainer,{children:[/*#__PURE__*/_jsxs(LabelWrapper,{children:[/*#__PURE__*/_jsx(Text,{textTransform:\"uppercase\",children:t('Sort by')}),/*#__PURE__*/_jsx(Select,{options:[{label:t('Hot'),value:'hot'},{label:t('APR'),value:'apr'},{label:t('Multiplier'),value:'multiplier'},{label:t('Earned'),value:'earned'},{label:t('Liquidity'),value:'liquidity'}],onChange:handleSortOptionChange})]}),/*#__PURE__*/_jsxs(LabelWrapper,{style:{marginLeft:16},children:[/*#__PURE__*/_jsx(Text,{textTransform:\"uppercase\",children:t('Search')}),/*#__PURE__*/_jsx(SearchInput,{onChange:handleChangeQuery,placeholder:\"Search Farms\"})]})]})]}),renderContent(),/*#__PURE__*/_jsx(\"div\",{ref:loadMoreRef}),/*#__PURE__*/_jsx(StyledImage,{src:\"/images/decorations/3dpan.png\",alt:\"Pancake illustration\",width:120,height:103})]})]});};export default Farms;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","useMemo","useRef","Route","useRouteMatch","useLocation","NavLink","BigNumber","useWeb3React","Image","Heading","Toggle","Text","Button","ArrowForwardIcon","ChainId","styled","FlexLayout","Page","useFarms","usePollFarmsData","usePriceCakeBusd","usePersistState","useTranslation","getBalanceNumber","getFarmApr","orderBy","isArchivedPid","latinise","PageHeader","SearchInput","Select","FarmCard","Table","FarmTabButtons","ToggleView","DesktopColumnSchema","ViewMode","ControlContainer","div","theme","mediaQueries","sm","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","NUMBER_OF_FARMS_VISIBLE","getDisplayApr","cakeRewardsApr","lpRewardsApr","toLocaleString","maximumFractionDigits","Farms","path","pathname","t","farmsLP","data","userDataLoaded","cakePrice","query","setQuery","CARD","localStorageKey","viewMode","setViewMode","account","sortOption","setSortOption","isArchived","includes","isInactive","isActive","userDataReady","stakedOnly","setStakedOnly","activeFarms","filter","farm","pid","multiplier","inactiveFarms","archivedFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","map","lpTotalInQuoteToken","quoteToken","busdPrice","totalLiquidity","times","poolWeight","lpAddresses","MAINNET","apr","liquidity","lowercaseQuery","toLowerCase","lpSymbol","handleChangeQuery","event","target","value","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","sortFarms","farms","Number","slice","earnings","showMoreFarms","entries","entry","isIntersecting","farmsCurrentlyVisible","loadMoreObserver","IntersectionObserver","rootMargin","threshold","observe","current","rowData","token","tokenAddress","address","quoteTokenAddress","lpLabel","split","toUpperCase","replace","row","originalValue","label","earned","details","renderContent","TABLE","length","columnSchema","columns","column","id","name","sort","a","b","original","sortable","handleSortOptionChange","option","mode","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 6\n\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\n  if (cakeRewardsApr && lpRewardsApr) {\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.CARD, { localStorageKey: 'pancake_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\n  useEffect(() => {\n    setStakedOnly(!isActive)\n  }, [isActive])\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const farmsStakedMemoized = useMemo(() => {\n    let farmsStaked = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [farmsStakedMemoized, observerIsSet])\n\n  const rowData = farmsStakedMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('TOCO', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n                cakePrice={cakePrice}\n                account={account}\n                removed={false}\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n                cakePrice={cakePrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/archived`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n                cakePrice={cakePrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n          {t('Farms')}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          {t('Stake LP tokens to earn.')}\n        </Heading>\n        <NavLink exact activeClassName=\"active\" to=\"/farms/auction\" id=\"lottery-pot-banner\">\n          <Button p=\"0\" variant=\"text\">\n            <Text color=\"primary\" bold fontSize=\"16px\" mr=\"4px\">\n              {t('Community Auctions')}\n            </Text>\n            <ArrowForwardIcon color=\"primary\" />\n          </Button>\n        </NavLink>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        <div ref={loadMoreRef} />\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"]},"metadata":{},"sourceType":"module"}