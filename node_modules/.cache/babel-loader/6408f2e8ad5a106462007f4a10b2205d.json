{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Home/components/PredictionPromotionCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Card, CardBody, ArrowForwardIcon, Link, Button, Text, Skeleton, Flex } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getTotalWon } from 'state/predictions/helpers';\nimport { usePriceBnbBusd } from 'state/hooks';\nimport useRefresh from 'hooks/useRefresh';\nimport useIntersectionObserver from 'hooks/useIntersectionObserver';\nimport Balance from '../../../components/Balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPredictionCard = styled(Card)`\n  background-image: url('/images/prediction_promotion.png');\n  background-repeat: no-repeat;\n  background-position: bottom right;\n  background-size: 50%;\n  min-height: 376px;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    background-size: 45%;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    background-size: 50%;\n  }\n`;\n_c = StyledPredictionCard;\nconst PredictionLive = styled(Text)`\n  font-size: 28px;\n  line-height: 1.1;\n  font-weight: 600;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    font-size: 40px;\n  }\n`;\n_c2 = PredictionLive;\nconst PredictionOver = styled(Text)`\n  font-size: 36px;\n  line-height: 1.1;\n  font-weight: 600;\n  max-width: 380px;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    font-size: 50px;\n  }\n`;\n_c3 = PredictionOver;\nconst PredictionWon = styled(Balance)`\n  font-size: 36px;\n  line-height: 1.1;\n  font-weight: 600;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    font-size: 50px;\n  }\n`;\n_c4 = PredictionWon;\nconst StyledSkeleton = styled(Skeleton)`\n  height: 40px;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    height: 55px;\n  }\n`;\n_c5 = StyledSkeleton;\nconst PredictionBNBSoFar = styled(Text)`\n  font-size: 22px;\n  line-height: 1.1;\n  font-weight: 600;\n  max-width: 160px;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    font-size: 24px;\n    max-width: 320px;\n  }\n`;\n_c6 = PredictionBNBSoFar;\nconst PredictionTryNow = styled(Flex)`\n  align-items: center;\n  max-width: 120px;\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    max-width: none;\n  }\n`;\n_c7 = PredictionTryNow;\n\nconst PredictionPromotionCard = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    slowRefresh\n  } = useRefresh();\n  const {\n    observerRef,\n    isIntersecting\n  } = useIntersectionObserver();\n  const [loadData, setLoadData] = useState(false);\n  const bnbBusdPrice = usePriceBnbBusd();\n  const [bnbWon, setBnbWon] = useState(0);\n  const [bnbWonInUsd, setBnbWonInUsd] = useState(0); // Fetch farm data once to get the max APR\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadData(true);\n    }\n  }, [isIntersecting]);\n  useEffect(() => {\n    const fetchMarketData = async () => {\n      const totalWon = await getTotalWon();\n      setBnbWon(totalWon);\n    };\n\n    if (loadData) {\n      fetchMarketData();\n    }\n  }, [slowRefresh, loadData]);\n  useEffect(() => {\n    if (bnbBusdPrice.gt(0) && bnbWon > 0) {\n      setBnbWonInUsd(bnbBusdPrice.times(bnbWon).toNumber());\n    }\n  }, [bnbBusdPrice, bnbWon]);\n  const bnbWonInUsdText = bnbWonInUsd ? bnbWonInUsd.toString() : '-';\n  const wonBNBText = t('', {\n    amount: bnbWonInUsdText\n  });\n  const [over, bnbSoFar] = wonBNBText.split(bnbWonInUsdText);\n  return /*#__PURE__*/_jsxDEV(StyledPredictionCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(PredictionLive, {\n        mb: \"24px\",\n        children: t('Announcements')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PredictionOver, {\n        bold: true,\n        color: \"#7645d9\",\n        children: over\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), bnbWonInUsd ? /*#__PURE__*/_jsxDEV(PredictionWon, {\n        mb: \"24px\",\n        color: \"#7645d9\",\n        bold: true,\n        prefix: \"$\",\n        decimals: 0,\n        value: bnbWonInUsd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledSkeleton, {\n          animation: \"pulse\",\n          variant: \"rect\",\n          mb: \"24px\",\n          width: 180\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: observerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(PredictionBNBSoFar, {\n        bold: true,\n        mb: \"24px\",\n        children: bnbSoFar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        mb: \"24px\",\n        children: [\"*\", t('Beta Version')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"https://twitter.com/ToucanSwapDex\",\n        id: \"homepage-prediction-cta\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          px: ['14px', null, null, null, '20px'],\n          children: /*#__PURE__*/_jsxDEV(PredictionTryNow, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: \"white\",\n              bold: true,\n              fontSize: \"16px\",\n              children: t('Twitter')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PredictionPromotionCard, \"PaUztQzNbwY6MStBypsijNjEvaM=\", false, function () {\n  return [useTranslation, useRefresh, useIntersectionObserver, usePriceBnbBusd];\n});\n\n_c8 = PredictionPromotionCard;\nexport default PredictionPromotionCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"StyledPredictionCard\");\n$RefreshReg$(_c2, \"PredictionLive\");\n$RefreshReg$(_c3, \"PredictionOver\");\n$RefreshReg$(_c4, \"PredictionWon\");\n$RefreshReg$(_c5, \"StyledSkeleton\");\n$RefreshReg$(_c6, \"PredictionBNBSoFar\");\n$RefreshReg$(_c7, \"PredictionTryNow\");\n$RefreshReg$(_c8, \"PredictionPromotionCard\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Home/components/PredictionPromotionCard.tsx"],"names":["React","useEffect","useState","styled","Card","CardBody","ArrowForwardIcon","Link","Button","Text","Skeleton","Flex","useTranslation","getTotalWon","usePriceBnbBusd","useRefresh","useIntersectionObserver","Balance","StyledPredictionCard","theme","mediaQueries","sm","md","PredictionLive","lg","PredictionOver","PredictionWon","StyledSkeleton","PredictionBNBSoFar","PredictionTryNow","PredictionPromotionCard","t","slowRefresh","observerRef","isIntersecting","loadData","setLoadData","bnbBusdPrice","bnbWon","setBnbWon","bnbWonInUsd","setBnbWonInUsd","fetchMarketData","totalWon","gt","times","toNumber","bnbWonInUsdText","toString","wonBNBText","amount","over","bnbSoFar","split"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, ArrowForwardIcon, Link, Button, Text, Skeleton, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getTotalWon } from 'state/predictions/helpers'\nimport { usePriceBnbBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport Balance from '../../../components/Balance'\n\nconst StyledPredictionCard = styled(Card)`\n  background-image: url('/images/prediction_promotion.png');\n  background-repeat: no-repeat;\n  background-position: bottom right;\n  background-size: 50%;\n  min-height: 376px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 45%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background-size: 50%;\n  }\n`\n\nconst PredictionLive = styled(Text)`\n  font-size: 28px;\n  line-height: 1.1;\n  font-weight: 600;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 40px;\n  }\n`\n\nconst PredictionOver = styled(Text)`\n  font-size: 36px;\n  line-height: 1.1;\n  font-weight: 600;\n  max-width: 380px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 50px;\n  }\n`\n\nconst PredictionWon = styled(Balance)`\n  font-size: 36px;\n  line-height: 1.1;\n  font-weight: 600;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: 50px;\n  }\n`\n\nconst StyledSkeleton = styled(Skeleton)`\n  height: 40px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    height: 55px;\n  }\n`\n\nconst PredictionBNBSoFar = styled(Text)`\n  font-size: 22px;\n  line-height: 1.1;\n  font-weight: 600;\n  max-width: 160px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 24px;\n    max-width: 320px;\n  }\n`\n\nconst PredictionTryNow = styled(Flex)`\n  align-items: center;\n  max-width: 120px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: none;\n  }\n`\n\nconst PredictionPromotionCard = () => {\n  const { t } = useTranslation()\n  const { slowRefresh } = useRefresh()\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [loadData, setLoadData] = useState(false)\n  const bnbBusdPrice = usePriceBnbBusd()\n  const [bnbWon, setBnbWon] = useState(0)\n  const [bnbWonInUsd, setBnbWonInUsd] = useState(0)\n\n  // Fetch farm data once to get the max APR\n  useEffect(() => {\n    if (isIntersecting) {\n      setLoadData(true)\n    }\n  }, [isIntersecting])\n\n  useEffect(() => {\n    const fetchMarketData = async () => {\n      const totalWon = await getTotalWon()\n      setBnbWon(totalWon)\n    }\n\n    if (loadData) {\n      fetchMarketData()\n    }\n  }, [slowRefresh, loadData])\n\n  useEffect(() => {\n    if (bnbBusdPrice.gt(0) && bnbWon > 0) {\n      setBnbWonInUsd(bnbBusdPrice.times(bnbWon).toNumber())\n    }\n  }, [bnbBusdPrice, bnbWon])\n\n  const bnbWonInUsdText = bnbWonInUsd ? bnbWonInUsd.toString() : '-'\n  const wonBNBText = t('', { amount: bnbWonInUsdText })\n  const [over, bnbSoFar] = wonBNBText.split(bnbWonInUsdText)\n\n  return (\n    <StyledPredictionCard>\n      <CardBody>\n        <PredictionLive mb=\"24px\">{t('Announcements')}</PredictionLive>\n        <PredictionOver bold color=\"#7645d9\">\n          {over}\n        </PredictionOver>\n        {bnbWonInUsd ? (\n          <PredictionWon mb=\"24px\" color=\"#7645d9\" bold prefix=\"$\" decimals={0} value={bnbWonInUsd} />\n        ) : (\n          <>\n            <StyledSkeleton animation=\"pulse\" variant=\"rect\" mb=\"24px\" width={180} />\n            <div ref={observerRef} />\n          </>\n        )}\n        <PredictionBNBSoFar bold mb=\"24px\">\n          {bnbSoFar}\n        </PredictionBNBSoFar>\n        <Text color=\"textSubtle\" mb=\"24px\">\n          *{t('Beta Version')}\n        </Text>\n        <Link href=\"https://twitter.com/ToucanSwapDex\" id=\"homepage-prediction-cta\">\n          <Button px={['14px', null, null, null, '20px']}>\n            <PredictionTryNow>\n              <Text color=\"white\" bold fontSize=\"16px\">\n                {t('Twitter')}\n              </Text>\n              <ArrowForwardIcon color=\"white\" />\n            </PredictionTryNow>\n          </Button>\n        </Link>\n      </CardBody>\n    </StyledPredictionCard>\n  )\n}\n\nexport default PredictionPromotionCard\n"]},"metadata":{},"sourceType":"module"}