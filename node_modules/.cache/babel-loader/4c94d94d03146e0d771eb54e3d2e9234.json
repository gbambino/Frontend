{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useWeb3React}from'@web3-react/core';import BigNumber from'bignumber.js';import{ethers}from'ethers';import{Modal,ModalBody,Text,Image,Button,BalanceInput,Flex}from'@pancakeswap/uikit';import{PoolIds}from'config/constants/types';import{useTranslation}from'contexts/Localization';import{getBalanceAmount}from'utils/formatBalance';import{getAddress}from'utils/addressHelpers';import ApproveConfirmButtons from'views/Profile/components/ApproveConfirmButtons';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{DEFAULT_TOKEN_DECIMAL}from'config';import{useERC20}from'hooks/useContract';import{BIG_NINE,BIG_TEN}from'utils/bigNumber';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var multiplierValues=[0.1,0.25,0.5,0.75,1];// Default value for transaction setting, tweak based on BSC network congestion.\nvar gasPrice=BIG_TEN.times(BIG_TEN.pow(BIG_NINE)).toString();var ContributeModal=function ContributeModal(_ref){var poolId=_ref.poolId,ifo=_ref.ifo,publicIfoData=_ref.publicIfoData,walletIfoData=_ref.walletIfoData,userCurrencyBalance=_ref.userCurrencyBalance,onDismiss=_ref.onDismiss,_onSuccess=_ref.onSuccess;var publicPoolCharacteristics=publicIfoData[poolId];var userPoolCharacteristics=walletIfoData[poolId];var currency=ifo.currency;var limitPerUserInLP=publicPoolCharacteristics.limitPerUserInLP;var amountTokenCommittedInLP=userPoolCharacteristics.amountTokenCommittedInLP;var contract=walletIfoData.contract;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var raisingTokenContract=useERC20(getAddress(currency.address));var _useTranslation=useTranslation(),t=_useTranslation.t;var valueWithTokenDecimals=new BigNumber(value).times(DEFAULT_TOKEN_DECIMAL);var _useApproveConfirmTra=useApproveConfirmTransaction({onRequiresApproval:function(){var _onRequiresApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,currentAllowance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return raisingTokenContract.allowance(account,contract.address);case 3:response=_context.sent;currentAllowance=new BigNumber(response.toString());return _context.abrupt(\"return\",currentAllowance.gt(0));case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));function onRequiresApproval(){return _onRequiresApproval.apply(this,arguments);}return onRequiresApproval;}(),onApprove:function onApprove(){return raisingTokenContract.approve(contract.address,ethers.constants.MaxUint256,{gasPrice:gasPrice});},onConfirm:function onConfirm(){return contract.depositPool(valueWithTokenDecimals.toString(),poolId===PoolIds.poolBasic?0:1,{gasPrice:gasPrice});},onSuccess:function(){var _onSuccess2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _onSuccess(valueWithTokenDecimals);case 2:onDismiss();case 3:case\"end\":return _context2.stop();}}},_callee2);}));function onSuccess(){return _onSuccess2.apply(this,arguments);}return onSuccess;}()}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirmed=_useApproveConfirmTra.isConfirmed,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;var maximumLpCommitable=function(){if(limitPerUserInLP.isGreaterThan(0)){return limitPerUserInLP.minus(amountTokenCommittedInLP).isLessThanOrEqualTo(userCurrencyBalance)?limitPerUserInLP:userCurrencyBalance;}return userCurrencyBalance;}();return/*#__PURE__*/_jsx(Modal,{title:t('Contribute %symbol%',{symbol:currency.symbol}),onDismiss:onDismiss,children:/*#__PURE__*/_jsxs(ModalBody,{maxWidth:\"320px\",children:[limitPerUserInLP.isGreaterThan(0)&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:[/*#__PURE__*/_jsx(Text,{children:t('Max. LP token entry')}),/*#__PURE__*/_jsx(Text,{children:getBalanceAmount(limitPerUserInLP,currency.decimals).toString()})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('Commit'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{flexGrow:1,justifyContent:\"flex-end\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/farms/\".concat(currency.symbol.split(' ')[0].toLocaleLowerCase(),\".svg\"),width:24,height:24}),/*#__PURE__*/_jsx(Text,{children:currency.symbol})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:value,currencyValue:publicIfoData.currencyPriceInUSD.times(value||0).toFixed(2),onUserInput:setValue,isWarning:valueWithTokenDecimals.isGreaterThan(maximumLpCommitable),decimals:currency.decimals,mb:\"8px\"}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",textAlign:\"right\",fontSize:\"12px\",mb:\"16px\",children:t('Balance: %balance%',{balance:getBalanceAmount(userCurrencyBalance,currency.decimals).toString()})}),/*#__PURE__*/_jsx(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:multiplierValues.map(function(multiplierValue,index){return/*#__PURE__*/_jsxs(Button,{scale:\"xs\",variant:\"tertiary\",onClick:function onClick(){return setValue(getBalanceAmount(maximumLpCommitable.times(multiplierValue)).toString());},mr:index<multiplierValues.length-1?'8px':0,children:[multiplierValue*100,\"%\"]},multiplierValue);})}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",fontSize:\"12px\",mb:\"24px\",children:t('If you donâ€™t commit enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.')}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isConfirmed||isConfirming||isApproved,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed||valueWithTokenDecimals.isNaN()||valueWithTokenDecimals.eq(0),isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm})]})});};export default ContributeModal;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/ContributeModal.tsx"],"names":["React","useState","useWeb3React","BigNumber","ethers","Modal","ModalBody","Text","Image","Button","BalanceInput","Flex","PoolIds","useTranslation","getBalanceAmount","getAddress","ApproveConfirmButtons","useApproveConfirmTransaction","DEFAULT_TOKEN_DECIMAL","useERC20","BIG_NINE","BIG_TEN","multiplierValues","gasPrice","times","pow","toString","ContributeModal","poolId","ifo","publicIfoData","walletIfoData","userCurrencyBalance","onDismiss","onSuccess","publicPoolCharacteristics","userPoolCharacteristics","currency","limitPerUserInLP","amountTokenCommittedInLP","contract","value","setValue","account","raisingTokenContract","address","t","valueWithTokenDecimals","onRequiresApproval","allowance","response","currentAllowance","gt","onApprove","approve","constants","MaxUint256","onConfirm","depositPool","poolBasic","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","maximumLpCommitable","isGreaterThan","minus","isLessThanOrEqualTo","symbol","decimals","split","toLocaleLowerCase","currencyPriceInUSD","toFixed","balance","map","multiplierValue","index","length","isNaN","eq"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, ModalBody, Text, Image, Button, BalanceInput, Flex } from '@pancakeswap/uikit'\nimport { PoolIds, Ifo } from 'config/constants/types'\nimport { WalletIfoData, PublicIfoData } from 'views/Ifos/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { useERC20 } from 'hooks/useContract'\nimport { BIG_NINE, BIG_TEN } from 'utils/bigNumber'\n\ninterface Props {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n  userCurrencyBalance: BigNumber\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst multiplierValues = [0.1, 0.25, 0.5, 0.75, 1]\n\n// Default value for transaction setting, tweak based on BSC network congestion.\nconst gasPrice = BIG_TEN.times(BIG_TEN.pow(BIG_NINE)).toString()\n\nconst ContributeModal: React.FC<Props> = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  userCurrencyBalance,\n  onDismiss,\n  onSuccess,\n}) => {\n  const publicPoolCharacteristics = publicIfoData[poolId]\n  const userPoolCharacteristics = walletIfoData[poolId]\n\n  const { currency } = ifo\n  const { limitPerUserInLP } = publicPoolCharacteristics\n  const { amountTokenCommittedInLP } = userPoolCharacteristics\n  const { contract } = walletIfoData\n  const [value, setValue] = useState('')\n  const { account } = useWeb3React()\n  const raisingTokenContract = useERC20(getAddress(currency.address))\n  const { t } = useTranslation()\n  const valueWithTokenDecimals = new BigNumber(value).times(DEFAULT_TOKEN_DECIMAL)\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await raisingTokenContract.allowance(account, contract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gt(0)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return raisingTokenContract.approve(contract.address, ethers.constants.MaxUint256, { gasPrice })\n      },\n      onConfirm: () => {\n        return contract.depositPool(valueWithTokenDecimals.toString(), poolId === PoolIds.poolBasic ? 0 : 1, {\n          gasPrice,\n        })\n      },\n      onSuccess: async () => {\n        await onSuccess(valueWithTokenDecimals)\n        onDismiss()\n      },\n    })\n\n  const maximumLpCommitable = (() => {\n    if (limitPerUserInLP.isGreaterThan(0)) {\n      return limitPerUserInLP.minus(amountTokenCommittedInLP).isLessThanOrEqualTo(userCurrencyBalance)\n        ? limitPerUserInLP\n        : userCurrencyBalance\n    }\n    return userCurrencyBalance\n  })()\n\n  return (\n    <Modal title={t('Contribute %symbol%', { symbol: currency.symbol })} onDismiss={onDismiss}>\n      <ModalBody maxWidth=\"320px\">\n        {limitPerUserInLP.isGreaterThan(0) && (\n          <Flex justifyContent=\"space-between\" mb=\"16px\">\n            <Text>{t('Max. LP token entry')}</Text>\n            <Text>{getBalanceAmount(limitPerUserInLP, currency.decimals).toString()}</Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text>{t('Commit')}:</Text>\n          <Flex flexGrow={1} justifyContent=\"flex-end\">\n            <Image\n              src={`/images/farms/${currency.symbol.split(' ')[0].toLocaleLowerCase()}.svg`}\n              width={24}\n              height={24}\n            />\n            <Text>{currency.symbol}</Text>\n          </Flex>\n        </Flex>\n        <BalanceInput\n          value={value}\n          currencyValue={publicIfoData.currencyPriceInUSD.times(value || 0).toFixed(2)}\n          onUserInput={setValue}\n          isWarning={valueWithTokenDecimals.isGreaterThan(maximumLpCommitable)}\n          decimals={currency.decimals}\n          mb=\"8px\"\n        />\n        <Text color=\"textSubtle\" textAlign=\"right\" fontSize=\"12px\" mb=\"16px\">\n          {t('Balance: %balance%', {\n            balance: getBalanceAmount(userCurrencyBalance, currency.decimals).toString(),\n          })}\n        </Text>\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          {multiplierValues.map((multiplierValue, index) => (\n            <Button\n              key={multiplierValue}\n              scale=\"xs\"\n              variant=\"tertiary\"\n              onClick={() => setValue(getBalanceAmount(maximumLpCommitable.times(multiplierValue)).toString())}\n              mr={index < multiplierValues.length - 1 ? '8px' : 0}\n            >\n              {multiplierValue * 100}%\n            </Button>\n          ))}\n        </Flex>\n        <Text color=\"textSubtle\" fontSize=\"12px\" mb=\"24px\">\n          {t(\n            'If you donâ€™t commit enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.',\n          )}\n        </Text>\n        <ApproveConfirmButtons\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\n          isApproving={isApproving}\n          isConfirmDisabled={\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\n          }\n          isConfirming={isConfirming}\n          onApprove={handleApprove}\n          onConfirm={handleConfirm}\n        />\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n"]},"metadata":{},"sourceType":"module"}