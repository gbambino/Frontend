{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Home/components/EarnAssetCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport orderBy from 'lodash/orderBy';\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit';\nimport { NavLink } from 'react-router-dom';\nimport pools from 'config/constants/pools';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledFarmStakingCard = styled(Card)`\n  background: linear-gradient(#53dee9, #7645d9);\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`;\n_c = StyledFarmStakingCard;\nconst CardMidContent = styled(Heading).attrs({\n  scale: 'xl'\n})`\n  line-height: 44px;\n`;\n_c2 = CardMidContent;\nconst activeNonCakePools = pools.filter(pool => !pool.isFinished && !pool.earningToken.symbol.includes('CAKE'));\nconst latestPools = orderBy(activeNonCakePools, ['sortOrder', 'pid'], ['desc', 'desc']).slice(0, 3); // Always include CAKE\n\nconst assets = ['CAKE', ...latestPools.map(pool => pool.earningToken.symbol)].join(', ');\n\nconst EarnAssetCard = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const assetText = t('Earn %assets% in Pools', {\n    assets\n  });\n  const [earn, InPools] = assetText.split(assets);\n  return /*#__PURE__*/_jsxDEV(StyledFarmStakingCard, {\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      exact: true,\n      activeClassName: \"active\",\n      to: \"/syrup\",\n      id: \"pool-cta\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"contrast\",\n          scale: \"lg\",\n          children: earn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardMidContent, {\n          color: \"invertedContrast\",\n          children: assets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            color: \"contrast\",\n            scale: \"lg\",\n            children: InPools\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n            mt: 30,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EarnAssetCard, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = EarnAssetCard;\nexport default EarnAssetCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledFarmStakingCard\");\n$RefreshReg$(_c2, \"CardMidContent\");\n$RefreshReg$(_c3, \"EarnAssetCard\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Home/components/EarnAssetCard.tsx"],"names":["React","styled","orderBy","Heading","Card","CardBody","Flex","ArrowForwardIcon","NavLink","pools","useTranslation","StyledFarmStakingCard","theme","mediaQueries","lg","CardMidContent","attrs","scale","activeNonCakePools","filter","pool","isFinished","earningToken","symbol","includes","latestPools","slice","assets","map","join","EarnAssetCard","t","assetText","earn","InPools","split"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport pools from 'config/constants/pools'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background: linear-gradient(#53dee9, #7645d9);\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\n\nconst activeNonCakePools = pools.filter((pool) => !pool.isFinished && !pool.earningToken.symbol.includes('CAKE'))\nconst latestPools: Pool[] = orderBy(activeNonCakePools, ['sortOrder', 'pid'], ['desc', 'desc']).slice(0, 3)\n// Always include CAKE\nconst assets = ['CAKE', ...latestPools.map((pool) => pool.earningToken.symbol)].join(', ')\n\nconst EarnAssetCard = () => {\n  const { t } = useTranslation()\n  const assetText = t('Earn %assets% in Pools', { assets })\n  const [earn, InPools] = assetText.split(assets)\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/syrup\" id=\"pool-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            {earn}\n          </Heading>\n          <CardMidContent color=\"invertedContrast\">{assets}</CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\">\n              {InPools}\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n"]},"metadata":{},"sourceType":"module"}