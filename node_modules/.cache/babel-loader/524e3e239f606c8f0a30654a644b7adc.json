{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useEffect,useRef}from'react';import styled from'styled-components';import{useCountUp}from'react-countup';import{CardBody,Flex,PlayCircleOutlineIcon,Skeleton,Text,TooltipText,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import{BLOCK_PADDING}from'state/predictions';import{formatBigNumberToFixed}from'utils/formatBalance';import{useBlock,useGetLastOraclePrice}from'state/hooks';import BlockProgress from'components/BlockProgress';import{formatUsdv2,getPriceDifference}from'../../helpers';import PositionTag from'../PositionTag';import{RoundResultBox,LockPriceRow,PrizePoolRow}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import Card from'./Card';import CardHeader from'./CardHeader';import CalculatingCard from'./CalculatingCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GradientBorder=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: linear-gradient(180deg, #53dee9 0%, #7645d9 100%);\\n  border-radius: 16px;\\n  padding: 1px;\\n\"])));var GradientCard=styled(Card)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: \",\";\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.gradients.bubblegum;});var LiveRoundCard=function LiveRoundCard(_ref2){var round=_ref2.round,betAmount=_ref2.betAmount,hasEnteredUp=_ref2.hasEnteredUp,hasEnteredDown=_ref2.hasEnteredDown,bullMultiplier=_ref2.bullMultiplier,bearMultiplier=_ref2.bearMultiplier;var _useTranslation=useTranslation(),t=_useTranslation.t;var lockPrice=round.lockPrice,lockBlock=round.lockBlock,endBlock=round.endBlock,totalAmount=round.totalAmount;var _useBlock=useBlock(),currentBlock=_useBlock.currentBlock;var price=useGetLastOraclePrice();var isBull=lockPrice&&price.gt(lockPrice);var priceColor=isBull?'success':'failure';var estimatedEndBlockPlusPadding=endBlock+BLOCK_PADDING;var priceDifference=getPriceDifference(price,lockPrice);var priceAsNumber=parseFloat(formatBigNumberToFixed(price,3,8));var _useCountUp=useCountUp({start:0,end:priceAsNumber,duration:1,decimals:3}),countUp=_useCountUp.countUp,update=_useCountUp.update;var _useTooltip=useTooltip(t('Last price from Chainlink Oracle'),{placement:'bottom'}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var updateRef=useRef(update);useEffect(function(){updateRef.current(priceAsNumber);},[priceAsNumber,updateRef]);if(currentBlock>estimatedEndBlockPlusPadding){return/*#__PURE__*/_jsx(CalculatingCard,{round:round});}return/*#__PURE__*/_jsxs(GradientBorder,{children:[/*#__PURE__*/_jsxs(GradientCard,{children:[/*#__PURE__*/_jsx(CardHeader,{status:\"live\",icon:/*#__PURE__*/_jsx(PlayCircleOutlineIcon,{mr:\"4px\",width:\"24px\",color:\"secondary\"}),title:t('Live'),epoch:round.epoch,blockNumber:estimatedEndBlockPlusPadding}),/*#__PURE__*/_jsx(BlockProgress,{variant:\"flat\",scale:\"sm\",startBlock:lockBlock,endBlock:estimatedEndBlockPlusPadding}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",children:[/*#__PURE__*/_jsx(MultiplierArrow,{betAmount:betAmount,multiplier:bullMultiplier,hasEntered:hasEnteredUp,isActive:isBull}),/*#__PURE__*/_jsxs(RoundResultBox,{betPosition:isBull?BetPosition.BULL:BetPosition.BEAR,children:[/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",fontSize:\"12px\",bold:true,textTransform:\"uppercase\",mb:\"8px\",children:t('Last Price')}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"16px\",height:\"36px\",children:[/*#__PURE__*/_jsx(\"div\",{ref:targetRef,children:/*#__PURE__*/_jsx(TooltipText,{bold:true,color:priceColor,fontSize:\"24px\",style:{minHeight:'36px'},children:price.gt(0)?\"$\".concat(countUp):/*#__PURE__*/_jsx(Skeleton,{height:\"36px\",width:\"94px\"})})}),/*#__PURE__*/_jsx(PositionTag,{betPosition:isBull?BetPosition.BULL:BetPosition.BEAR,children:formatUsdv2(priceDifference)})]}),lockPrice&&/*#__PURE__*/_jsx(LockPriceRow,{lockPrice:lockPrice}),/*#__PURE__*/_jsx(PrizePoolRow,{totalAmount:totalAmount})]}),/*#__PURE__*/_jsx(MultiplierArrow,{betAmount:betAmount,multiplier:bearMultiplier,betPosition:BetPosition.BEAR,hasEntered:hasEnteredDown,isActive:!isBull})]})]}),tooltipVisible&&tooltip]});};export default LiveRoundCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/RoundCard/LiveRoundCard.tsx"],"names":["React","useEffect","useRef","styled","useCountUp","CardBody","Flex","PlayCircleOutlineIcon","Skeleton","Text","TooltipText","useTooltip","useTranslation","BetPosition","BLOCK_PADDING","formatBigNumberToFixed","useBlock","useGetLastOraclePrice","BlockProgress","formatUsdv2","getPriceDifference","PositionTag","RoundResultBox","LockPriceRow","PrizePoolRow","MultiplierArrow","Card","CardHeader","CalculatingCard","GradientBorder","div","GradientCard","theme","colors","gradients","bubblegum","LiveRoundCard","round","betAmount","hasEnteredUp","hasEnteredDown","bullMultiplier","bearMultiplier","t","lockPrice","lockBlock","endBlock","totalAmount","currentBlock","price","isBull","gt","priceColor","estimatedEndBlockPlusPadding","priceDifference","priceAsNumber","parseFloat","start","end","duration","decimals","countUp","update","placement","targetRef","tooltip","tooltipVisible","updateRef","current","epoch","BULL","BEAR","minHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { useCountUp } from 'react-countup'\nimport { CardBody, Flex, PlayCircleOutlineIcon, Skeleton, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, NodeLedger, BetPosition } from 'state/types'\nimport { BLOCK_PADDING } from 'state/predictions'\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\nimport { useBlock, useGetLastOraclePrice } from 'state/hooks'\nimport BlockProgress from 'components/BlockProgress'\nimport { formatUsdv2, getPriceDifference } from '../../helpers'\nimport PositionTag from '../PositionTag'\nimport { RoundResultBox, LockPriceRow, PrizePoolRow } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport Card from './Card'\nimport CardHeader from './CardHeader'\nimport CalculatingCard from './CalculatingCard'\n\ninterface LiveRoundCardProps {\n  round: NodeRound\n  betAmount?: NodeLedger['amount']\n  hasEnteredUp: boolean\n  hasEnteredDown: boolean\n  bullMultiplier: string\n  bearMultiplier: string\n}\n\nconst GradientBorder = styled.div`\n  background: linear-gradient(180deg, #53dee9 0%, #7645d9 100%);\n  border-radius: 16px;\n  padding: 1px;\n`\n\nconst GradientCard = styled(Card)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst LiveRoundCard: React.FC<LiveRoundCardProps> = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  bullMultiplier,\n  bearMultiplier,\n}) => {\n  const { t } = useTranslation()\n  const { lockPrice, lockBlock, endBlock, totalAmount } = round\n  const { currentBlock } = useBlock()\n  const price = useGetLastOraclePrice()\n\n  const isBull = lockPrice && price.gt(lockPrice)\n  const priceColor = isBull ? 'success' : 'failure'\n  const estimatedEndBlockPlusPadding = endBlock + BLOCK_PADDING\n\n  const priceDifference = getPriceDifference(price, lockPrice)\n  const priceAsNumber = parseFloat(formatBigNumberToFixed(price, 3, 8))\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: priceAsNumber,\n    duration: 1,\n    decimals: 3,\n  })\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(t('Last price from Chainlink Oracle'), {\n    placement: 'bottom',\n  })\n\n  const updateRef = useRef(update)\n\n  useEffect(() => {\n    updateRef.current(priceAsNumber)\n  }, [priceAsNumber, updateRef])\n\n  if (currentBlock > estimatedEndBlockPlusPadding) {\n    return <CalculatingCard round={round} />\n  }\n\n  return (\n    <GradientBorder>\n      <GradientCard>\n        <CardHeader\n          status=\"live\"\n          icon={<PlayCircleOutlineIcon mr=\"4px\" width=\"24px\" color=\"secondary\" />}\n          title={t('Live')}\n          epoch={round.epoch}\n          blockNumber={estimatedEndBlockPlusPadding}\n        />\n        <BlockProgress variant=\"flat\" scale=\"sm\" startBlock={lockBlock} endBlock={estimatedEndBlockPlusPadding} />\n        <CardBody p=\"16px\">\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bullMultiplier}\n            hasEntered={hasEnteredUp}\n            isActive={isBull}\n          />\n          <RoundResultBox betPosition={isBull ? BetPosition.BULL : BetPosition.BEAR}>\n            <Text color=\"textSubtle\" fontSize=\"12px\" bold textTransform=\"uppercase\" mb=\"8px\">\n              {t('Last Price')}\n            </Text>\n            <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\" height=\"36px\">\n              <div ref={targetRef}>\n                <TooltipText bold color={priceColor} fontSize=\"24px\" style={{ minHeight: '36px' }}>\n                  {price.gt(0) ? `$${countUp}` : <Skeleton height=\"36px\" width=\"94px\" />}\n                </TooltipText>\n              </div>\n              <PositionTag betPosition={isBull ? BetPosition.BULL : BetPosition.BEAR}>\n                {formatUsdv2(priceDifference)}\n              </PositionTag>\n            </Flex>\n            {lockPrice && <LockPriceRow lockPrice={lockPrice} />}\n            <PrizePoolRow totalAmount={totalAmount} />\n          </RoundResultBox>\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bearMultiplier}\n            betPosition={BetPosition.BEAR}\n            hasEntered={hasEnteredDown}\n            isActive={!isBull}\n          />\n        </CardBody>\n      </GradientCard>\n      {tooltipVisible && tooltip}\n    </GradientBorder>\n  )\n}\n\nexport default LiveRoundCard\n"]},"metadata":{},"sourceType":"module"}