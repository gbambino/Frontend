{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/RoundCard/ExpiredRoundCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { Box, BlockIcon, CardBody } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport { useBlock, useGetBetByEpoch } from 'state/hooks';\nimport { formatBigNumberToFixed } from 'utils/formatBalance';\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers';\nimport { RoundResult } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport Card from './Card';\nimport CardHeader from './CardHeader';\nimport CollectWinningsOverlay from './CollectWinningsOverlay';\nimport CanceledRoundCard from './CanceledRoundCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledExpiredRoundCard = styled(Card)`\n  opacity: 0.7;\n  transition: opacity 300ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n_c = StyledExpiredRoundCard;\n\nconst ExpiredRoundCard = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  bullMultiplier,\n  bearMultiplier\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    initialBlock\n  } = useBlock();\n  const {\n    epoch,\n    endBlock,\n    lockPrice,\n    closePrice\n  } = round;\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR;\n  const ledger = useGetBetByEpoch(account, epoch);\n  const payout = getNetPayoutv2(ledger, round);\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4);\n  const hasRoundFailed = getHasRoundFailed(round, initialBlock);\n\n  if (hasRoundFailed) {\n    return /*#__PURE__*/_jsxDEV(CanceledRoundCard, {\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(StyledExpiredRoundCard, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        status: \"expired\",\n        icon: /*#__PURE__*/_jsxDEV(BlockIcon, {\n          mr: \"4px\",\n          width: \"21px\",\n          color: \"textDisabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this),\n        title: t('Expired'),\n        blockNumber: endBlock,\n        epoch: round.epoch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        p: \"16px\",\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betAmount: betAmount,\n          multiplier: bullMultiplier,\n          isActive: betPosition === BetPosition.BULL,\n          hasEntered: hasEnteredUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoundResult, {\n          round: round,\n          hasFailed: hasRoundFailed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betAmount: betAmount,\n          multiplier: bearMultiplier,\n          betPosition: BetPosition.BEAR,\n          isActive: betPosition === BetPosition.BEAR,\n          hasEntered: hasEnteredDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollectWinningsOverlay, {\n      epoch: epoch,\n      payout: formattedPayout,\n      betAmount: betAmount ? formatBigNumberToFixed(betAmount, 4) : '0',\n      isBottom: hasEnteredDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpiredRoundCard, \"Ry3nb7sEnB2VP2nrJg6z77QyKVY=\", false, function () {\n  return [useTranslation, useWeb3React, useBlock, useGetBetByEpoch];\n});\n\n_c2 = ExpiredRoundCard;\nexport default ExpiredRoundCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledExpiredRoundCard\");\n$RefreshReg$(_c2, \"ExpiredRoundCard\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/RoundCard/ExpiredRoundCard.tsx"],"names":["React","styled","useWeb3React","Box","BlockIcon","CardBody","useTranslation","BetPosition","useBlock","useGetBetByEpoch","formatBigNumberToFixed","getHasRoundFailed","getNetPayoutv2","RoundResult","MultiplierArrow","Card","CardHeader","CollectWinningsOverlay","CanceledRoundCard","StyledExpiredRoundCard","ExpiredRoundCard","round","betAmount","hasEnteredUp","hasEnteredDown","bullMultiplier","bearMultiplier","t","account","initialBlock","epoch","endBlock","lockPrice","closePrice","betPosition","BULL","BEAR","ledger","payout","formattedPayout","toUnsafeFloat","toFixed","hasRoundFailed","position"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,QAAzB,QAAyC,oBAAzC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAAoBC,WAApB,QAAmD,aAAnD;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,aAA3C;AACA,SAASC,sBAAT,QAAuC,qBAAvC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,eAAlD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAWA,MAAMC,sBAAsB,GAAGlB,MAAM,CAACc,IAAD,CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMI,sB;;AASN,MAAMC,gBAAiD,GAAG,CAAC;AACzDC,EAAAA,KADyD;AAEzDC,EAAAA,SAFyD;AAGzDC,EAAAA,YAHyD;AAIzDC,EAAAA,cAJyD;AAKzDC,EAAAA,cALyD;AAMzDC,EAAAA;AANyD,CAAD,KAOpD;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQrB,cAAc,EAA5B;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAc1B,YAAY,EAAhC;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAmBrB,QAAQ,EAAjC;AACA,QAAM;AAAEsB,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,MAA6CZ,KAAnD;AAEA,QAAMa,WAAW,GAAGD,UAAU,GAAGD,SAAb,GAAyBzB,WAAW,CAAC4B,IAArC,GAA4C5B,WAAW,CAAC6B,IAA5E;AACA,QAAMC,MAAM,GAAG5B,gBAAgB,CAACmB,OAAD,EAAUE,KAAV,CAA/B;AACA,QAAMQ,MAAM,GAAG1B,cAAc,CAACyB,MAAD,EAAShB,KAAT,CAA7B;AACA,QAAMkB,eAAe,GAAGD,MAAM,CAACE,aAAP,GAAuBC,OAAvB,CAA+B,CAA/B,CAAxB;AACA,QAAMC,cAAc,GAAG/B,iBAAiB,CAACU,KAAD,EAAQQ,YAAR,CAAxC;;AAEA,MAAIa,cAAJ,EAAoB;AAClB,wBAAO,QAAC,iBAAD;AAAmB,MAAA,KAAK,EAAErB;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAA,4BACE,QAAC,sBAAD;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,MAAM,EAAC,SADT;AAEE,QAAA,IAAI,eAAE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,KAAd;AAAoB,UAAA,KAAK,EAAC,MAA1B;AAAiC,UAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFR;AAGE,QAAA,KAAK,EAAEM,CAAC,CAAC,SAAD,CAHV;AAIE,QAAA,WAAW,EAAEI,QAJf;AAKE,QAAA,KAAK,EAAEV,KAAK,CAACS;AALf;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,QAAD;AAAU,QAAA,CAAC,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE;AAAEa,UAAAA,QAAQ,EAAE;AAAZ,SAA1B;AAAA,gCACE,QAAC,eAAD;AACE,UAAA,SAAS,EAAErB,SADb;AAEE,UAAA,UAAU,EAAEG,cAFd;AAGE,UAAA,QAAQ,EAAES,WAAW,KAAK3B,WAAW,CAAC4B,IAHxC;AAIE,UAAA,UAAU,EAAEZ;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEF,KAApB;AAA2B,UAAA,SAAS,EAAEqB;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,eAAD;AACE,UAAA,SAAS,EAAEpB,SADb;AAEE,UAAA,UAAU,EAAEI,cAFd;AAGE,UAAA,WAAW,EAAEnB,WAAW,CAAC6B,IAH3B;AAIE,UAAA,QAAQ,EAAEF,WAAW,KAAK3B,WAAW,CAAC6B,IAJxC;AAKE,UAAA,UAAU,EAAEZ;AALd;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE,QAAC,sBAAD;AACE,MAAA,KAAK,EAAEM,KADT;AAEE,MAAA,MAAM,EAAES,eAFV;AAGE,MAAA,SAAS,EAAEjB,SAAS,GAAGZ,sBAAsB,CAACY,SAAD,EAAY,CAAZ,CAAzB,GAA0C,GAHhE;AAIE,MAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA1DD;;GAAMJ,gB;UAQUd,c,EACMJ,Y,EACKM,Q,EAIVC,gB;;;MAdXW,gB;AA4DN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Box, BlockIcon, CardBody } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition, NodeLedger } from 'state/types'\nimport { useBlock, useGetBetByEpoch } from 'state/hooks'\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers'\nimport { RoundResult } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport Card from './Card'\nimport CardHeader from './CardHeader'\nimport CollectWinningsOverlay from './CollectWinningsOverlay'\nimport CanceledRoundCard from './CanceledRoundCard'\n\ninterface ExpiredRoundCardProps {\n  round: NodeRound\n  betAmount?: NodeLedger['amount']\n  hasEnteredUp: boolean\n  hasEnteredDown: boolean\n  bullMultiplier: string\n  bearMultiplier: string\n}\n\nconst StyledExpiredRoundCard = styled(Card)`\n  opacity: 0.7;\n  transition: opacity 300ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst ExpiredRoundCard: React.FC<ExpiredRoundCardProps> = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  bullMultiplier,\n  bearMultiplier,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { initialBlock } = useBlock()\n  const { epoch, endBlock, lockPrice, closePrice } = round\n\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\n  const ledger = useGetBetByEpoch(account, epoch)\n  const payout = getNetPayoutv2(ledger, round)\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4)\n  const hasRoundFailed = getHasRoundFailed(round, initialBlock)\n\n  if (hasRoundFailed) {\n    return <CanceledRoundCard round={round} />\n  }\n\n  return (\n    <Box position=\"relative\">\n      <StyledExpiredRoundCard>\n        <CardHeader\n          status=\"expired\"\n          icon={<BlockIcon mr=\"4px\" width=\"21px\" color=\"textDisabled\" />}\n          title={t('Expired')}\n          blockNumber={endBlock}\n          epoch={round.epoch}\n        />\n        <CardBody p=\"16px\" style={{ position: 'relative' }}>\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bullMultiplier}\n            isActive={betPosition === BetPosition.BULL}\n            hasEntered={hasEnteredUp}\n          />\n          <RoundResult round={round} hasFailed={hasRoundFailed} />\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bearMultiplier}\n            betPosition={BetPosition.BEAR}\n            isActive={betPosition === BetPosition.BEAR}\n            hasEntered={hasEnteredDown}\n          />\n        </CardBody>\n      </StyledExpiredRoundCard>\n      <CollectWinningsOverlay\n        epoch={epoch}\n        payout={formattedPayout}\n        betAmount={betAmount ? formatBigNumberToFixed(betAmount, 4) : '0'}\n        isBottom={hasEnteredDown}\n      />\n    </Box>\n  )\n}\n\nexport default ExpiredRoundCard\n"]},"metadata":{},"sourceType":"module"}