{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Flex,Text,IconButton,AddIcon,MinusIcon,useModal,Skeleton}from'@pancakeswap/uikit';import{getBalanceNumber}from'utils/formatBalance';import{useCakeVault,usePriceCakeBusd}from'state/hooks';import Balance from'components/Balance';import NotEnoughTokensModal from'../../PoolCard/Modals/NotEnoughTokensModal';import{convertSharesToCake}from'../../../helpers';import VaultStakeModal from'../VaultStakeModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HasSharesActions=function HasSharesActions(_ref){var pool=_ref.pool,stakingTokenBalance=_ref.stakingTokenBalance;var _useCakeVault=useCakeVault(),userShares=_useCakeVault.userData.userShares,pricePerFullShare=_useCakeVault.pricePerFullShare;var stakingToken=pool.stakingToken;var _convertSharesToCake=convertSharesToCake(userShares,pricePerFullShare),cakeAsBigNumber=_convertSharesToCake.cakeAsBigNumber,cakeAsNumberBalance=_convertSharesToCake.cakeAsNumberBalance;var cakePriceBusd=usePriceCakeBusd();var stakedDollarValue=cakePriceBusd.gt(0)?getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd),stakingToken.decimals):0;var _useModal=useModal(/*#__PURE__*/_jsx(NotEnoughTokensModal,{tokenSymbol:stakingToken.symbol})),_useModal2=_slicedToArray(_useModal,1),onPresentTokenRequired=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(VaultStakeModal,{stakingMax:stakingTokenBalance,pool:pool})),_useModal4=_slicedToArray(_useModal3,1),onPresentStake=_useModal4[0];var _useModal5=useModal(/*#__PURE__*/_jsx(VaultStakeModal,{stakingMax:cakeAsBigNumber,pool:pool,isRemovingStake:true})),_useModal6=_slicedToArray(_useModal5,1),onPresentUnstake=_useModal6[0];return/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"20px\",bold:true,value:cakeAsNumberBalance,decimals:5}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:cakePriceBusd.gt(0)?/*#__PURE__*/_jsx(Balance,{value:stakedDollarValue,fontSize:\"12px\",color:\"textSubtle\",decimals:2,prefix:\"~\",unit:\" USD\"}):/*#__PURE__*/_jsx(Skeleton,{mt:\"1px\",height:16,width:64})})]}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",onClick:onPresentUnstake,mr:\"6px\",children:/*#__PURE__*/_jsx(MinusIcon,{color:\"primary\",width:\"24px\"})}),/*#__PURE__*/_jsx(IconButton,{variant:\"secondary\",onClick:stakingTokenBalance.gt(0)?onPresentStake:onPresentTokenRequired,children:/*#__PURE__*/_jsx(AddIcon,{color:\"primary\",width:\"24px\",height:\"24px\"})})]})]});};export default HasSharesActions;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx"],"names":["React","Flex","Text","IconButton","AddIcon","MinusIcon","useModal","Skeleton","getBalanceNumber","useCakeVault","usePriceCakeBusd","Balance","NotEnoughTokensModal","convertSharesToCake","VaultStakeModal","HasSharesActions","pool","stakingTokenBalance","userShares","userData","pricePerFullShare","stakingToken","cakeAsBigNumber","cakeAsNumberBalance","cakePriceBusd","stakedDollarValue","gt","multipliedBy","decimals","symbol","onPresentTokenRequired","onPresentStake","onPresentUnstake"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n"]},"metadata":{},"sourceType":"module"}