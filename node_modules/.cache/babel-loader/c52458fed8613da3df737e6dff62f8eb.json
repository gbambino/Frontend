{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import BigNumber from'bignumber.js';import{Flex,Text}from'@pancakeswap/uikit';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import RewardBracketDetail from'./RewardBracketDetail';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Wrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  flex-direction: column;\\n\"])));var RewardsInner=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, auto);\\n  row-gap: 16px;\\n\\n  \",\" {\\n    grid-template-columns: repeat(4, 1fr);\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var RewardBrackets=function RewardBrackets(_ref2){var lotteryData=_ref2.lotteryData,isHistoricRound=_ref2.isHistoricRound;var _useTranslation=useTranslation(),t=_useTranslation.t;var treasuryFee=lotteryData.treasuryFee,amountCollectedInCake=lotteryData.amountCollectedInCake,rewardsBreakdown=lotteryData.rewardsBreakdown,countWinnersPerBracket=lotteryData.countWinnersPerBracket;var feeAsPercentage=new BigNumber(treasuryFee).div(100);var cakeToBurn=feeAsPercentage.div(100).times(new BigNumber(amountCollectedInCake));var amountLessTreasuryFee=new BigNumber(amountCollectedInCake).minus(cakeToBurn);var getCakeRewards=function getCakeRewards(bracket){var shareAsPercentage=new BigNumber(rewardsBreakdown[bracket]).div(100);return amountLessTreasuryFee.div(100).times(shareAsPercentage);};return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",mb:\"24px\",children:[t('Match the winning number in the same order to share prizes.'),' ',!isHistoricRound&&t('Current prizes up for grabs:')]}),/*#__PURE__*/_jsxs(RewardsInner,{children:[/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:5,cakeAmount:getCakeRewards(5),numberWinners:countWinnersPerBracket[5],isHistoricRound:isHistoricRound}),/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:4,cakeAmount:getCakeRewards(4),numberWinners:countWinnersPerBracket[4],isHistoricRound:isHistoricRound}),/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:3,cakeAmount:getCakeRewards(3),numberWinners:countWinnersPerBracket[3],isHistoricRound:isHistoricRound}),/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:2,cakeAmount:getCakeRewards(2),numberWinners:countWinnersPerBracket[2],isHistoricRound:isHistoricRound}),/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:1,cakeAmount:getCakeRewards(1),numberWinners:countWinnersPerBracket[1],isHistoricRound:isHistoricRound}),/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:0,cakeAmount:getCakeRewards(0),numberWinners:countWinnersPerBracket[0],isHistoricRound:isHistoricRound}),/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:0,cakeAmount:cakeToBurn,isBurn:true})]})]});};export default RewardBrackets;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Lottery/components/RewardBrackets.tsx"],"names":["React","BigNumber","Flex","Text","styled","useTranslation","RewardBracketDetail","Wrapper","RewardsInner","div","theme","mediaQueries","sm","RewardBrackets","lotteryData","isHistoricRound","t","treasuryFee","amountCollectedInCake","rewardsBreakdown","countWinnersPerBracket","feeAsPercentage","cakeToBurn","times","amountLessTreasuryFee","minus","getCakeRewards","bracket","shareAsPercentage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryRound } from 'state/types'\nimport RewardBracketDetail from './RewardBracketDetail'\n\nconst Wrapper = styled(Flex)`\n  width: 100%;\n  flex-direction: column;\n`\n\nconst RewardsInner = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  row-gap: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`\n\ninterface RewardMatchesProps {\n  lotteryData: LotteryRound\n  isHistoricRound?: boolean\n}\n\nconst RewardBrackets: React.FC<RewardMatchesProps> = ({ lotteryData, isHistoricRound }) => {\n  const { t } = useTranslation()\n  const { treasuryFee, amountCollectedInCake, rewardsBreakdown, countWinnersPerBracket } = lotteryData\n\n  const feeAsPercentage = new BigNumber(treasuryFee).div(100)\n  const cakeToBurn = feeAsPercentage.div(100).times(new BigNumber(amountCollectedInCake))\n  const amountLessTreasuryFee = new BigNumber(amountCollectedInCake).minus(cakeToBurn)\n\n  const getCakeRewards = (bracket: number) => {\n    const shareAsPercentage = new BigNumber(rewardsBreakdown[bracket]).div(100)\n    return amountLessTreasuryFee.div(100).times(shareAsPercentage)\n  }\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\" mb=\"24px\">\n        {t('Match the winning number in the same order to share prizes.')}{' '}\n        {!isHistoricRound && t('Current prizes up for grabs:')}\n      </Text>\n      <RewardsInner>\n        <RewardBracketDetail\n          rewardBracket={5}\n          cakeAmount={getCakeRewards(5)}\n          numberWinners={countWinnersPerBracket[5]}\n          isHistoricRound={isHistoricRound}\n        />\n        <RewardBracketDetail\n          rewardBracket={4}\n          cakeAmount={getCakeRewards(4)}\n          numberWinners={countWinnersPerBracket[4]}\n          isHistoricRound={isHistoricRound}\n        />\n        <RewardBracketDetail\n          rewardBracket={3}\n          cakeAmount={getCakeRewards(3)}\n          numberWinners={countWinnersPerBracket[3]}\n          isHistoricRound={isHistoricRound}\n        />\n        <RewardBracketDetail\n          rewardBracket={2}\n          cakeAmount={getCakeRewards(2)}\n          numberWinners={countWinnersPerBracket[2]}\n          isHistoricRound={isHistoricRound}\n        />\n        <RewardBracketDetail\n          rewardBracket={1}\n          cakeAmount={getCakeRewards(1)}\n          numberWinners={countWinnersPerBracket[1]}\n          isHistoricRound={isHistoricRound}\n        />\n        <RewardBracketDetail\n          rewardBracket={0}\n          cakeAmount={getCakeRewards(0)}\n          numberWinners={countWinnersPerBracket[0]}\n          isHistoricRound={isHistoricRound}\n        />\n        <RewardBracketDetail rewardBracket={0} cakeAmount={cakeToBurn} isBurn />\n      </RewardsInner>\n    </Wrapper>\n  )\n}\n\nexport default RewardBrackets\n"]},"metadata":{},"sourceType":"module"}