{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/Mobile.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Box, Flex } from '@pancakeswap/uikit';\nimport { useGetPredictionsStatus, useIsChartPaneOpen, useIsHistoryPaneOpen } from 'state/hooks';\nimport { PredictionStatus } from 'state/types';\nimport MobileMenu from './components/MobileMenu';\nimport History from './History';\nimport Positions from './Positions';\nimport Chart from './Chart';\nimport { ErrorNotification, PauseNotification } from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar PageView;\n\n(function (PageView) {\n  PageView[\"POSITIONS\"] = \"positions\";\n  PageView[\"HISTORY\"] = \"history\";\n  PageView[\"CHART\"] = \"chart\";\n})(PageView || (PageView = {}));\n\nconst StyledMobile = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-height: 100%;\n\n  ${({\n  theme\n}) => theme.mediaQueries.xl} {\n    display: none;\n  }\n`;\n_c = StyledMobile;\nconst View = styled.div`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  visibility: ${({\n  isVisible\n}) => isVisible ? 'visible' : 'hidden'};\n`;\n_c2 = View;\n\nconst getView = (isHistoryPaneOpen, isChartPaneOpen) => {\n  if (isHistoryPaneOpen) {\n    return PageView.HISTORY;\n  }\n\n  if (isChartPaneOpen) {\n    return PageView.CHART;\n  }\n\n  return PageView.POSITIONS;\n};\n\nconst Mobile = () => {\n  _s();\n\n  const isHistoryPaneOpen = useIsHistoryPaneOpen();\n  const isChartPaneOpen = useIsChartPaneOpen();\n  const view = getView(isHistoryPaneOpen, isChartPaneOpen);\n  const status = useGetPredictionsStatus();\n  return /*#__PURE__*/_jsxDEV(StyledMobile, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      height: \"100%\",\n      overflow: \"hidden\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        isVisible: view === PageView.POSITIONS,\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          height: \"100%\",\n          children: [status === PredictionStatus.ERROR && /*#__PURE__*/_jsxDEV(ErrorNotification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 51\n          }, this), status === PredictionStatus.PAUSED && /*#__PURE__*/_jsxDEV(PauseNotification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 52\n          }, this), status === PredictionStatus.LIVE && /*#__PURE__*/_jsxDEV(Positions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        isVisible: view === PageView.CHART,\n        children: /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        isVisible: view === PageView.HISTORY,\n        children: /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Mobile, \"3YYLTaOQizBRmKa1e1bxauRl0Kg=\", false, function () {\n  return [useIsHistoryPaneOpen, useIsChartPaneOpen, useGetPredictionsStatus];\n});\n\n_c3 = Mobile;\nexport default Mobile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledMobile\");\n$RefreshReg$(_c2, \"View\");\n$RefreshReg$(_c3, \"Mobile\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/Mobile.tsx"],"names":["React","styled","Box","Flex","useGetPredictionsStatus","useIsChartPaneOpen","useIsHistoryPaneOpen","PredictionStatus","MobileMenu","History","Positions","Chart","ErrorNotification","PauseNotification","PageView","StyledMobile","div","theme","mediaQueries","xl","View","isVisible","getView","isHistoryPaneOpen","isChartPaneOpen","HISTORY","CHART","POSITIONS","Mobile","view","status","ERROR","PAUSED","LIVE"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex } from '@pancakeswap/uikit'\nimport { useGetPredictionsStatus, useIsChartPaneOpen, useIsHistoryPaneOpen } from 'state/hooks'\nimport { PredictionStatus } from 'state/types'\nimport MobileMenu from './components/MobileMenu'\nimport History from './History'\nimport Positions from './Positions'\nimport Chart from './Chart'\nimport { ErrorNotification, PauseNotification } from './components/Notification'\n\nenum PageView {\n  POSITIONS = 'positions',\n  HISTORY = 'history',\n  CHART = 'chart',\n}\n\nconst StyledMobile = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-height: 100%;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    display: none;\n  }\n`\n\nconst View = styled.div<{ isVisible: boolean }>`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  visibility: ${({ isVisible }) => (isVisible ? 'visible' : 'hidden')};\n`\n\nconst getView = (isHistoryPaneOpen: boolean, isChartPaneOpen: boolean): PageView => {\n  if (isHistoryPaneOpen) {\n    return PageView.HISTORY\n  }\n\n  if (isChartPaneOpen) {\n    return PageView.CHART\n  }\n\n  return PageView.POSITIONS\n}\n\nconst Mobile: React.FC = () => {\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\n  const isChartPaneOpen = useIsChartPaneOpen()\n  const view = getView(isHistoryPaneOpen, isChartPaneOpen)\n  const status = useGetPredictionsStatus()\n\n  return (\n    <StyledMobile>\n      <Box height=\"100%\" overflow=\"hidden\" position=\"relative\">\n        <View isVisible={view === PageView.POSITIONS}>\n          <Flex alignItems=\"center\" height=\"100%\">\n            {status === PredictionStatus.ERROR && <ErrorNotification />}\n            {status === PredictionStatus.PAUSED && <PauseNotification />}\n            {status === PredictionStatus.LIVE && <Positions />}\n          </Flex>\n        </View>\n        <View isVisible={view === PageView.CHART}>\n          <Chart />\n        </View>\n        <View isVisible={view === PageView.HISTORY}>\n          <History />\n        </View>\n      </Box>\n      <MobileMenu />\n    </StyledMobile>\n  )\n}\n\nexport default Mobile\n"]},"metadata":{},"sourceType":"module"}