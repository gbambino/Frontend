{"ast":null,"code":"import BigNumber from'bignumber.js';import React from'react';import{CardBody,Flex,Text,CardRibbon}from'@pancakeswap/uikit';import UnlockButton from'components/UnlockButton';import{useTranslation}from'contexts/Localization';import{BIG_ZERO}from'utils/bigNumber';import AprRow from'./AprRow';import{StyledCard,StyledCardInner}from'./StyledCard';import CardFooter from'./CardFooter';import StyledCardHeader from'./StyledCardHeader';import CardActions from'./CardActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PoolCard=function PoolCard(_ref){var pool=_ref.pool,account=_ref.account;var sousId=pool.sousId,stakingToken=pool.stakingToken,earningToken=pool.earningToken,isFinished=pool.isFinished,userData=pool.userData;var _useTranslation=useTranslation(),t=_useTranslation.t;var stakedBalance=(userData===null||userData===void 0?void 0:userData.stakedBalance)?new BigNumber(userData.stakedBalance):BIG_ZERO;var accountHasStakedBalance=stakedBalance.gt(0);return/*#__PURE__*/_jsx(StyledCard,{isFinished:isFinished&&sousId!==0,ribbon:isFinished&&/*#__PURE__*/_jsx(CardRibbon,{variantColor:\"textDisabled\",text:t('Finished')}),children:/*#__PURE__*/_jsxs(StyledCardInner,{children:[/*#__PURE__*/_jsx(StyledCardHeader,{isStaking:accountHasStakedBalance,earningToken:earningToken,stakingToken:stakingToken,isFinished:isFinished&&sousId!==0}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(AprRow,{pool:pool}),/*#__PURE__*/_jsx(Flex,{mt:\"24px\",flexDirection:\"column\",children:account?/*#__PURE__*/_jsx(CardActions,{pool:pool,stakedBalance:stakedBalance}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mb:\"10px\",textTransform:\"uppercase\",fontSize:\"12px\",color:\"textSubtle\",bold:true,children:t('Start earning')}),/*#__PURE__*/_jsx(UnlockButton,{})]})})]}),/*#__PURE__*/_jsx(CardFooter,{pool:pool,account:account})]})});};export default PoolCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Pools/components/PoolCard/index.tsx"],"names":["BigNumber","React","CardBody","Flex","Text","CardRibbon","UnlockButton","useTranslation","BIG_ZERO","AprRow","StyledCard","StyledCardInner","CardFooter","StyledCardHeader","CardActions","PoolCard","pool","account","sousId","stakingToken","earningToken","isFinished","userData","t","stakedBalance","accountHasStakedBalance","gt"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,IAAnB,CAAyBC,IAAzB,CAA+BC,UAA/B,KAAiD,oBAAjD,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,UAAT,CAAqBC,eAArB,KAA4C,cAA5C,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,6IAEA,GAAMC,CAAAA,QAAmD,CAAG,QAAtDA,CAAAA,QAAsD,MAAuB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CACjF,GAAQC,CAAAA,MAAR,CAAqEF,IAArE,CAAQE,MAAR,CAAgBC,YAAhB,CAAqEH,IAArE,CAAgBG,YAAhB,CAA8BC,YAA9B,CAAqEJ,IAArE,CAA8BI,YAA9B,CAA4CC,UAA5C,CAAqEL,IAArE,CAA4CK,UAA5C,CAAwDC,QAAxD,CAAqEN,IAArE,CAAwDM,QAAxD,CACA,oBAAcf,cAAc,EAA5B,CAAQgB,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,aAAa,CAAG,CAAAF,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEE,aAAV,EAA0B,GAAIxB,CAAAA,SAAJ,CAAcsB,QAAQ,CAACE,aAAvB,CAA1B,CAAkEhB,QAAxF,CACA,GAAMiB,CAAAA,uBAAuB,CAAGD,aAAa,CAACE,EAAd,CAAiB,CAAjB,CAAhC,CAEA,mBACE,KAAC,UAAD,EACE,UAAU,CAAEL,UAAU,EAAIH,MAAM,GAAK,CADvC,CAEE,MAAM,CAAEG,UAAU,eAAI,KAAC,UAAD,EAAY,YAAY,CAAC,cAAzB,CAAwC,IAAI,CAAEE,CAAC,CAAC,UAAD,CAA/C,EAFxB,uBAIE,MAAC,eAAD,yBACE,KAAC,gBAAD,EACE,SAAS,CAAEE,uBADb,CAEE,YAAY,CAAEL,YAFhB,CAGE,YAAY,CAAED,YAHhB,CAIE,UAAU,CAAEE,UAAU,EAAIH,MAAM,GAAK,CAJvC,EADF,cAOE,MAAC,QAAD,yBACE,KAAC,MAAD,EAAQ,IAAI,CAAEF,IAAd,EADF,cAEE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,CAAgB,aAAa,CAAC,QAA9B,UACGC,OAAO,cACN,KAAC,WAAD,EAAa,IAAI,CAAED,IAAnB,CAAyB,aAAa,CAAEQ,aAAxC,EADM,cAGN,wCACE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,CAAgB,aAAa,CAAC,WAA9B,CAA0C,QAAQ,CAAC,MAAnD,CAA0D,KAAK,CAAC,YAAhE,CAA6E,IAAI,KAAjF,UACGD,CAAC,CAAC,eAAD,CADJ,EADF,cAIE,KAAC,YAAD,IAJF,GAJJ,EAFF,GAPF,cAsBE,KAAC,UAAD,EAAY,IAAI,CAAEP,IAAlB,CAAwB,OAAO,CAAEC,OAAjC,EAtBF,GAJF,EADF,CA+BD,CArCD,CAuCA,cAAeF,CAAAA,QAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n"]},"metadata":{},"sourceType":"module"}