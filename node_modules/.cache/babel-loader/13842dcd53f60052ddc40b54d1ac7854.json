{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{CardBody,Text,Flex,BlockIcon,LinkExternal}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import{useGetTotalIntervalBlocks}from'state/hooks';import ReclaimPositionButton from'../ReclaimPositionButton';import useIsRefundable from'../../hooks/useIsRefundable';import{RoundResultBox}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import Card from'./Card';import CardHeader from'./CardHeader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CanceledRoundCard=function CanceledRoundCard(_ref){var round=_ref.round;var _useTranslation=useTranslation(),t=_useTranslation.t;var interval=useGetTotalIntervalBlocks();var _useIsRefundable=useIsRefundable(round.epoch),isRefundable=_useIsRefundable.isRefundable,setIsRefundable=_useIsRefundable.setIsRefundable;var epoch=round.epoch,startBlock=round.startBlock;var estimatedEndBlock=startBlock+interval;var handleSuccess=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsRefundable(false);case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleSuccess(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{status:\"canceled\",icon:/*#__PURE__*/_jsx(BlockIcon,{mr:\"4px\",width:\"21px\"}),title:t('Canceled'),epoch:round.epoch,blockNumber:estimatedEndBlock}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",children:[/*#__PURE__*/_jsx(MultiplierArrow,{isDisabled:true}),/*#__PURE__*/_jsx(RoundResultBox,{children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,color:isRefundable?'text':'textDisabled',children:t('Round Canceled')}),isRefundable&&/*#__PURE__*/_jsx(ReclaimPositionButton,{epoch:epoch,onSuccess:handleSuccess,width:\"100%\",my:\"8px\"}),/*#__PURE__*/_jsx(LinkExternal,{href:\"https://docs.pancakeswap.finance/products/prediction\",external:true,children:t('Learn More')})]})}),/*#__PURE__*/_jsx(MultiplierArrow,{betPosition:BetPosition.BEAR,isDisabled:true})]})]});};export default CanceledRoundCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Predictions/components/RoundCard/CanceledRoundCard.tsx"],"names":["React","CardBody","Text","Flex","BlockIcon","LinkExternal","useTranslation","BetPosition","useGetTotalIntervalBlocks","ReclaimPositionButton","useIsRefundable","RoundResultBox","MultiplierArrow","Card","CardHeader","CanceledRoundCard","round","t","interval","epoch","isRefundable","setIsRefundable","startBlock","estimatedEndBlock","handleSuccess","BEAR"],"mappings":"6TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,IAAnB,CAAyBC,IAAzB,CAA+BC,SAA/B,CAA0CC,YAA1C,KAA8D,oBAA9D,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAAoBC,WAApB,KAAuC,aAAvC,CACA,OAASC,yBAAT,KAA0C,aAA1C,CACA,MAAOC,CAAAA,qBAAP,KAAkC,0BAAlC,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,wFAMA,GAAMC,CAAAA,iBAAmD,CAAG,QAAtDA,CAAAA,iBAAsD,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACzE,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGV,yBAAyB,EAA1C,CACA,qBAA0CE,eAAe,CAACM,KAAK,CAACG,KAAP,CAAzD,CAAQC,YAAR,kBAAQA,YAAR,CAAsBC,eAAtB,kBAAsBA,eAAtB,CACA,GAAQF,CAAAA,KAAR,CAA8BH,KAA9B,CAAQG,KAAR,CAAeG,UAAf,CAA8BN,KAA9B,CAAeM,UAAf,CACA,GAAMC,CAAAA,iBAAiB,CAAGD,UAAU,CAAGJ,QAAvC,CAEA,GAAMM,CAAAA,aAAa,2FAAG,mIACpBH,eAAe,CAAC,KAAD,CAAf,CADoB,sDAAH,kBAAbG,CAAAA,aAAa,2CAAnB,CAIA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,EACE,MAAM,CAAC,UADT,CAEE,IAAI,cAAE,KAAC,SAAD,EAAW,EAAE,CAAC,KAAd,CAAoB,KAAK,CAAC,MAA1B,EAFR,CAGE,KAAK,CAAEP,CAAC,CAAC,UAAD,CAHV,CAIE,KAAK,CAAED,KAAK,CAACG,KAJf,CAKE,WAAW,CAAEI,iBALf,EADF,cAQE,MAAC,QAAD,EAAU,CAAC,CAAC,MAAZ,wBACE,KAAC,eAAD,EAAiB,UAAU,KAA3B,EADF,cAEE,KAAC,cAAD,wBACE,MAAC,IAAD,EAAM,aAAa,CAAC,QAApB,CAA6B,UAAU,CAAC,QAAxC,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,KAAK,CAAEH,YAAY,CAAG,MAAH,CAAY,cAA1C,UACGH,CAAC,CAAC,gBAAD,CADJ,EADF,CAIGG,YAAY,eAAI,KAAC,qBAAD,EAAuB,KAAK,CAAED,KAA9B,CAAqC,SAAS,CAAEK,aAAhD,CAA+D,KAAK,CAAC,MAArE,CAA4E,EAAE,CAAC,KAA/E,EAJnB,cAKE,KAAC,YAAD,EAAc,IAAI,CAAC,sDAAnB,CAA0E,QAAQ,KAAlF,UACGP,CAAC,CAAC,YAAD,CADJ,EALF,GADF,EAFF,cAaE,KAAC,eAAD,EAAiB,WAAW,CAAEV,WAAW,CAACkB,IAA1C,CAAgD,UAAU,KAA1D,EAbF,GARF,GADF,CA0BD,CArCD,CAuCA,cAAeV,CAAAA,iBAAf","sourcesContent":["import React from 'react'\nimport { CardBody, Text, Flex, BlockIcon, LinkExternal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition } from 'state/types'\nimport { useGetTotalIntervalBlocks } from 'state/hooks'\nimport ReclaimPositionButton from '../ReclaimPositionButton'\nimport useIsRefundable from '../../hooks/useIsRefundable'\nimport { RoundResultBox } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport Card from './Card'\nimport CardHeader from './CardHeader'\n\ninterface CanceledRoundCardProps {\n  round: NodeRound\n}\n\nconst CanceledRoundCard: React.FC<CanceledRoundCardProps> = ({ round }) => {\n  const { t } = useTranslation()\n  const interval = useGetTotalIntervalBlocks()\n  const { isRefundable, setIsRefundable } = useIsRefundable(round.epoch)\n  const { epoch, startBlock } = round\n  const estimatedEndBlock = startBlock + interval\n\n  const handleSuccess = async () => {\n    setIsRefundable(false)\n  }\n\n  return (\n    <Card>\n      <CardHeader\n        status=\"canceled\"\n        icon={<BlockIcon mr=\"4px\" width=\"21px\" />}\n        title={t('Canceled')}\n        epoch={round.epoch}\n        blockNumber={estimatedEndBlock}\n      />\n      <CardBody p=\"16px\">\n        <MultiplierArrow isDisabled />\n        <RoundResultBox>\n          <Flex flexDirection=\"column\" alignItems=\"center\">\n            <Text bold color={isRefundable ? 'text' : 'textDisabled'}>\n              {t('Round Canceled')}\n            </Text>\n            {isRefundable && <ReclaimPositionButton epoch={epoch} onSuccess={handleSuccess} width=\"100%\" my=\"8px\" />}\n            <LinkExternal href=\"https://docs.pancakeswap.finance/products/prediction\" external>\n              {t('Learn More')}\n            </LinkExternal>\n          </Flex>\n        </RoundResultBox>\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default CanceledRoundCard\n"]},"metadata":{},"sourceType":"module"}