{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import orderBy from'lodash/orderBy';import{Heading,Card,CardBody,Flex,ArrowForwardIcon}from'@pancakeswap/uikit';import{NavLink}from'react-router-dom';import pools from'config/constants/pools';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFarmStakingCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: linear-gradient(#53dee9, #7645d9);\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 100%;\\n  \",\" {\\n    margin: 0;\\n    max-width: none;\\n  }\\n\\n  transition: opacity 200ms;\\n  &:hover {\\n    opacity: 0.65;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.lg;});var CardMidContent=styled(Heading).attrs({scale:'xl'})(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  line-height: 44px;\\n\"])));var activeNonCakePools=pools.filter(function(pool){return!pool.isFinished&&!pool.earningToken.symbol.includes('CAKE');});var latestPools=orderBy(activeNonCakePools,['sortOrder','pid'],['desc','desc']).slice(0,3);// Always include CAKE\nvar assets=['CAKE'].concat(_toConsumableArray(latestPools.map(function(pool){return pool.earningToken.symbol;}))).join(', ');var EarnAssetCard=function EarnAssetCard(){var _useTranslation=useTranslation(),t=_useTranslation.t;var assetText=t('Earn %assets% in Pools',{assets:assets});var _assetText$split=assetText.split(assets),_assetText$split2=_slicedToArray(_assetText$split,2),earn=_assetText$split2[0],InPools=_assetText$split2[1];return/*#__PURE__*/_jsx(StyledFarmStakingCard,{children:/*#__PURE__*/_jsx(NavLink,{exact:true,activeClassName:\"active\",to:\"/syrup\",id:\"pool-cta\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{color:\"contrast\",scale:\"lg\",children:earn}),/*#__PURE__*/_jsx(CardMidContent,{color:\"invertedContrast\",children:assets}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Heading,{color:\"contrast\",scale:\"lg\",children:InPools}),/*#__PURE__*/_jsx(ArrowForwardIcon,{mt:30,color:\"primary\"})]})]})})});};export default EarnAssetCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Home/components/EarnAssetCard.tsx"],"names":["React","styled","orderBy","Heading","Card","CardBody","Flex","ArrowForwardIcon","NavLink","pools","useTranslation","StyledFarmStakingCard","theme","mediaQueries","lg","CardMidContent","attrs","scale","activeNonCakePools","filter","pool","isFinished","earningToken","symbol","includes","latestPools","slice","assets","map","join","EarnAssetCard","t","assetText","split","earn","InPools"],"mappings":"6hBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,OAASC,OAAT,CAAkBC,IAAlB,CAAwBC,QAAxB,CAAkCC,IAAlC,CAAwCC,gBAAxC,KAAgE,oBAAhE,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CAEA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAEA,GAAMC,CAAAA,qBAAqB,CAAGV,MAAM,CAACG,IAAD,CAAT,4SAKvB,kBAAGQ,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EALuB,CAA3B,CAeA,GAAMC,CAAAA,cAAc,CAAGd,MAAM,CAACE,OAAD,CAAN,CAAgBa,KAAhB,CAAsB,CAAEC,KAAK,CAAE,IAAT,CAAtB,CAAH,2FAApB,CAIA,GAAMC,CAAAA,kBAAkB,CAAGT,KAAK,CAACU,MAAN,CAAa,SAACC,IAAD,QAAU,CAACA,IAAI,CAACC,UAAN,EAAoB,CAACD,IAAI,CAACE,YAAL,CAAkBC,MAAlB,CAAyBC,QAAzB,CAAkC,MAAlC,CAA/B,EAAb,CAA3B,CACA,GAAMC,CAAAA,WAAmB,CAAGvB,OAAO,CAACgB,kBAAD,CAAqB,CAAC,WAAD,CAAc,KAAd,CAArB,CAA2C,CAAC,MAAD,CAAS,MAAT,CAA3C,CAAP,CAAoEQ,KAApE,CAA0E,CAA1E,CAA6E,CAA7E,CAA5B,CACA;AACA,GAAMC,CAAAA,MAAM,CAAG,CAAC,MAAD,4BAAYF,WAAW,CAACG,GAAZ,CAAgB,SAACR,IAAD,QAAUA,CAAAA,IAAI,CAACE,YAAL,CAAkBC,MAA5B,EAAhB,CAAZ,GAAiEM,IAAjE,CAAsE,IAAtE,CAAf,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,oBAAcpB,cAAc,EAA5B,CAAQqB,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,SAAS,CAAGD,CAAC,CAAC,wBAAD,CAA2B,CAAEJ,MAAM,CAANA,MAAF,CAA3B,CAAnB,CACA,qBAAwBK,SAAS,CAACC,KAAV,CAAgBN,MAAhB,CAAxB,sDAAOO,IAAP,sBAAaC,OAAb,sBAEA,mBACE,KAAC,qBAAD,wBACE,KAAC,OAAD,EAAS,KAAK,KAAd,CAAe,eAAe,CAAC,QAA/B,CAAwC,EAAE,CAAC,QAA3C,CAAoD,EAAE,CAAC,UAAvD,uBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EAAS,KAAK,CAAC,UAAf,CAA0B,KAAK,CAAC,IAAhC,UACGD,IADH,EADF,cAIE,KAAC,cAAD,EAAgB,KAAK,CAAC,kBAAtB,UAA0CP,MAA1C,EAJF,cAKE,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,wBACE,KAAC,OAAD,EAAS,KAAK,CAAC,UAAf,CAA0B,KAAK,CAAC,IAAhC,UACGQ,OADH,EADF,cAIE,KAAC,gBAAD,EAAkB,EAAE,CAAE,EAAtB,CAA0B,KAAK,CAAC,SAAhC,EAJF,GALF,GADF,EADF,EADF,CAkBD,CAvBD,CAyBA,cAAeL,CAAAA,aAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport pools from 'config/constants/pools'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background: linear-gradient(#53dee9, #7645d9);\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\n\nconst activeNonCakePools = pools.filter((pool) => !pool.isFinished && !pool.earningToken.symbol.includes('CAKE'))\nconst latestPools: Pool[] = orderBy(activeNonCakePools, ['sortOrder', 'pid'], ['desc', 'desc']).slice(0, 3)\n// Always include CAKE\nconst assets = ['CAKE', ...latestPools.map((pool) => pool.earningToken.symbol)].join(', ')\n\nconst EarnAssetCard = () => {\n  const { t } = useTranslation()\n  const assetText = t('Earn %assets% in Pools', { assets })\n  const [earn, InPools] = assetText.split(assets)\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/syrup\" id=\"pool-cta\">\n        <CardBody>\n          <Heading color=\"contrast\" scale=\"lg\">\n            {earn}\n          </Heading>\n          <CardMidContent color=\"invertedContrast\">{assets}</CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"contrast\" scale=\"lg\">\n              {InPools}\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n"]},"metadata":{},"sourceType":"module"}