{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardTokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Flex, Box, Image, CheckmarkCircleIcon, HelpIcon, useTooltip, Button, AutoRenewIcon, BunnyPlaceholderIcon } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { getAddress } from 'utils/addressHelpers';\nimport { EnableStatus } from '../types';\nimport PercentageOfTotal from './PercentageOfTotal';\nimport { SkeletonCardTokens } from './Skeletons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TokenSection = ({\n  img,\n  children,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Flex, { ...props,\n    children: [img ? /*#__PURE__*/_jsxDEV(Image, {\n      src: img,\n      width: 32,\n      height: 32,\n      mr: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(BunnyPlaceholderIcon, {\n      width: 32,\n      mr: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TokenSection;\n\nconst Label = props => /*#__PURE__*/_jsxDEV(Text, {\n  bold: true,\n  fontSize: \"12px\",\n  color: \"secondary\",\n  textTransform: \"uppercase\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 26\n}, this);\n\n_c2 = Label;\n\nconst Value = props => /*#__PURE__*/_jsxDEV(Text, {\n  bold: true,\n  fontSize: \"20px\",\n  style: {\n    wordBreak: 'break-all'\n  },\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 26\n}, this);\n\n_c3 = Value;\n\nconst IfoCardTokens = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  hasProfile,\n  isLoading,\n  onApprove,\n  enableStatus\n}) => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('Sorry, you didn’t contribute enough LP tokens to meet the minimum threshold. You didn’t buy anything in this sale, but you can still reclaim your LP tokens.'), {\n    placement: 'bottom'\n  });\n  const publicPoolCharacteristics = publicIfoData[poolId];\n  const userPoolCharacteristics = walletIfoData[poolId];\n  const {\n    currency,\n    token\n  } = ifo;\n  const {\n    hasClaimed\n  } = userPoolCharacteristics;\n  const distributionRatio = ifo[poolId].distributionRatio * 100;\n  const tokenImage = `/images/tokens/${getAddress(ifo.token.address)}.png`;\n\n  const renderTokenSection = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(SkeletonCardTokens, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (account && !hasProfile) {\n      if (publicIfoData.status === 'finished') {\n        return /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"center\",\n          children: t('Activate PancakeSwap Profile to take part in next IFO‘s!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"center\",\n        children: t('You need an active PancakeSwap Profile to take part in an IFO!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (publicIfoData.status === 'coming_soon') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TokenSection, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t('On sale')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: ifo[poolId].saleAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          pl: \"48px\",\n          children: t('%ratio%% of total sale', {\n            ratio: distributionRatio\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), enableStatus !== EnableStatus.ENABLED && account && /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          mt: \"16px\",\n          onClick: onApprove,\n          isLoading: enableStatus === EnableStatus.IS_ENABLING,\n          endIcon: enableStatus === EnableStatus.IS_ENABLING ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n            spin: true,\n            color: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 68\n          }, this) : null,\n          children: t('Enable')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (publicIfoData.status === 'live') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TokenSection, {\n          img: \"/images/farms/cake-bnb.svg\",\n          mb: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t('Your %symbol% committed', {\n              symbol: currency.symbol\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: getBalanceNumber(userPoolCharacteristics.amountTokenCommittedInLP, currency.decimals)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PercentageOfTotal, {\n            userAmount: userPoolCharacteristics.amountTokenCommittedInLP,\n            totalAmount: publicPoolCharacteristics.totalAmountPool\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TokenSection, {\n          img: tokenImage,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t('%symbol% to receive', {\n              symbol: token.symbol\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Value, {\n            children: getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    if (publicIfoData.status === 'finished') {\n      return userPoolCharacteristics.amountTokenCommittedInLP.isEqualTo(0) ? /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(BunnyPlaceholderIcon, {\n          width: 80,\n          mb: \"16px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('You didn’t participate in this sale!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TokenSection, {\n          img: \"/images/farms/cake-bnb.svg\",\n          mb: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t(hasClaimed ? 'Your %symbol% RECLAIMED' : 'Your %symbol% TO RECLAIM', {\n              symbol: currency.symbol\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Value, {\n              children: getBalanceNumber(userPoolCharacteristics.refundingAmountInLP, currency.decimals)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), hasClaimed && /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n              color: \"success\",\n              ml: \"8px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PercentageOfTotal, {\n            userAmount: userPoolCharacteristics.amountTokenCommittedInLP,\n            totalAmount: publicPoolCharacteristics.totalAmountPool\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TokenSection, {\n          img: tokenImage,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: [\" \", t(hasClaimed ? '%symbol% received' : '%symbol% to receive', {\n              symbol: token.symbol\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Value, {\n              children: getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), !hasClaimed && userPoolCharacteristics.offeringAmountInToken.isEqualTo(0) && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: targetRef,\n              style: {\n                display: 'flex',\n                marginLeft: '8px'\n              },\n              children: /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), hasClaimed && /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n              color: \"success\",\n              ml: \"8px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pb: \"24px\",\n    children: [tooltipVisible && tooltip, renderTokenSection()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IfoCardTokens, \"FN0eu8QX6iHbx6Qr9muq+WVK/18=\", false, function () {\n  return [useWeb3React, useTranslation, useTooltip];\n});\n\n_c4 = IfoCardTokens;\nexport default IfoCardTokens;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TokenSection\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Value\");\n$RefreshReg$(_c4, \"IfoCardTokens\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardTokens.tsx"],"names":["React","Text","Flex","Box","Image","CheckmarkCircleIcon","HelpIcon","useTooltip","Button","AutoRenewIcon","BunnyPlaceholderIcon","useWeb3React","useTranslation","getBalanceNumber","getAddress","EnableStatus","PercentageOfTotal","SkeletonCardTokens","TokenSection","img","children","props","Label","Value","wordBreak","IfoCardTokens","poolId","ifo","publicIfoData","walletIfoData","hasProfile","isLoading","onApprove","enableStatus","account","t","targetRef","tooltip","tooltipVisible","placement","publicPoolCharacteristics","userPoolCharacteristics","currency","token","hasClaimed","distributionRatio","tokenImage","address","renderTokenSection","status","saleAmount","ratio","ENABLED","IS_ENABLING","symbol","amountTokenCommittedInLP","decimals","totalAmountPool","offeringAmountInToken","isEqualTo","refundingAmountInLP","display","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Text,\n  Flex,\n  Box,\n  Image,\n  CheckmarkCircleIcon,\n  FlexProps,\n  HelpIcon,\n  useTooltip,\n  Button,\n  AutoRenewIcon,\n  BunnyPlaceholderIcon,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { PublicIfoData, WalletIfoData } from 'views/Ifos/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { EnableStatus } from '../types'\nimport PercentageOfTotal from './PercentageOfTotal'\nimport { SkeletonCardTokens } from './Skeletons'\n\ninterface TokenSectionProps extends FlexProps {\n  img?: string\n}\n\nconst TokenSection: React.FC<TokenSectionProps> = ({ img, children, ...props }) => {\n  return (\n    <Flex {...props}>\n      {img ? <Image src={img} width={32} height={32} mr=\"16px\" /> : <BunnyPlaceholderIcon width={32} mr=\"16px\" />}\n      <div>{children}</div>\n    </Flex>\n  )\n}\n\nconst Label = (props) => <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\" {...props} />\n\nconst Value = (props) => <Text bold fontSize=\"20px\" style={{ wordBreak: 'break-all' }} {...props} />\n\ninterface IfoCardTokensProps {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n  hasProfile: boolean\n  isLoading: boolean\n  onApprove: () => Promise<any>\n  enableStatus: EnableStatus\n}\n\nconst IfoCardTokens: React.FC<IfoCardTokensProps> = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  hasProfile,\n  isLoading,\n  onApprove,\n  enableStatus,\n}) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\n      'Sorry, you didn’t contribute enough LP tokens to meet the minimum threshold. You didn’t buy anything in this sale, but you can still reclaim your LP tokens.',\n    ),\n    { placement: 'bottom' },\n  )\n\n  const publicPoolCharacteristics = publicIfoData[poolId]\n  const userPoolCharacteristics = walletIfoData[poolId]\n\n  const { currency, token } = ifo\n  const { hasClaimed } = userPoolCharacteristics\n  const distributionRatio = ifo[poolId].distributionRatio * 100\n  const tokenImage = `/images/tokens/${getAddress(ifo.token.address)}.png`\n\n  const renderTokenSection = () => {\n    if (isLoading) {\n      return <SkeletonCardTokens />\n    }\n    if (account && !hasProfile) {\n      if (publicIfoData.status === 'finished') {\n        return <Text textAlign=\"center\">{t('Activate PancakeSwap Profile to take part in next IFO‘s!')}</Text>\n      }\n      return <Text textAlign=\"center\">{t('You need an active PancakeSwap Profile to take part in an IFO!')}</Text>\n    }\n    if (publicIfoData.status === 'coming_soon') {\n      return (\n        <>\n          <TokenSection>\n            <Label>{t('On sale')}</Label>\n            <Value>{ifo[poolId].saleAmount}</Value>\n          </TokenSection>\n          <Text fontSize=\"14px\" color=\"textSubtle\" pl=\"48px\">\n            {t('%ratio%% of total sale', { ratio: distributionRatio })}\n          </Text>\n          {enableStatus !== EnableStatus.ENABLED && account && (\n            <Button\n              width=\"100%\"\n              mt=\"16px\"\n              onClick={onApprove}\n              isLoading={enableStatus === EnableStatus.IS_ENABLING}\n              endIcon={enableStatus === EnableStatus.IS_ENABLING ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            >\n              {t('Enable')}\n            </Button>\n          )}\n        </>\n      )\n    }\n    if (publicIfoData.status === 'live') {\n      return (\n        <>\n          <TokenSection img=\"/images/farms/cake-bnb.svg\" mb=\"24px\">\n            <Label>{t('Your %symbol% committed', { symbol: currency.symbol })}</Label>\n            <Value>{getBalanceNumber(userPoolCharacteristics.amountTokenCommittedInLP, currency.decimals)}</Value>\n            <PercentageOfTotal\n              userAmount={userPoolCharacteristics.amountTokenCommittedInLP}\n              totalAmount={publicPoolCharacteristics.totalAmountPool}\n            />\n          </TokenSection>\n          <TokenSection img={tokenImage}>\n            <Label>{t('%symbol% to receive', { symbol: token.symbol })}</Label>\n            <Value>{getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)}</Value>\n          </TokenSection>\n        </>\n      )\n    }\n    if (publicIfoData.status === 'finished') {\n      return userPoolCharacteristics.amountTokenCommittedInLP.isEqualTo(0) ? (\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <BunnyPlaceholderIcon width={80} mb=\"16px\" />\n          <Text>{t('You didn’t participate in this sale!')}</Text>\n        </Flex>\n      ) : (\n        <>\n          <TokenSection img=\"/images/farms/cake-bnb.svg\" mb=\"24px\">\n            <Label>\n              {t(hasClaimed ? 'Your %symbol% RECLAIMED' : 'Your %symbol% TO RECLAIM', { symbol: currency.symbol })}\n            </Label>\n            <Flex alignItems=\"center\">\n              <Value>{getBalanceNumber(userPoolCharacteristics.refundingAmountInLP, currency.decimals)}</Value>\n              {hasClaimed && <CheckmarkCircleIcon color=\"success\" ml=\"8px\" />}\n            </Flex>\n            <PercentageOfTotal\n              userAmount={userPoolCharacteristics.amountTokenCommittedInLP}\n              totalAmount={publicPoolCharacteristics.totalAmountPool}\n            />\n          </TokenSection>\n          <TokenSection img={tokenImage}>\n            <Label> {t(hasClaimed ? '%symbol% received' : '%symbol% to receive', { symbol: token.symbol })}</Label>\n            <Flex alignItems=\"center\">\n              <Value>{getBalanceNumber(userPoolCharacteristics.offeringAmountInToken, token.decimals)}</Value>\n              {!hasClaimed && userPoolCharacteristics.offeringAmountInToken.isEqualTo(0) && (\n                <div ref={targetRef} style={{ display: 'flex', marginLeft: '8px' }}>\n                  <HelpIcon />\n                </div>\n              )}\n              {hasClaimed && <CheckmarkCircleIcon color=\"success\" ml=\"8px\" />}\n            </Flex>\n          </TokenSection>\n        </>\n      )\n    }\n    return null\n  }\n  return (\n    <Box pb=\"24px\">\n      {tooltipVisible && tooltip}\n      {renderTokenSection()}\n    </Box>\n  )\n}\n\nexport default IfoCardTokens\n"]},"metadata":{},"sourceType":"module"}