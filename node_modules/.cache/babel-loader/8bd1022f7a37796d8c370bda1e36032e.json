{"ast":null,"code":"import _regeneratorRuntime from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{fetchCurrentLotteryIdAndMaxBuy,fetchLottery}from'state/lottery/helpers';import useRefresh from'hooks/useRefresh';var useFetchLotteryForPromos=function useFetchLotteryForPromos(){var _useRefresh=useRefresh(),slowRefresh=_useRefresh.slowRefresh;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),lotteryId=_useState2[0],setLotteryId=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),currentLotteryPrize=_useState4[0],setCurrentLotteryPrize=_useState4[1];useEffect(function(){// get current lottery ID\nvar fetchCurrentID=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$fetchCurrentLo,currentLotteryId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchCurrentLotteryIdAndMaxBuy();case 2:_yield$fetchCurrentLo=_context.sent;currentLotteryId=_yield$fetchCurrentLo.currentLotteryId;setLotteryId(currentLotteryId);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchCurrentID(){return _ref.apply(this,arguments);};}();fetchCurrentID();},[setLotteryId]);useEffect(function(){// get public data for current lottery\nvar fetchCurrentLotteryPrize=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$fetchLottery,amountCollectedInCake;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchLottery(lotteryId);case 2:_yield$fetchLottery=_context2.sent;amountCollectedInCake=_yield$fetchLottery.amountCollectedInCake;setCurrentLotteryPrize(amountCollectedInCake);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchCurrentLotteryPrize(){return _ref2.apply(this,arguments);};}();if(lotteryId){fetchCurrentLotteryPrize();}},[lotteryId,slowRefresh,setCurrentLotteryPrize]);return{currentLotteryPrize:currentLotteryPrize};};export default useFetchLotteryForPromos;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Home/hooks/useFetchLotteryForPromos.ts"],"names":["useState","useEffect","fetchCurrentLotteryIdAndMaxBuy","fetchLottery","useRefresh","useFetchLotteryForPromos","slowRefresh","lotteryId","setLotteryId","currentLotteryPrize","setCurrentLotteryPrize","fetchCurrentID","currentLotteryId","fetchCurrentLotteryPrize","amountCollectedInCake"],"mappings":"+bAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,8BAAT,CAAyCC,YAAzC,KAA6D,uBAA7D,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CACrC,gBAAwBD,UAAU,EAAlC,CAAQE,WAAR,aAAQA,WAAR,CACA,cAAkCN,QAAQ,CAAS,IAAT,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAAsDR,QAAQ,CAAS,IAAT,CAA9D,yCAAOS,mBAAP,eAA4BC,sBAA5B,eAEAT,SAAS,CAAC,UAAM,CACd;AACA,GAAMU,CAAAA,cAAc,0FAAG,oMACcT,CAAAA,8BAA8B,EAD5C,4CACbU,gBADa,uBACbA,gBADa,CAErBJ,YAAY,CAACI,gBAAD,CAAZ,CAFqB,sDAAH,kBAAdD,CAAAA,cAAc,0CAApB,CAKAA,cAAc,GACf,CARQ,CAQN,CAACH,YAAD,CARM,CAAT,CAUAP,SAAS,CAAC,UAAM,CACd;AACA,GAAMY,CAAAA,wBAAwB,2FAAG,6MACSV,CAAAA,YAAY,CAACI,SAAD,CADrB,2CACvBO,qBADuB,qBACvBA,qBADuB,CAE/BJ,sBAAsB,CAACI,qBAAD,CAAtB,CAF+B,wDAAH,kBAAxBD,CAAAA,wBAAwB,2CAA9B,CAKA,GAAIN,SAAJ,CAAe,CACbM,wBAAwB,GACzB,CACF,CAVQ,CAUN,CAACN,SAAD,CAAYD,WAAZ,CAAyBI,sBAAzB,CAVM,CAAT,CAYA,MAAO,CAAED,mBAAmB,CAAnBA,mBAAF,CAAP,CACD,CA5BD,CA8BA,cAAeJ,CAAAA,wBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { fetchCurrentLotteryIdAndMaxBuy, fetchLottery } from 'state/lottery/helpers'\nimport useRefresh from 'hooks/useRefresh'\n\nconst useFetchLotteryForPromos = () => {\n  const { slowRefresh } = useRefresh()\n  const [lotteryId, setLotteryId] = useState<string>(null)\n  const [currentLotteryPrize, setCurrentLotteryPrize] = useState<string>(null)\n\n  useEffect(() => {\n    // get current lottery ID\n    const fetchCurrentID = async () => {\n      const { currentLotteryId } = await fetchCurrentLotteryIdAndMaxBuy()\n      setLotteryId(currentLotteryId)\n    }\n\n    fetchCurrentID()\n  }, [setLotteryId])\n\n  useEffect(() => {\n    // get public data for current lottery\n    const fetchCurrentLotteryPrize = async () => {\n      const { amountCollectedInCake } = await fetchLottery(lotteryId)\n      setCurrentLotteryPrize(amountCollectedInCake)\n    }\n\n    if (lotteryId) {\n      fetchCurrentLotteryPrize()\n    }\n  }, [lotteryId, slowRefresh, setCurrentLotteryPrize])\n\n  return { currentLotteryPrize }\n}\n\nexport default useFetchLotteryForPromos\n"]},"metadata":{},"sourceType":"module"}