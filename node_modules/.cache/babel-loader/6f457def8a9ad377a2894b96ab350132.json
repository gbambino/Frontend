{"ast":null,"code":"var _jsxFileName = \"/home/kodachi/Desktop/Frontend1/src/views/Farms/components/FarmCard/FarmCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Flex, Text, Skeleton } from '@pancakeswap/uikit';\nimport { getBscScanAddressUrl } from 'utils/bscscan';\nimport { useTranslation } from 'contexts/Localization';\nimport ExpandableSectionButton from 'components/ExpandableSectionButton';\nimport { BASE_ADD_LIQUIDITY_URL } from 'config';\nimport { getAddress } from 'utils/addressHelpers';\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts';\nimport DetailsSection from './DetailsSection';\nimport CardHeading from './CardHeading';\nimport CardActionsContainer from './CardActionsContainer';\nimport ApyButton from './ApyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccentGradient = keyframes`  \n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`;\nconst StyledCardAccent = styled.div`\n  background: rgba(0, 0, 0, 0) linear-gradient(45deg, rgb(255, 0, 0) 0%, rgb(255, 154, 0) 10%, rgb(208, 222, 33) 20%, rgb(79, 220, 74) 30%, rgb(63, 218, 216) 40%, rgb(47, 201, 226) 50%, rgb(28, 127, 238) 60%, rgb(95, 21, 242) 70%, rgb(186, 12, 248) 80%, rgb(251, 7, 217) 90%, rgb(255, 0, 0) 100%) repeat scroll 0% 0% / 300% 300%;\n  background-size: 400% 400%;\n  animation: 2s linear 0s infinite normal none running ilqnTz;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`;\n_c = StyledCardAccent;\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${props => props.theme.card.background};\n  border-radius: ${({\n  theme,\n  isPromotedFarm\n}) => isPromotedFarm ? '31px' : theme.radii.card};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`;\n_c2 = FCard;\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`;\n_c3 = Divider;\nconst ExpandingWrapper = styled.div`\n  height: ${props => props.expanded ? '100%' : '0px'};\n  overflow: hidden;\n`;\n_c4 = ExpandingWrapper;\n\nconst FarmCard = ({\n  farm,\n  displayApr,\n  removed,\n  cakePrice,\n  account\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [showExpandableSection, setShowExpandableSection] = useState(false);\n  const totalValueFormatted = farm.liquidity && farm.liquidity.gt(0) ? `$${farm.liquidity.toNumber().toLocaleString(undefined, {\n    maximumFractionDigits: 0\n  })}` : '';\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '');\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('CAKE + Fees');\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address\n  });\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`;\n  const lpAddress = getAddress(farm.lpAddresses);\n  const isPromotedFarm = farm.token.symbol === 'CAKE';\n  return /*#__PURE__*/_jsxDEV(FCard, {\n    isPromotedFarm: isPromotedFarm,\n    children: [isPromotedFarm && /*#__PURE__*/_jsxDEV(StyledCardAccent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(CardHeading, {\n      lpLabel: lpLabel,\n      multiplier: farm.multiplier,\n      isCommunityFarm: farm.isCommunity,\n      token: farm.token,\n      quoteToken: farm.quoteToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), !removed && /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [t('APR'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: farm.apr ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ApyButton, {\n            lpLabel: lpLabel,\n            addLiquidityUrl: addLiquidityUrl,\n            cakePrice: cakePrice,\n            apr: farm.apr,\n            displayApr: displayApr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), displayApr, \"%\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 24,\n          width: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [t('Earn'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: earnLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActionsContainer, {\n      farm: farm,\n      account: account,\n      addLiquidityUrl: addLiquidityUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandableSectionButton, {\n      onClick: () => setShowExpandableSection(!showExpandableSection),\n      expanded: showExpandableSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandingWrapper, {\n      expanded: showExpandableSection,\n      children: /*#__PURE__*/_jsxDEV(DetailsSection, {\n        removed: removed,\n        bscScanAddress: getBscScanAddressUrl(lpAddress),\n        infoAddress: `https://pancakeswap.info/pool/${lpAddress}`,\n        totalValueFormatted: totalValueFormatted,\n        lpLabel: lpLabel,\n        addLiquidityUrl: addLiquidityUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmCard, \"jzyAoNoVq4xL0xgWre/6gUb8dXA=\", false, function () {\n  return [useTranslation];\n});\n\n_c5 = FarmCard;\nexport default FarmCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledCardAccent\");\n$RefreshReg$(_c2, \"FCard\");\n$RefreshReg$(_c3, \"Divider\");\n$RefreshReg$(_c4, \"ExpandingWrapper\");\n$RefreshReg$(_c5, \"FarmCard\");","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Farms/components/FarmCard/FarmCard.tsx"],"names":["React","useState","styled","keyframes","Flex","Text","Skeleton","getBscScanAddressUrl","useTranslation","ExpandableSectionButton","BASE_ADD_LIQUIDITY_URL","getAddress","getLiquidityUrlPathParts","DetailsSection","CardHeading","CardActionsContainer","ApyButton","AccentGradient","StyledCardAccent","div","FCard","props","theme","card","background","isPromotedFarm","radii","Divider","colors","cardBorder","ExpandingWrapper","expanded","FarmCard","farm","displayApr","removed","cakePrice","account","t","showExpandableSection","setShowExpandableSection","totalValueFormatted","liquidity","gt","toNumber","toLocaleString","undefined","maximumFractionDigits","lpLabel","lpSymbol","toUpperCase","replace","earnLabel","dual","liquidityUrlPathParts","quoteTokenAddress","quoteToken","address","tokenAddress","token","addLiquidityUrl","lpAddress","lpAddresses","symbol","multiplier","isCommunity","display","alignItems","apr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { Farm } from 'state/types'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n\nconst AccentGradient = keyframes`  \n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: rgba(0, 0, 0, 0) linear-gradient(45deg, rgb(255, 0, 0) 0%, rgb(255, 154, 0) 10%, rgb(208, 222, 33) 20%, rgb(79, 220, 74) 30%, rgb(63, 218, 216) 40%, rgb(47, 201, 226) 50%, rgb(28, 127, 238) 60%, rgb(95, 21, 242) 70%, rgb(186, 12, 248) 80%, rgb(251, 7, 217) 90%, rgb(255, 0, 0) 100%) repeat scroll 0% 0% / 300% 300%;\n  background-size: 400% 400%;\n  animation: 2s linear 0s infinite normal none running ilqnTz;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('CAKE + Fees')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm}>\n      {isPromotedFarm && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={farm.isCommunity}\n        token={farm.token}\n        quoteToken={farm.quoteToken}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apr ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  addLiquidityUrl={addLiquidityUrl}\n                  cakePrice={cakePrice}\n                  apr={farm.apr}\n                  displayApr={displayApr}\n                />\n                {displayApr}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={getBscScanAddressUrl(lpAddress)}\n          infoAddress={`https://pancakeswap.info/pool/${lpAddress}`}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n"]},"metadata":{},"sourceType":"module"}