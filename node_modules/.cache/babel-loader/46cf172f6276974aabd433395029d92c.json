{"ast":null,"code":"import _slicedToArray from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState}from'react';import styled,{keyframes}from'styled-components';import{Flex,Text,Skeleton}from'@pancakeswap/uikit';import{getBscScanAddressUrl}from'utils/bscscan';import{useTranslation}from'contexts/Localization';import ExpandableSectionButton from'components/ExpandableSectionButton';import{BASE_ADD_LIQUIDITY_URL}from'config';import{getAddress}from'utils/addressHelpers';import getLiquidityUrlPathParts from'utils/getLiquidityUrlPathParts';import DetailsSection from'./DetailsSection';import CardHeading from'./CardHeading';import CardActionsContainer from'./CardActionsContainer';import ApyButton from'./ApyButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AccentGradient=keyframes(_templateObject||(_templateObject=_taggedTemplateLiteral([\"  \\n  0% {\\n    background-position: 50% 0%;\\n  }\\n  50% {\\n    background-position: 50% 100%;\\n  }\\n  100% {\\n    background-position: 50% 0%;\\n  }\\n\"])));var StyledCardAccent=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: rgba(0, 0, 0, 0) linear-gradient(45deg, rgb(255, 0, 0) 0%, rgb(255, 154, 0) 10%, rgb(208, 222, 33) 20%, rgb(79, 220, 74) 30%, rgb(63, 218, 216) 40%, rgb(47, 201, 226) 50%, rgb(28, 127, 238) 60%, rgb(95, 21, 242) 70%, rgb(186, 12, 248) 80%, rgb(251, 7, 217) 90%, rgb(255, 0, 0) 100%) repeat scroll 0% 0% / 300% 300%;\\n  background-size: 400% 400%;\\n  animation: 2s linear 0s infinite normal none running ilqnTz;\\n  border-radius: 16px;\\n  filter: blur(6px);\\n  position: absolute;\\n  top: -1px;\\n  right: -1px;\\n  bottom: -3px;\\n  left: -1px;\\n  z-index: -1;\\n\"])));var FCard=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\nbackground: rgba(0, 0, 0, 0) linear-gradient(45deg, rgb(255, 0, 0) 0%, rgb(255, 154, 0) 10%, rgb(208, 222, 33) 20%, rgb(79, 220, 74) 30%, rgb(63, 218, 216) 40%, rgb(47, 201, 226) 50%, rgb(28, 127, 238) 60%, rgb(95, 21, 242) 70%, rgb(186, 12, 248) 80%, rgb(251, 7, 217) 90%, rgb(255, 0, 0) 100%) repeat scroll 0% 0% / 300% 300%;\\nbackground-size: 400% 400%;\\nanimation: 2s linear 0s infinite normal none running ilqnTz;\\nborder-radius: 16px;\\nfilter: blur(6px);\\nposition: absolute;\\ntop: -1px;\\nright: -1px;\\nbottom: -3px;\\nleft: -1px;\\nz-index: -1;\\n\"])));var Divider=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  height: 1px;\\n  margin: 28px auto;\\n  width: 100%;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.cardBorder;});var ExpandingWrapper=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  height: \",\";\\n  overflow: hidden;\\n\"])),function(props){return props.expanded?'100%':'0px';});var FarmCard=function FarmCard(_ref2){var farm=_ref2.farm,displayApr=_ref2.displayApr,removed=_ref2.removed,cakePrice=_ref2.cakePrice,account=_ref2.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showExpandableSection=_useState2[0],setShowExpandableSection=_useState2[1];var totalValueFormatted=farm.liquidity&&farm.liquidity.gt(0)?\"$\".concat(farm.liquidity.toNumber().toLocaleString(undefined,{maximumFractionDigits:0})):'';var lpLabel=farm.lpSymbol&&farm.lpSymbol.toUpperCase().replace('PANCAKE','');var earnLabel=farm.dual?farm.dual.earnLabel:t('CAKE + Fees');var liquidityUrlPathParts=getLiquidityUrlPathParts({quoteTokenAddress:farm.quoteToken.address,tokenAddress:farm.token.address});var addLiquidityUrl=\"\".concat(BASE_ADD_LIQUIDITY_URL,\"/\").concat(liquidityUrlPathParts);var lpAddress=getAddress(farm.lpAddresses);var isPromotedFarm=farm.token.symbol==='CAKE';return/*#__PURE__*/_jsxs(FCard,{isPromotedFarm:isPromotedFarm,children:[isPromotedFarm&&/*#__PURE__*/_jsx(StyledCardAccent,{}),/*#__PURE__*/_jsx(CardHeading,{lpLabel:lpLabel,multiplier:farm.multiplier,isCommunityFarm:farm.isCommunity,token:farm.token,quoteToken:farm.quoteToken}),!removed&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('APR'),\":\"]}),/*#__PURE__*/_jsx(Text,{bold:true,style:{display:'flex',alignItems:'center'},children:farm.apr?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ApyButton,{lpLabel:lpLabel,addLiquidityUrl:addLiquidityUrl,cakePrice:cakePrice,apr:farm.apr,displayApr:displayApr}),displayApr,\"%\"]}):/*#__PURE__*/_jsx(Skeleton,{height:24,width:80})})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('Earn'),\":\"]}),/*#__PURE__*/_jsx(Text,{bold:true,children:earnLabel})]}),/*#__PURE__*/_jsx(CardActionsContainer,{farm:farm,account:account,addLiquidityUrl:addLiquidityUrl}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(ExpandableSectionButton,{onClick:function onClick(){return setShowExpandableSection(!showExpandableSection);},expanded:showExpandableSection}),/*#__PURE__*/_jsx(ExpandingWrapper,{expanded:showExpandableSection,children:/*#__PURE__*/_jsx(DetailsSection,{removed:removed,bscScanAddress:getBscScanAddressUrl(lpAddress),infoAddress:\"https://pancakeswap.info/pool/\".concat(lpAddress),totalValueFormatted:totalValueFormatted,lpLabel:lpLabel,addLiquidityUrl:addLiquidityUrl})})]});};export default FarmCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Farms/components/FarmCard/FarmCard.tsx"],"names":["React","useState","styled","keyframes","Flex","Text","Skeleton","getBscScanAddressUrl","useTranslation","ExpandableSectionButton","BASE_ADD_LIQUIDITY_URL","getAddress","getLiquidityUrlPathParts","DetailsSection","CardHeading","CardActionsContainer","ApyButton","AccentGradient","StyledCardAccent","div","FCard","Divider","theme","colors","cardBorder","ExpandingWrapper","props","expanded","FarmCard","farm","displayApr","removed","cakePrice","account","t","showExpandableSection","setShowExpandableSection","totalValueFormatted","liquidity","gt","toNumber","toLocaleString","undefined","maximumFractionDigits","lpLabel","lpSymbol","toUpperCase","replace","earnLabel","dual","liquidityUrlPathParts","quoteTokenAddress","quoteToken","address","tokenAddress","token","addLiquidityUrl","lpAddress","lpAddresses","isPromotedFarm","symbol","multiplier","isCommunity","display","alignItems","apr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { Farm } from 'state/types'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n\nconst AccentGradient = keyframes`  \n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: rgba(0, 0, 0, 0) linear-gradient(45deg, rgb(255, 0, 0) 0%, rgb(255, 154, 0) 10%, rgb(208, 222, 33) 20%, rgb(79, 220, 74) 30%, rgb(63, 218, 216) 40%, rgb(47, 201, 226) 50%, rgb(28, 127, 238) 60%, rgb(95, 21, 242) 70%, rgb(186, 12, 248) 80%, rgb(251, 7, 217) 90%, rgb(255, 0, 0) 100%) repeat scroll 0% 0% / 300% 300%;\n  background-size: 400% 400%;\n  animation: 2s linear 0s infinite normal none running ilqnTz;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\nbackground: rgba(0, 0, 0, 0) linear-gradient(45deg, rgb(255, 0, 0) 0%, rgb(255, 154, 0) 10%, rgb(208, 222, 33) 20%, rgb(79, 220, 74) 30%, rgb(63, 218, 216) 40%, rgb(47, 201, 226) 50%, rgb(28, 127, 238) 60%, rgb(95, 21, 242) 70%, rgb(186, 12, 248) 80%, rgb(251, 7, 217) 90%, rgb(255, 0, 0) 100%) repeat scroll 0% 0% / 300% 300%;\nbackground-size: 400% 400%;\nanimation: 2s linear 0s infinite normal none running ilqnTz;\nborder-radius: 16px;\nfilter: blur(6px);\nposition: absolute;\ntop: -1px;\nright: -1px;\nbottom: -3px;\nleft: -1px;\nz-index: -1;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('CAKE + Fees')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm}>\n      {isPromotedFarm && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={farm.isCommunity}\n        token={farm.token}\n        quoteToken={farm.quoteToken}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apr ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  addLiquidityUrl={addLiquidityUrl}\n                  cakePrice={cakePrice}\n                  apr={farm.apr}\n                  displayApr={displayApr}\n                />\n                {displayApr}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={getBscScanAddressUrl(lpAddress)}\n          infoAddress={`https://pancakeswap.info/pool/${lpAddress}`}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n"]},"metadata":{},"sourceType":"module"}