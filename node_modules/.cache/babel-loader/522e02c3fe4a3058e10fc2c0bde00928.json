{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{useWeb3React}from'@web3-react/core';import{Box,BlockIcon,CardBody}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import{useBlock,useGetBetByEpoch}from'state/hooks';import{formatBigNumberToFixed}from'utils/formatBalance';import{getHasRoundFailed,getNetPayoutv2}from'../../helpers';import{RoundResult}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import Card from'./Card';import CardHeader from'./CardHeader';import CollectWinningsOverlay from'./CollectWinningsOverlay';import CanceledRoundCard from'./CanceledRoundCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledExpiredRoundCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  opacity: 0.7;\\n  transition: opacity 300ms;\\n\\n  &:hover {\\n    opacity: 1;\\n  }\\n\"])));var ExpiredRoundCard=function ExpiredRoundCard(_ref){var round=_ref.round,betAmount=_ref.betAmount,hasEnteredUp=_ref.hasEnteredUp,hasEnteredDown=_ref.hasEnteredDown,bullMultiplier=_ref.bullMultiplier,bearMultiplier=_ref.bearMultiplier;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useBlock=useBlock(),initialBlock=_useBlock.initialBlock;var epoch=round.epoch,endBlock=round.endBlock,lockPrice=round.lockPrice,closePrice=round.closePrice;var betPosition=closePrice>lockPrice?BetPosition.BULL:BetPosition.BEAR;var ledger=useGetBetByEpoch(account,epoch);var payout=getNetPayoutv2(ledger,round);var formattedPayout=payout.toUnsafeFloat().toFixed(4);var hasRoundFailed=getHasRoundFailed(round,initialBlock);if(hasRoundFailed){return/*#__PURE__*/_jsx(CanceledRoundCard,{round:round});}return/*#__PURE__*/_jsxs(Box,{position:\"relative\",children:[/*#__PURE__*/_jsxs(StyledExpiredRoundCard,{children:[/*#__PURE__*/_jsx(CardHeader,{status:\"expired\",icon:/*#__PURE__*/_jsx(BlockIcon,{mr:\"4px\",width:\"21px\",color:\"textDisabled\"}),title:t('Expired'),blockNumber:endBlock,epoch:round.epoch}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",style:{position:'relative'},children:[/*#__PURE__*/_jsx(MultiplierArrow,{betAmount:betAmount,multiplier:bullMultiplier,isActive:betPosition===BetPosition.BULL,hasEntered:hasEnteredUp}),/*#__PURE__*/_jsx(RoundResult,{round:round,hasFailed:hasRoundFailed}),/*#__PURE__*/_jsx(MultiplierArrow,{betAmount:betAmount,multiplier:bearMultiplier,betPosition:BetPosition.BEAR,isActive:betPosition===BetPosition.BEAR,hasEntered:hasEnteredDown})]})]}),/*#__PURE__*/_jsx(CollectWinningsOverlay,{epoch:epoch,payout:formattedPayout,betAmount:betAmount?formatBigNumberToFixed(betAmount,4):'0',isBottom:hasEnteredDown})]});};export default ExpiredRoundCard;","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/src/views/Predictions/components/RoundCard/ExpiredRoundCard.tsx"],"names":["React","styled","useWeb3React","Box","BlockIcon","CardBody","useTranslation","BetPosition","useBlock","useGetBetByEpoch","formatBigNumberToFixed","getHasRoundFailed","getNetPayoutv2","RoundResult","MultiplierArrow","Card","CardHeader","CollectWinningsOverlay","CanceledRoundCard","StyledExpiredRoundCard","ExpiredRoundCard","round","betAmount","hasEnteredUp","hasEnteredDown","bullMultiplier","bearMultiplier","t","account","initialBlock","epoch","endBlock","lockPrice","closePrice","betPosition","BULL","BEAR","ledger","payout","formattedPayout","toUnsafeFloat","toFixed","hasRoundFailed","position"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Box, BlockIcon, CardBody } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition, NodeLedger } from 'state/types'\nimport { useBlock, useGetBetByEpoch } from 'state/hooks'\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers'\nimport { RoundResult } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport Card from './Card'\nimport CardHeader from './CardHeader'\nimport CollectWinningsOverlay from './CollectWinningsOverlay'\nimport CanceledRoundCard from './CanceledRoundCard'\n\ninterface ExpiredRoundCardProps {\n  round: NodeRound\n  betAmount?: NodeLedger['amount']\n  hasEnteredUp: boolean\n  hasEnteredDown: boolean\n  bullMultiplier: string\n  bearMultiplier: string\n}\n\nconst StyledExpiredRoundCard = styled(Card)`\n  opacity: 0.7;\n  transition: opacity 300ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst ExpiredRoundCard: React.FC<ExpiredRoundCardProps> = ({\n  round,\n  betAmount,\n  hasEnteredUp,\n  hasEnteredDown,\n  bullMultiplier,\n  bearMultiplier,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { initialBlock } = useBlock()\n  const { epoch, endBlock, lockPrice, closePrice } = round\n\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\n  const ledger = useGetBetByEpoch(account, epoch)\n  const payout = getNetPayoutv2(ledger, round)\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4)\n  const hasRoundFailed = getHasRoundFailed(round, initialBlock)\n\n  if (hasRoundFailed) {\n    return <CanceledRoundCard round={round} />\n  }\n\n  return (\n    <Box position=\"relative\">\n      <StyledExpiredRoundCard>\n        <CardHeader\n          status=\"expired\"\n          icon={<BlockIcon mr=\"4px\" width=\"21px\" color=\"textDisabled\" />}\n          title={t('Expired')}\n          blockNumber={endBlock}\n          epoch={round.epoch}\n        />\n        <CardBody p=\"16px\" style={{ position: 'relative' }}>\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bullMultiplier}\n            isActive={betPosition === BetPosition.BULL}\n            hasEntered={hasEnteredUp}\n          />\n          <RoundResult round={round} hasFailed={hasRoundFailed} />\n          <MultiplierArrow\n            betAmount={betAmount}\n            multiplier={bearMultiplier}\n            betPosition={BetPosition.BEAR}\n            isActive={betPosition === BetPosition.BEAR}\n            hasEntered={hasEnteredDown}\n          />\n        </CardBody>\n      </StyledExpiredRoundCard>\n      <CollectWinningsOverlay\n        epoch={epoch}\n        payout={formattedPayout}\n        betAmount={betAmount ? formatBigNumberToFixed(betAmount, 4) : '0'}\n        isBottom={hasEnteredDown}\n      />\n    </Box>\n  )\n}\n\nexport default ExpiredRoundCard\n"]},"metadata":{},"sourceType":"module"}