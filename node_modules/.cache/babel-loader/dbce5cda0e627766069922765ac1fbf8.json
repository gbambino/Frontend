{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kodachi/Desktop/Frontend1/Frontend1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import BigNumber from'bignumber.js';import styled from'styled-components';import{getBalanceNumber,getFullDisplayBalance}from'utils/formatBalance';import{useTranslation}from'contexts/Localization';import{Flex,MetamaskIcon,Text,TooltipText,LinkExternal,TimerIcon,Skeleton,useTooltip,Button,Link,HelpIcon}from'@pancakeswap/uikit';import{BASE_BSC_SCAN_URL,BASE_URL}from'config';import{useBlock,useCakeVault}from'state/hooks';import{getAddress,getCakeVaultAddress}from'utils/addressHelpers';import{registerToken}from'utils/wallet';import{getBscScanBlockCountdownUrl}from'utils/bscscan';import Balance from'components/Balance';import{getPoolBlockInfo}from'views/Pools/helpers';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ExpandedWrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  svg {\\n    height: 14px;\\n    width: 14px;\\n  }\\n\"])));var ExpandedFooter=function ExpandedFooter(_ref){var _window$ethereum;var pool=_ref.pool,account=_ref.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useBlock=useBlock(),currentBlock=_useBlock.currentBlock;var _useCakeVault=useCakeVault(),totalCakeInVault=_useCakeVault.totalCakeInVault,performanceFee=_useCakeVault.fees.performanceFee;var stakingToken=pool.stakingToken,earningToken=pool.earningToken,totalStaked=pool.totalStaked,startBlock=pool.startBlock,endBlock=pool.endBlock,stakingLimit=pool.stakingLimit,contractAddress=pool.contractAddress,sousId=pool.sousId,isAutoVault=pool.isAutoVault;var tokenAddress=earningToken.address?getAddress(earningToken.address):'';var poolContractAddress=getAddress(contractAddress);var cakeVaultContractAddress=getCakeVaultAddress();var imageSrc=\"\".concat(BASE_URL,\"/images/tokens/\").concat(tokenAddress,\".png\");var isMetaMaskInScope=!!((_window$ethereum=window.ethereum)===null||_window$ethereum===void 0?void 0:_window$ethereum.isMetaMask);var isManualCakePool=sousId===0;var _getPoolBlockInfo=getPoolBlockInfo(pool,currentBlock),shouldShowBlockCountdown=_getPoolBlockInfo.shouldShowBlockCountdown,blocksUntilStart=_getPoolBlockInfo.blocksUntilStart,blocksRemaining=_getPoolBlockInfo.blocksRemaining,hasPoolStarted=_getPoolBlockInfo.hasPoolStarted,blocksToDisplay=_getPoolBlockInfo.blocksToDisplay;var _useTooltip=useTooltip(t('Subtracted automatically from each yield harvest and burned.'),{placement:'bottom-start'}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var getTotalStakedBalance=function getTotalStakedBalance(){if(isAutoVault){return getBalanceNumber(totalCakeInVault,stakingToken.decimals);}if(isManualCakePool){var manualCakeTotalMinusAutoVault=new BigNumber(totalStaked).minus(totalCakeInVault);return getBalanceNumber(manualCakeTotalMinusAutoVault,stakingToken.decimals);}return getBalanceNumber(totalStaked,stakingToken.decimals);};var _useTooltip2=useTooltip(t('Total amount of %symbol% staked in this pool',{symbol:stakingToken.symbol}),{placement:'bottom'}),totalStakedTargetRef=_useTooltip2.targetRef,totalStakedTooltip=_useTooltip2.tooltip,totalStakedTooltipVisible=_useTooltip2.tooltipVisible;return/*#__PURE__*/_jsxs(ExpandedWrapper,{flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Flex,{mb:\"2px\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Text,{small:true,children:[t('Total staked'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"flex-start\",children:[totalStaked&&totalStaked.gte(0)?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balance,{small:true,value:getTotalStakedBalance(),decimals:0,unit:\" \".concat(stakingToken.symbol)}),/*#__PURE__*/_jsx(\"span\",{ref:totalStakedTargetRef,children:/*#__PURE__*/_jsx(HelpIcon,{color:\"textSubtle\",width:\"20px\",ml:\"6px\",mt:\"4px\"})})]}):/*#__PURE__*/_jsx(Skeleton,{width:\"90px\",height:\"21px\"}),totalStakedTooltipVisible&&totalStakedTooltip]})]}),stakingLimit&&stakingLimit.gt(0)&&/*#__PURE__*/_jsxs(Flex,{mb:\"2px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{small:true,children:[t('Max. stake per user'),\":\"]}),/*#__PURE__*/_jsx(Text,{small:true,children:\"\".concat(getFullDisplayBalance(stakingLimit,stakingToken.decimals,0),\" \").concat(stakingToken.symbol)})]}),shouldShowBlockCountdown&&/*#__PURE__*/_jsxs(Flex,{mb:\"2px\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Text,{small:true,children:[hasPoolStarted?t('Ends in'):t('Starts in'),\":\"]}),blocksRemaining||blocksUntilStart?/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",children:/*#__PURE__*/_jsxs(Link,{external:true,href:getBscScanBlockCountdownUrl(hasPoolStarted?endBlock:startBlock),children:[/*#__PURE__*/_jsx(Balance,{small:true,value:blocksToDisplay,decimals:0,color:\"primary\"}),/*#__PURE__*/_jsx(Text,{small:true,ml:\"4px\",color:\"primary\",textTransform:\"lowercase\",children:t('Blocks')}),/*#__PURE__*/_jsx(TimerIcon,{ml:\"4px\",color:\"primary\"})]})}):/*#__PURE__*/_jsx(Skeleton,{width:\"54px\",height:\"21px\"})]}),isAutoVault&&/*#__PURE__*/_jsxs(Flex,{mb:\"2px\",justifyContent:\"space-between\",alignItems:\"center\",children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsx(TooltipText,{ref:targetRef,small:true,children:t('Performance Fee')}),/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",children:/*#__PURE__*/_jsxs(Text,{ml:\"4px\",small:true,children:[performanceFee/100,\"%\"]})})]}),/*#__PURE__*/_jsx(Flex,{mb:\"2px\",justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(LinkExternal,{href:\"https://pancakeswap.info/token/\".concat(getAddress(earningToken.address)),bold:false,small:true,children:t('See Token Info')})}),/*#__PURE__*/_jsx(Flex,{mb:\"2px\",justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(LinkExternal,{href:earningToken.projectLink,bold:false,small:true,children:t('View Project Site')})}),poolContractAddress&&/*#__PURE__*/_jsx(Flex,{mb:\"2px\",justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(LinkExternal,{href:\"\".concat(BASE_BSC_SCAN_URL,\"/address/\").concat(isAutoVault?cakeVaultContractAddress:poolContractAddress),bold:false,small:true,children:t('View Contract')})}),account&&isMetaMaskInScope&&tokenAddress&&/*#__PURE__*/_jsx(Flex,{justifyContent:\"flex-end\",children:/*#__PURE__*/_jsxs(Button,{variant:\"text\",p:\"0\",height:\"auto\",onClick:function onClick(){return registerToken(tokenAddress,earningToken.symbol,earningToken.decimals,imageSrc);},children:[/*#__PURE__*/_jsx(Text,{color:\"primary\",fontSize:\"14px\",children:t('Add to Metamask')}),/*#__PURE__*/_jsx(MetamaskIcon,{ml:\"4px\"})]})})]});};export default/*#__PURE__*/React.memo(ExpandedFooter);","map":{"version":3,"sources":["/home/kodachi/Desktop/Frontend1/Frontend1/src/views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx"],"names":["React","BigNumber","styled","getBalanceNumber","getFullDisplayBalance","useTranslation","Flex","MetamaskIcon","Text","TooltipText","LinkExternal","TimerIcon","Skeleton","useTooltip","Button","Link","HelpIcon","BASE_BSC_SCAN_URL","BASE_URL","useBlock","useCakeVault","getAddress","getCakeVaultAddress","registerToken","getBscScanBlockCountdownUrl","Balance","getPoolBlockInfo","ExpandedWrapper","ExpandedFooter","pool","account","t","currentBlock","totalCakeInVault","performanceFee","fees","stakingToken","earningToken","totalStaked","startBlock","endBlock","stakingLimit","contractAddress","sousId","isAutoVault","tokenAddress","address","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","window","ethereum","isMetaMask","isManualCakePool","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","placement","targetRef","tooltip","tooltipVisible","getTotalStakedBalance","decimals","manualCakeTotalMinusAutoVault","minus","symbol","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","gte","gt","projectLink","memo"],"mappings":"oMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,gBAAT,CAA2BC,qBAA3B,KAAwD,qBAAxD,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OACEC,IADF,CAEEC,YAFF,CAGEC,IAHF,CAIEC,WAJF,CAKEC,YALF,CAMEC,SANF,CAOEC,QAPF,CAQEC,UARF,CASEC,MATF,CAUEC,IAVF,CAWEC,QAXF,KAYO,oBAZP,CAaA,OAASC,iBAAT,CAA4BC,QAA5B,KAA4C,QAA5C,CACA,OAASC,QAAT,CAAmBC,YAAnB,KAAuC,aAAvC,CAEA,OAASC,UAAT,CAAqBC,mBAArB,KAAgD,sBAAhD,CACA,OAASC,aAAT,KAA8B,cAA9B,CACA,OAASC,2BAAT,KAA4C,eAA5C,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,OAASC,gBAAT,KAAiC,qBAAjC,C,6IAOA,GAAMC,CAAAA,eAAe,CAAGzB,MAAM,CAACI,IAAD,CAAT,sHAArB,CAOA,GAAMsB,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAAuB,yBAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAC3E,oBAAczB,cAAc,EAA5B,CAAQ0B,CAAR,iBAAQA,CAAR,CACA,cAAyBZ,QAAQ,EAAjC,CAAQa,YAAR,WAAQA,YAAR,CACA,kBAGIZ,YAAY,EAHhB,CACEa,gBADF,eACEA,gBADF,CAEUC,cAFV,eAEEC,IAFF,CAEUD,cAFV,CAKA,GACEE,CAAAA,YADF,CAUIP,IAVJ,CACEO,YADF,CAEEC,YAFF,CAUIR,IAVJ,CAEEQ,YAFF,CAGEC,WAHF,CAUIT,IAVJ,CAGES,WAHF,CAIEC,UAJF,CAUIV,IAVJ,CAIEU,UAJF,CAKEC,QALF,CAUIX,IAVJ,CAKEW,QALF,CAMEC,YANF,CAUIZ,IAVJ,CAMEY,YANF,CAOEC,eAPF,CAUIb,IAVJ,CAOEa,eAPF,CAQEC,MARF,CAUId,IAVJ,CAQEc,MARF,CASEC,WATF,CAUIf,IAVJ,CASEe,WATF,CAYA,GAAMC,CAAAA,YAAY,CAAGR,YAAY,CAACS,OAAb,CAAuBzB,UAAU,CAACgB,YAAY,CAACS,OAAd,CAAjC,CAA0D,EAA/E,CACA,GAAMC,CAAAA,mBAAmB,CAAG1B,UAAU,CAACqB,eAAD,CAAtC,CACA,GAAMM,CAAAA,wBAAwB,CAAG1B,mBAAmB,EAApD,CACA,GAAM2B,CAAAA,QAAQ,WAAM/B,QAAN,2BAAgC2B,YAAhC,QAAd,CACA,GAAMK,CAAAA,iBAAiB,CAAG,CAAC,oBAACC,MAAM,CAACC,QAAR,2CAAC,iBAAiBC,UAAlB,CAA3B,CACA,GAAMC,CAAAA,gBAAgB,CAAGX,MAAM,GAAK,CAApC,CAEA,sBACEjB,gBAAgB,CAACG,IAAD,CAAOG,YAAP,CADlB,CAAQuB,wBAAR,mBAAQA,wBAAR,CAAkCC,gBAAlC,mBAAkCA,gBAAlC,CAAoDC,eAApD,mBAAoDA,eAApD,CAAqEC,cAArE,mBAAqEA,cAArE,CAAqFC,eAArF,mBAAqFA,eAArF,CAGA,gBAA+C9C,UAAU,CACvDkB,CAAC,CAAC,8DAAD,CADsD,CAEvD,CAAE6B,SAAS,CAAE,cAAb,CAFuD,CAAzD,CAAQC,SAAR,aAAQA,SAAR,CAAmBC,OAAnB,aAAmBA,OAAnB,CAA4BC,cAA5B,aAA4BA,cAA5B,CAKA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClC,GAAIpB,WAAJ,CAAiB,CACf,MAAOzC,CAAAA,gBAAgB,CAAC8B,gBAAD,CAAmBG,YAAY,CAAC6B,QAAhC,CAAvB,CACD,CACD,GAAIX,gBAAJ,CAAsB,CACpB,GAAMY,CAAAA,6BAA6B,CAAG,GAAIjE,CAAAA,SAAJ,CAAcqC,WAAd,EAA2B6B,KAA3B,CAAiClC,gBAAjC,CAAtC,CACA,MAAO9B,CAAAA,gBAAgB,CAAC+D,6BAAD,CAAgC9B,YAAY,CAAC6B,QAA7C,CAAvB,CACD,CACD,MAAO9D,CAAAA,gBAAgB,CAACmC,WAAD,CAAcF,YAAY,CAAC6B,QAA3B,CAAvB,CACD,CATD,CAWA,iBAIIpD,UAAU,CAACkB,CAAC,CAAC,8CAAD,CAAiD,CAAEqC,MAAM,CAAEhC,YAAY,CAACgC,MAAvB,CAAjD,CAAF,CAAqF,CACjGR,SAAS,CAAE,QADsF,CAArF,CAJd,CACaS,oBADb,cACER,SADF,CAEWS,kBAFX,cAEER,OAFF,CAGkBS,yBAHlB,cAGER,cAHF,CAQA,mBACE,MAAC,eAAD,EAAiB,aAAa,CAAC,QAA/B,wBACE,MAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,eAA9B,CAA8C,UAAU,CAAC,QAAzD,wBACE,MAAC,IAAD,EAAM,KAAK,KAAX,WAAahC,CAAC,CAAC,cAAD,CAAd,OADF,cAEE,MAAC,IAAD,EAAM,UAAU,CAAC,YAAjB,WACGO,WAAW,EAAIA,WAAW,CAACkC,GAAZ,CAAgB,CAAhB,CAAf,cACC,wCACE,KAAC,OAAD,EAAS,KAAK,KAAd,CAAe,KAAK,CAAER,qBAAqB,EAA3C,CAA+C,QAAQ,CAAE,CAAzD,CAA4D,IAAI,YAAM5B,YAAY,CAACgC,MAAnB,CAAhE,EADF,cAEE,aAAM,GAAG,CAAEC,oBAAX,uBACE,KAAC,QAAD,EAAU,KAAK,CAAC,YAAhB,CAA6B,KAAK,CAAC,MAAnC,CAA0C,EAAE,CAAC,KAA7C,CAAmD,EAAE,CAAC,KAAtD,EADF,EAFF,GADD,cAQC,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,MAA9B,EATJ,CAWGE,yBAAyB,EAAID,kBAXhC,GAFF,GADF,CAiBG7B,YAAY,EAAIA,YAAY,CAACgC,EAAb,CAAgB,CAAhB,CAAhB,eACC,MAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,eAA9B,wBACE,MAAC,IAAD,EAAM,KAAK,KAAX,WAAa1C,CAAC,CAAC,qBAAD,CAAd,OADF,cAEE,KAAC,IAAD,EAAM,KAAK,KAAX,oBAAgB3B,qBAAqB,CAACqC,YAAD,CAAeL,YAAY,CAAC6B,QAA5B,CAAsC,CAAtC,CAArC,aAAiF7B,YAAY,CAACgC,MAA9F,GAFF,GAlBJ,CAuBGb,wBAAwB,eACvB,MAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,eAA9B,CAA8C,UAAU,CAAC,QAAzD,wBACE,MAAC,IAAD,EAAM,KAAK,KAAX,WAAaG,cAAc,CAAG3B,CAAC,CAAC,SAAD,CAAJ,CAAkBA,CAAC,CAAC,WAAD,CAA9C,OADF,CAEG0B,eAAe,EAAID,gBAAnB,cACC,KAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,uBACE,MAAC,IAAD,EAAM,QAAQ,KAAd,CAAe,IAAI,CAAEhC,2BAA2B,CAACkC,cAAc,CAAGlB,QAAH,CAAcD,UAA7B,CAAhD,wBACE,KAAC,OAAD,EAAS,KAAK,KAAd,CAAe,KAAK,CAAEoB,eAAtB,CAAuC,QAAQ,CAAE,CAAjD,CAAoD,KAAK,CAAC,SAA1D,EADF,cAEE,KAAC,IAAD,EAAM,KAAK,KAAX,CAAY,EAAE,CAAC,KAAf,CAAqB,KAAK,CAAC,SAA3B,CAAqC,aAAa,CAAC,WAAnD,UACG5B,CAAC,CAAC,QAAD,CADJ,EAFF,cAKE,KAAC,SAAD,EAAW,EAAE,CAAC,KAAd,CAAoB,KAAK,CAAC,SAA1B,EALF,GADF,EADD,cAWC,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,MAA9B,EAbJ,GAxBJ,CAyCGa,WAAW,eACV,MAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,eAA9B,CAA8C,UAAU,CAAC,QAAzD,WACGmB,cAAc,EAAID,OADrB,cAEE,KAAC,WAAD,EAAa,GAAG,CAAED,SAAlB,CAA6B,KAAK,KAAlC,UACG9B,CAAC,CAAC,iBAAD,CADJ,EAFF,cAKE,KAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,uBACE,MAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,KAAK,KAApB,WACGG,cAAc,CAAG,GADpB,OADF,EALF,GA1CJ,cAsDE,KAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,UAA9B,uBACE,KAAC,YAAD,EAAc,IAAI,0CAAoCb,UAAU,CAACgB,YAAY,CAACS,OAAd,CAA9C,CAAlB,CAA0F,IAAI,CAAE,KAAhG,CAAuG,KAAK,KAA5G,UACGf,CAAC,CAAC,gBAAD,CADJ,EADF,EAtDF,cA2DE,KAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,UAA9B,uBACE,KAAC,YAAD,EAAc,IAAI,CAAEM,YAAY,CAACqC,WAAjC,CAA8C,IAAI,CAAE,KAApD,CAA2D,KAAK,KAAhE,UACG3C,CAAC,CAAC,mBAAD,CADJ,EADF,EA3DF,CAgEGgB,mBAAmB,eAClB,KAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,UAA9B,uBACE,KAAC,YAAD,EACE,IAAI,WAAK9B,iBAAL,qBAAkC2B,WAAW,CAAGI,wBAAH,CAA8BD,mBAA3E,CADN,CAEE,IAAI,CAAE,KAFR,CAGE,KAAK,KAHP,UAKGhB,CAAC,CAAC,eAAD,CALJ,EADF,EAjEJ,CA2EGD,OAAO,EAAIoB,iBAAX,EAAgCL,YAAhC,eACC,KAAC,IAAD,EAAM,cAAc,CAAC,UAArB,uBACE,MAAC,MAAD,EACE,OAAO,CAAC,MADV,CAEE,CAAC,CAAC,GAFJ,CAGE,MAAM,CAAC,MAHT,CAIE,OAAO,CAAE,yBAAMtB,CAAAA,aAAa,CAACsB,YAAD,CAAeR,YAAY,CAAC+B,MAA5B,CAAoC/B,YAAY,CAAC4B,QAAjD,CAA2DhB,QAA3D,CAAnB,EAJX,wBAME,KAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,QAAQ,CAAC,MAA/B,UACGlB,CAAC,CAAC,iBAAD,CADJ,EANF,cASE,KAAC,YAAD,EAAc,EAAE,CAAC,KAAjB,EATF,GADF,EA5EJ,GADF,CA6FD,CAnJD,CAqJA,2BAAe/B,KAAK,CAAC2E,IAAN,CAAW/C,cAAX,CAAf","sourcesContent":["import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n"]},"metadata":{},"sourceType":"module"}