{"version":3,"sources":["state/lottery/helpers.ts","components/UnlockButton.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/tokens.ts","hooks/useRefresh.ts","state/lottery/index.ts","utils/bscscan.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Tags.tsx","utils/web3React.ts","hooks/useAuth.ts","utils/getRpcUrl.ts","utils/wallet.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","config/constants/campaigns.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","state/pools/helpers.ts","components/Layout/Container.tsx","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","config/constants/contracts.ts","utils/addressHelpers.ts","components/TokenPairImage/index.tsx","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/RefreshContext.tsx","contexts/ThemeContext.tsx","hooks/usePersistState.ts","utils/bigNumber.ts","utils/achievements.ts","utils/latinise.ts","utils/formatBalance.ts","state/predictions/index.ts","hooks/useLastUpdated.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","config/constants/types.ts","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","hooks/usePreviousValue.ts","routerHistory.ts","components/PageHeader/PageHeader.tsx","state/hooks.ts","utils/farmHelpers.ts","components/Balance.tsx","components/Layout/Flex.tsx","components/Select/Select.tsx","hooks/useDelayedUnmount.ts","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","utils/contractHelpers.ts","config/index.ts","utils/multicall.ts","state/types.ts","state/index.ts","views/Pools/helpers.tsx","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","hooks/useContract.ts","state/predictions/helpers.ts","state/predictions/queries.ts","hooks/useWeb3Provider.ts","state/actions.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","config/constants/endpoints.ts","config/localization/languages.ts","hooks/useTheme.ts","utils/compoundApyHelpers.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx","config/constants/nfts.ts","config/constants/farms.ts"],"names":["lotteryContract","getLotteryV2Contract","fetchLottery","lotteryId","a","viewLottery","lotteryData","status","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","Object","keys","LotteryStatus","serializedCakePerBracket","map","cakeInBracket","ethersToSerializedBigNumber","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","isLoading","toString","PENDING","fetchCurrentLotteryIdAndMaxBuy","calls","method","address","getLotteryV2Address","name","multicallv2","lotteryV2Abi","currentLotteryId","maxNumberTicketsPerBuyOrClaim","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","length","ticketId","index","id","number","getViewUserTicketInfoCalls","totalTicketsToRequest","account","cursor","i","push","params","mergeViewUserTicketInfoMulticallResponse","response","mergedMulticallResponse","forEach","ticketResponse","fetchTickets","userRoundData","parseInt","totalTickets","requireSuccess","multicallRes","filteredForNullResponses","filter","res","completeTicketData","console","error","getGraphLotteries","request","GRAPH_API_LOTTERY","gql","lotteries","getGraphLotteryUser","toLowerCase","user","blankUser","totalCake","rounds","formattedUser","round","lottery","claimed","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","useMemo","BigNumber","userTickets","UnlockButton","props","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","priceHelperLps","pid","lpSymbol","lpAddresses","token","tokens","qsd","quoteToken","wbnb","fetchFarm","farm","lpAddress","getAddress","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","farmConfig","data","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","symbol","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","allowance","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","state","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","userDataEl","findIndex","actions","bnb","projectLink","cake","decimals","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","isTransitioning","currentRound","tickets","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userLotteries","fetchPastLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","getBscScanAddressUrl","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","estimateGas","contract","methodName","methodArgs","gasMarginPer10000","Error","rawGasEstimation","gasEstimation","mul","ethers","from","add","callWithEstimateGas","gasLimit","tx","options","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","amount","value","DEFAULT_TOKEN_DECIMAL","enterStaking","wait","receipt","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","pools","pool","sousId","isFinished","undefined","simpleRpcProvider","getBlockNumber","blockNumber","startBlockCalls","contractAddress","endBlockCalls","sousChefV2","startBlocks","endBlocks","reduce","accum","poolCheck","startBlock","endBlock","gte","lte","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","chainId","process","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","library","providers","Web3Provider","signMessage","message","window","BinanceChain","bnbSign","signature","wc","wcMessage","utils","hexlify","toUtf8Bytes","signPersonalMessage","getSigner","dispatch","useAppDispatch","useWeb3React","activate","deactivate","toastError","useToast","useCallback","connectorID","connector","UnsupportedChainIdError","setupNetwork","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","profileClear","getItem","close","nodes","sample","ethereum","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenImage","type","image","tokenAdded","ToastsContext","createContext","ToastsProvider","children","useState","toasts","setToasts","toast","title","description","prevToasts","kebabCase","currentToasts","prevToast","Provider","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","ToastListener","onRemove","campaigns","badge","campaignMap","Map","campaign","set","teams","images","lg","md","sm","alt","ipfs","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","toNumber","getTeams","teamsById","team","numberTeams","nbTeams","getPancakeProfileAddress","profileABI","teamData","onChainTeamData","transformUserData","stakingTokenBalance","pendingReward","transformPool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","Container","px","maxWidth","LS_KEY","fetchLocale","locale","fetch","json","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","languages","setState","useEffect","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext","DEFAULT_META","StyledPage","styled","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","gt","toLocaleString","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","getIdentifierKeyFromAddress","nftAddress","nftSource","values","nftSources","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","startsWith","IPFS_GATEWAY","slice","getAddressByType","getTokenUriData","tokenId","getErc721Contract","tokenURI","uriDataResponse","ok","uriData","getNftByTokenId","Nfts","nft","identifier","ChainId","MAINNET","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","pending","association","Grid","GridItem","GridHeaderItem","BulletList","ul","colors","textSubtle","ApyCalculatorModal","onDismiss","tokenPrice","apr","displayApr","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","performanceFee","isFarm","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","mb","justifyContent","small","toFixed","fontSize","bold","textTransform","textAlign","ml","num","getRoi","amountEarned","amountInvested","style","p","display","freq","mt","fee","href","getUserPointIncreaseEvents","GRAPH_API_PROFILE","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","Number","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","preferredFarm","some","React","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","CACHE_KEY","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","BIG_NINE","ethersBn","ethersToBigNumber","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","input","x","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","displayDecimals","formatNumber","minPrecision","maxPrecision","formatBigNumber","remainder","mod","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","BLOCK_PADDING","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","rewardRate","lastOraclePrice","history","ledgers","claimableStatuses","initializePredictions","getPredictionData","marketData","epochs","range","getRoundsData","roundsResponse","initialRoundData","roundResponse","reduxNodeRound","serializePredictionsRoundsResponse","epoch","initializedData","getLedgerData","ledgerResponses","getClaimStatuses","makeLedgerData","fetchRound","predictionContract","getPredictionsContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","getBetHistory","bets","transformBetResponse","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","bet","newestRound","maxBy","futureRound","makeFutureRoundResponse","futureRounds","makeRoundData","rejected","useLastUpdated","Date","now","lastUpdated","setStateLastUpdated","previousLastUpdated","usePreviousValue","setLastUpdated","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","PoolIds","PoolCategory","NftType","getProposals","first","skip","ProposalState","ACTIVE","SNAPSHOT_API","proposals","getProposal","proposal","getVotes","where","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","SNAPSHOT_VOTING_API","headers","body","statusText","isValid","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","VotingStateLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","getState","proposalVotes","voting","results","votingSlice","_inValid","LOADING","IDLE","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","CAKE_PER_YEAR","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","ref","createBrowserHistory","Outer","Box","gradients","bubblegum","Inner","PageHeader","usePollFarmsData","includeArchive","farmToFetch","usePollCoreFarmData","usePollBlockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useFetchProfile","fetchProfile","useProfile","profile","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","cakeBnbFarm","useBlock","useInitialBlock","useGetSortedRounds","roundData","predictions","parseBigNumberObj","useGetRounds","orderBy","useGetBetByEpoch","useGetIsClaimable","useGetEarliestEpoch","earliestRound","minBy","useIsHistoryPaneOpen","useIsChartPaneOpen","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetRewardRate","useGetIsFetchingHistory","useGetHistoryByAccount","useGetLastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","useGetProposals","useGetProposal","useGetVotes","useGetVotingStateLoadingStatus","useGetProposalLoadingStatus","useGetCurrentLotteryId","useGetUserLotteriesGraphData","useGetUserLotteryGraphRoundById","userRound","useGetLotteriesGraphData","useGetLotteryGraphDataById","useFetchLottery","useLottery","processedCurrentRound","maxNumberTicketsPerBuyOrClaimAsString","Balance","isDisabled","unit","prefix","previousValue","start","end","duration","separator","FlexLayout","DropDownHeader","shadows","inset","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ListItem","li","Select","onChange","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","event","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","label","option","selectedIndex","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","cardBorder","text","primary","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","getContract","abi","signer","signerOrProvider","Contract","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","poolCategory","BINANCE","sousChefBnb","sousChef","getSouschefV2Contract","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","multi","itf","Interface","calldata","call","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tryAggregate","result","BetPosition","SnapshotCommand","ProposalType","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","votingReducer","lotteryReducer","useDispatch","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","ViewMode","_binanceChainListener","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","icon","items","Menu","useTheme","currentLang","code","langs","languageList","setLang","links","username","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","AprRow","stakingToken","earningToken","tooltipContent","useTooltip","placement","targetRef","tooltipVisible","earningsPercentageToDisplay","apyModalLink","useModal","onPresentApyModal","alignItems","scale","PromotedGradient","keyframes","StyledCard","Card","isPromoted","isDesktop","StyledCardInner","radii","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","flexDirection","manualCakeTotalMinusAutoVault","getTotalStakedBalance","external","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","useSousChef","handleApprove","approve","constants","MaxUint256","updateUserAllowance","useVaultApprove","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","currentAllowance","checkApprovalStatus","ApprovalAction","stakingTokenContract","useERC20","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","StyledButton","Button","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","useMasterchef","handleStake","updateUserStakedBalance","updateUserBalance","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","updateUserPendingReward","onUnstake","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","minWidth","src","onUserInput","convertedInput","percentage","min","currencyValue","isWarning","onValueChanged","valueLabel","step","parseFloat","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","Text","CardActions","harvest","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","url","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","stakedOnlySwitch","checked","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","fontWeight","onPresentBountyModal","ButtonText","xs","HelpButton","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","showStakedTag","subtitle","showSubtitle","role","HelpIconWrapper","EarningsCell","labelText","asset","Apr","showIcon","openRoiModal","padding","marginLeft","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","flex","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","SearchSortContainer","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","App","Global","exact","component","iterations","Providers","ReactDOM","render","StrictMode","getElementById","useIfoV1Contract","useWeb3Provider","useIfoV2Contract","useERC721","useBunnyFactory","useLotteryV2Contract","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useSpecialBunnyCakeVaultContract","useSpecialBunnyPredictionContract","Result","numberOrNull","valueNum","betResponse","hash","position","BULL","BEAR","claimedHash","totalBets","totalBNB","transformRoundResponse","positionResponse","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","transformTotalWonResponse","marketResponse","houseRounds","totalBNBTreasury","getRoundResult","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getTotalWon","GRAPH_API_PREDICTION","HOUSE","market","ledgerCalls","claimableCalls","claimableResponses","claimableResponse","claimable","staticCalls","paused","PAUSED","rewardBaseCalAmount","rewardAmount","oracleCalled","ledgerResponse","eq","serializePredictionsLedgerResponse","refEth","setprovider","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","fetchVaultUser","userContractResponse","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","CORE","sortOrder","toastContext","RPC_URL","getRpcUrl","JsonRpcProvider","SNAPSHOT_BASE_URL","SNAPSHOT_HUB_API","StyledThemeContext","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","transformProfileResponse","profileResponse","userId","getUsername","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","PANCAKE","MIXIE","variationId","video","webm","mp4","blur"],"mappings":"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","file":"static/js/main.1027c9e9.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { request, gql } from 'graphql-request'\nimport { ethers } from 'ethers'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport {\n  LotteryUserGraphEntity,\n  LotteryRoundGraphEntity,\n  LotteryRound,\n  UserTicketsResponse,\n  UserRound,\n  LotteryRoundUserTickets,\n  LotteryResponse,\n} from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    const {\n      status,\n      startTime,\n      endTime,\n      priceTicketInCake,\n      discountDivisor,\n      treasuryFee,\n      firstTicketId,\n      lastTicketId,\n      amountCollectedInCake,\n      finalNumber,\n      cakePerBracket,\n      countWinnersPerBracket,\n      rewardsBreakdown,\n    } = lotteryData\n\n    const statusKey = Object.keys(LotteryStatus)[status]\n    const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n    const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n      ethersToSerializedBigNumber(winnersInBracket),\n    )\n    const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n    return {\n      isLoading: false,\n      status: LotteryStatus[statusKey],\n      startTime: startTime?.toString(),\n      endTime: endTime?.toString(),\n      priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n      discountDivisor: discountDivisor?.toString(),\n      treasuryFee: treasuryFee?.toString(),\n      firstTicketId: firstTicketId?.toString(),\n      lastTicketId: lastTicketId?.toString(),\n      amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n      finalNumber,\n      cakePerBracket: serializedCakePerBracket,\n      countWinnersPerBracket: serializedCountWinnersPerBracket,\n      rewardsBreakdown: serializedRewardsBreakdown,\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      status: LotteryStatus.PENDING,\n      startTime: '',\n      endTime: '',\n      priceTicketInCake: '',\n      discountDivisor: '',\n      treasuryFee: '',\n      firstTicketId: '',\n      lastTicketId: '',\n      amountCollectedInCake: '',\n      finalNumber: null,\n      cakePerBracket: [],\n      countWinnersPerBracket: [],\n      rewardsBreakdown: [],\n    }\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const getViewUserTicketInfoCalls = (totalTicketsToRequest: number, account: string, lotteryId: string) => {\n  let cursor = 0\n  const perRequestLimit = 1000\n  const calls = []\n\n  for (let i = 0; i < totalTicketsToRequest; i += perRequestLimit) {\n    cursor = i\n    calls.push({\n      name: 'viewUserInfoForLotteryId',\n      address: getLotteryV2Address(),\n      params: [account, lotteryId, cursor, perRequestLimit],\n    })\n  }\n  return calls\n}\n\nexport const mergeViewUserTicketInfoMulticallResponse = (response) => {\n  const mergedMulticallResponse: UserTicketsResponse = [[], [], []]\n\n  response.forEach((ticketResponse) => {\n    mergedMulticallResponse[0].push(...ticketResponse[0])\n    mergedMulticallResponse[1].push(...ticketResponse[1])\n    mergedMulticallResponse[2].push(...ticketResponse[2])\n  })\n\n  return mergedMulticallResponse\n}\n\nexport const fetchTickets = async (\n  account: string,\n  lotteryId: string,\n  userRoundData?: UserRound,\n): Promise<LotteryTicket[]> => {\n  // If the subgraph is returning user totalTickets data for the round - use those totalTickets, if not - batch request up to 5000\n  const totalTicketsToRequest = userRoundData ? parseInt(userRoundData?.totalTickets, 10) : 5000\n  const calls = getViewUserTicketInfoCalls(totalTicketsToRequest, account, lotteryId)\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    // When using a static totalTicketsToRequest value - null responses may be returned\n    const filteredForNullResponses = multicallRes.filter((res) => res)\n    const mergedMulticallResponse = mergeViewUserTicketInfoMulticallResponse(filteredForNullResponses)\n    const completeTicketData = processRawTicketsResponse(mergedMulticallResponse)\n    return completeTicketData\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport const getGraphLotteries = async (): Promise<LotteryRoundGraphEntity[]> => {\n  const response = await request(\n    GRAPH_API_LOTTERY,\n    gql`\n      query getLotteries {\n        lotteries(first: 100, orderDirection: desc, orderBy: block) {\n          id\n          totalUsers\n          totalTickets\n          status\n          finalNumber\n          winningTickets\n          startTime\n          endTime\n          ticketPrice\n          firstTicket\n          lastTicket\n        }\n      }\n    `,\n  )\n\n  const { lotteries } = response\n  return lotteries\n}\n\nexport const getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  const response = await request(\n    GRAPH_API_LOTTERY,\n    gql`\n      query getUserLotteryData($account: ID!) {\n        user(id: $account) {\n          id\n          totalTickets\n          totalCake\n          rounds(first: 100, orderDirection: desc, orderBy: block) {\n            id\n            lottery {\n              id\n              endTime\n              status\n            }\n            claimed\n            totalTickets\n          }\n        }\n      }\n    `,\n    { account: account.toLowerCase() },\n  )\n  const { user } = response\n\n  // If no subgraph response - return blank user\n  if (!response || !user) {\n    const blankUser = {\n      account,\n      totalCake: '',\n      totalTickets: '',\n      rounds: [],\n    }\n\n    return blankUser\n  }\n\n  const formattedUser = user && {\n    account: user.id,\n    totalCake: user.totalCake,\n    totalTickets: user.totalTickets,\n    rounds: user.rounds.map((round) => {\n      return {\n        lotteryId: round?.lottery?.id,\n        endTime: round?.lottery?.endTime,\n        claimed: round?.claimed,\n        totalTickets: round?.totalTickets,\n        status: round?.lottery?.status,\n      }\n    }),\n  }\n\n  return formattedUser\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n}\n\nexport default tokens\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport {\n  getGraphLotteries,\n  getGraphLotteryUser,\n  fetchLottery,\n  fetchCurrentLotteryIdAndMaxBuy,\n  fetchTickets,\n} from './helpers'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; lotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, lotteryId }) => {\n  const userLotteriesRes = await getGraphLotteryUser(account)\n  const userRoundData = userLotteriesRes.rounds?.find((round) => round.lotteryId === lotteryId)\n  const userTickets = await fetchTickets(account, lotteryId, userRoundData)\n\n  // user has not bought tickets for the current lottery\n  if (userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPastLotteries = createAsyncThunk<LotteryRoundGraphEntity[]>(\n  'lottery/fetchPastLotteries',\n  async () => {\n    const lotteries = await getGraphLotteries()\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<LotteryUserGraphEntity, { account: string }>(\n  'lottery/fetchUserLotteries',\n  async ({ account }) => {\n    const userLotteries = await getGraphLotteryUser(account)\n    return userLotteries\n  },\n)\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPastLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'ToucanSwap',\n  description:\n    '',\n  image: 'https://Pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('ToucanSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('ToucanSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('ToucanSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('ToucanSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('ToucanSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('ToucanSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('ToucanSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('ToucanSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('ToucanSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('ToucanSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('ToucanSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\nexport default TokenPairImage\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from './Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { ethers } from 'ethers'\nimport { minBy, orderBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport {\n  State,\n  Farm,\n  Pool,\n  ProfileState,\n  TeamsState,\n  AchievementState,\n  FarmsState,\n  NodeRound,\n  ReduxNodeLedger,\n  NodeLedger,\n  ReduxNodeRound,\n} from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { parseBigNumberObj } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\nimport { fetchCurrentLotteryId, fetchCurrentLottery, fetchUserTicketsAndLotteries, fetchPastLotteries } from './lottery'\nimport { useProcessLotteryResponse } from './lottery/helpers'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useGetRounds = () => {\n  const rounds = useSelector((state: State) => state.predictions.rounds)\n  return Object.keys(rounds).reduce((accum, epoch) => {\n    return {\n      ...accum,\n      [epoch]: parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch]),\n    }\n  }, {}) as { [key: string]: NodeRound }\n}\n\nexport const useGetRound = (epoch: number) => {\n  const round = useSelector((state: State) => state.predictions.rounds[epoch])\n  return parseBigNumberObj<ReduxNodeRound, NodeRound>(round)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetBetByEpoch = (account: string, epoch: number) => {\n  const bets = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][epoch]) {\n    return null\n  }\n\n  return parseBigNumberObj<ReduxNodeLedger, NodeLedger>(bets[account][epoch])\n}\n\nexport const useGetIsClaimable = (epoch) => {\n  const claimableStatuses = useSelector((state: State) => state.predictions.claimableStatuses)\n  return claimableStatuses[epoch] || false\n}\n\n/**\n * Used to get the range of rounds to poll for\n */\nexport const useGetEarliestEpoch = () => {\n  return useSelector((state: State) => {\n    const earliestRound = minBy(Object.values(state.predictions.rounds), 'epoch')\n    return earliestRound?.epoch\n  })\n}\n\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => ethers.BigNumber.from(minBetAmount), [minBetAmount])\n}\n\nexport const useGetRewardRate = () => {\n  const rewardRate = useSelector((state: State) => state.predictions.rewardRate)\n  return rewardRate / 100\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetLedgerByRoundId = (account: string, roundId: string) => {\n  const ledgers = useSelector((state: State) => state.predictions.ledgers)\n\n  if (!ledgers[account]) {\n    return null\n  }\n\n  if (!ledgers[account][roundId]) {\n    return null\n  }\n\n  return ledgers[account][roundId]\n}\n\nexport const useGetLastOraclePrice = () => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return useMemo(() => {\n    return ethers.BigNumber.from(lastOraclePrice)\n  }, [lastOraclePrice])\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n\n// Voting\nexport const useGetProposals = () => {\n  const proposals = useSelector((state: State) => state.voting.proposals)\n  return Object.values(proposals)\n}\n\nexport const useGetProposal = (proposalId: string) => {\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\n  return proposal\n}\n\nexport const useGetVotes = (proposalId: string) => {\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\n}\n\nexport const useGetVotingStateLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\n  return votingStatus\n}\n\nexport const useGetProposalLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\n  return votingStatus\n}\n\n// Lottery\nexport const useGetCurrentLotteryId = () => {\n  return useSelector((state: State) => state.lottery.currentLotteryId)\n}\n\nexport const useGetUserLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.userLotteryData)\n}\n\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\n  const userLotteriesData = useGetUserLotteriesGraphData()\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\n}\n\nexport const useGetLotteriesGraphData = () => {\n  return useSelector((state: State) => state.lottery.lotteriesData)\n}\n\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\n  const lotteriesData = useGetLotteriesGraphData()\n  return lotteriesData.find((lottery) => lottery.id === lotteryId)\n}\n\nexport const useFetchLottery = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const currentLotteryId = useGetCurrentLotteryId()\n\n  useEffect(() => {\n    // get current lottery ID, max tickets and historical lottery subgraph data\n    dispatch(fetchCurrentLotteryId())\n    dispatch(fetchPastLotteries())\n  }, [dispatch])\n\n  useEffect(() => {\n    // get public data for current lottery\n    if (currentLotteryId) {\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, fastRefresh])\n\n  useEffect(() => {\n    // get user tickets for current lottery, and user lottery subgraph data\n    if (account && currentLotteryId) {\n      dispatch(fetchUserTicketsAndLotteries({ account, lotteryId: currentLotteryId }))\n    }\n  }, [dispatch, currentLotteryId, account])\n}\n\nexport const useLottery = () => {\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\n  const processedCurrentRound = useProcessLotteryResponse(currentRound)\n\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\n\n  const currentLotteryId = useGetCurrentLotteryId()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const lotteriesData = useGetLotteriesGraphData()\n\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\n  )\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\n\n  return {\n    currentLotteryId,\n    maxNumberTicketsPerBuyOrClaim,\n    isTransitioning,\n    userLotteryData,\n    lotteriesData,\n    currentRound: processedCurrentRound,\n  }\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport { ChainLinkOracleContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 19 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://toco.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.toco.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  winningTickets: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n  firstTicket: string\n  lastTicket: string\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  totalTickets: string\n  status: LotteryStatus\n  endTime: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: 'https://exchange.pancakeswap.finance/#/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: 'https://exchange.pancakeswap.finance/#/pool',\n      },\n      {\n        label: t('LP Migration'),\n        href: 'https://v1exchange.pancakeswap.finance/#/migrate',\n      },\n    ],\n  },\n  {\n    label: t('TOCO Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('TOCO Nests'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Hatchery (COMING SOON!)'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Info'),\n    icon: 'InfoIcon',\n    href: 'https://pancakeswap.info',\n  },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Contact'),\n        href: 'https://docs.pancakeswap.finance/contact-us',\n      },\n      {\n        label: t('Github'),\n        href: 'https://github.com/pancakeswap',\n      },\n      {\n        label: t('Docs'),\n        href: 'https://docs.pancakeswap.finance',\n      },\n      {\n        label: t('Blog'),\n        href: 'https://pancakeswap.medium.com',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address && `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${getAddress(stakingToken.address)}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningToken={tokens.cake}\n          stakingToken={tokens.cake}\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}`}>\n        {t('Live')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Finished')}\n        </ButtonMenuItem>\n      </NotificationDot>\n    </ButtonMenu>\n  )\n\n  const stakedOnlySwitch = (\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n    </Flex>\n  )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex width=\"100%\" justifyContent=\"space-between\">\n          {viewModeToggle}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {stakedOnlySwitch}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {viewModeToggle}\n      {liveOrFinishedSwitch}\n      {stakedOnlySwitch}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport TokenPairImage from 'components/TokenPairImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address && `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${getAddress(stakingToken.address)}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\n  flex-direction: column;\n  margin-bottom: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('TOCO Nests')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Sustainably High Yields Brought to You by the Toucans.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('The First BSC Yield Farm Powered By Proprietary AI Algorithms.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls justifyContent=\"space-between\">\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <SearchSortContainer>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </Flex>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <ControlStretch>\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n              </ControlStretch>\n            </Flex>\n          </SearchSortContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { useMemo } from 'react'\nimport useWeb3Provider from 'hooks/useWeb3Provider'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getIfoV1Contract(address, provider.getSigner()), [address, provider])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getIfoV2Contract(address, provider.getSigner()), [address, provider])\n}\n\nexport const useERC20 = (address: string) => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getBep20Contract(address, provider.getSigner()), [address, provider])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getErc721Contract(address, provider.getSigner()), [address, provider])\n}\n\nexport const useCake = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getCakeContract(provider.getSigner()), [provider])\n}\n\nexport const useBunnyFactory = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getBunnyFactoryContract(provider.getSigner()), [provider])\n}\n\nexport const usePancakeRabbits = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getPancakeRabbitContract(provider.getSigner()), [provider])\n}\n\nexport const useProfile = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getProfileContract(provider.getSigner()), [provider])\n}\n\nexport const useLotteryV2Contract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getLotteryV2Contract(provider.getSigner()), [provider])\n}\n\nexport const useMasterchef = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getMasterchefContract(provider.getSigner()), [provider])\n}\n\nexport const useSousChef = (id) => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getSouschefContract(id, provider.getSigner()), [id, provider])\n}\n\nexport const useSousChefV2 = (id) => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getSouschefV2Contract(id, provider.getSigner()), [id, provider])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getPointCenterIfoContract(provider.getSigner()), [provider])\n}\n\nexport const useBunnySpecialContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getBunnySpecialContract(provider.getSigner()), [provider])\n}\n\nexport const useClaimRefundContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getClaimRefundContract(provider.getSigner()), [provider])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getTradingCompetitionContract(provider.getSigner()), [provider])\n}\n\nexport const useEasterNftContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getEasterNftContract(provider.getSigner()), [provider])\n}\n\nexport const useCakeVaultContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getCakeVaultContract(provider.getSigner()), [provider])\n}\n\nexport const usePredictionsContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getPredictionsContract(provider.getSigner()), [provider])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getChainlinkOracleContract(provider.getSigner()), [provider])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getBunnySpecialCakeVaultContract(provider.getSigner()), [provider])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const provider = useWeb3Provider()\n  return useMemo(() => getBunnySpecialPredictionContract(provider.getSigner()), [provider])\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { useEffect, useState, useRef } from 'react'\nimport { ethers } from 'ethers'\nimport { useWeb3React } from '@web3-react/core'\nimport { simpleRpcProvider } from 'utils/providers'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3Provider = (): ethers.providers.JsonRpcProvider | ethers.providers.Web3Provider => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return provider\n}\n\nexport default useWeb3Provider\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 197,\n    stakingToken: tokens.cake,\n    earningToken: tokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4286',\n  },\n  {\n    sousId: 196,\n    stakingToken: tokens.cake,\n    earningToken: tokens.titan,\n    contractAddress: {\n      97: '',\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 195,\n    stakingToken: tokens.cake,\n    earningToken: tokens.harmony,\n    contractAddress: {\n      97: '',\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.0092',\n  },\n  {\n    sousId: 194,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mask,\n    contractAddress: {\n      97: '',\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.06423',\n  },\n  {\n    sousId: 193,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7233',\n  },\n  {\n    sousId: 192,\n    stakingToken: tokens.cake,\n    earningToken: tokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.67129',\n  },\n  {\n    sousId: 191,\n    stakingToken: tokens.cake,\n    earningToken: tokens.adx,\n    contractAddress: {\n      97: '',\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7523',\n  },\n  {\n    sousId: 190,\n    stakingToken: tokens.cake,\n    earningToken: tokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '69.9074',\n  },\n  {\n    sousId: 189,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bscpad,\n    contractAddress: {\n      97: '',\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3877',\n  },\n  {\n    sousId: 188,\n    stakingToken: tokens.cake,\n    earningToken: tokens.rabbit,\n    contractAddress: {\n      97: '',\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.993',\n  },\n  {\n    sousId: 187,\n    stakingToken: tokens.cake,\n    earningToken: tokens.waultx,\n    contractAddress: {\n      97: '',\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '7.9108',\n  },\n  {\n    sousId: 186,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wex,\n    contractAddress: {\n      97: '',\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '11.574',\n  },\n  {\n    sousId: 185,\n    stakingToken: tokens.cake,\n    earningToken: tokens.form,\n    contractAddress: {\n      97: '',\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.4467',\n  },\n  {\n    sousId: 184,\n    stakingToken: tokens.cake,\n    earningToken: tokens.orbs,\n    contractAddress: {\n      97: '',\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.8946',\n  },\n  {\n    sousId: 183,\n    stakingToken: tokens.cake,\n    earningToken: tokens.$dg,\n    contractAddress: {\n      97: '',\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00135',\n  },\n  {\n    sousId: 182,\n    stakingToken: tokens.cake,\n    earningToken: tokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3854',\n  },\n  {\n    sousId: 181,\n    stakingToken: tokens.cake,\n    earningToken: tokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0003854',\n  },\n  {\n    sousId: 180,\n    stakingToken: tokens.cake,\n    earningToken: tokens.htb,\n    contractAddress: {\n      97: '',\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '5.2083',\n  },\n  {\n    sousId: 179,\n    stakingToken: tokens.cake,\n    earningToken: tokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1001',\n  },\n  {\n    sousId: 178,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 177,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hai,\n    contractAddress: {\n      97: '',\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.3078',\n  },\n  {\n    sousId: 176,\n    stakingToken: tokens.cake,\n    earningToken: tokens.o3,\n    contractAddress: {\n      97: '',\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.107638',\n  },\n  {\n    sousId: 175,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ampl,\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: tokens.cake,\n    earningToken: tokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: tokens.cake,\n    earningToken: tokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 429,\n    lpSymbol: 'CHESS-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\n    },\n    token: tokens.chess,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 428,\n    lpSymbol: 'TITAN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\n    },\n    token: tokens.titan,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 427,\n    lpSymbol: 'ONE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\n    },\n    token: tokens.harmony,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 426,\n    lpSymbol: 'MASK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\n    },\n    token: tokens.mask,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 425,\n    lpSymbol: 'DVI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\n    },\n    token: tokens.dvi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 424,\n    lpSymbol: 'ADX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\n    },\n    token: tokens.adx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 423,\n    lpSymbol: 'USDC-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.usdt,\n  },\n  {\n    pid: 422,\n    lpSymbol: 'CAKE-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.usdt,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 421,\n    lpSymbol: 'BSCPAD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n    },\n    token: tokens.bscpad,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 420,\n    lpSymbol: 'RABBIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n    },\n    token: tokens.rabbit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 419,\n    lpSymbol: 'WAULTx-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\n    },\n    token: tokens.waultx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 418,\n    lpSymbol: 'WEX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n    },\n    token: tokens.wex,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 417,\n    lpSymbol: 'FORM-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n    },\n    token: tokens.form,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 416,\n    lpSymbol: 'ORBS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n    },\n    token: tokens.orbs,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 415,\n    lpSymbol: 'DG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n    },\n    token: tokens.$dg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 414,\n    lpSymbol: 'WOO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n    },\n    token: tokens.woo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 413,\n    lpSymbol: 'HTB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n    },\n    token: tokens.htb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 412,\n    lpSymbol: 'HAI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n    },\n    token: tokens.hai,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n"],"sourceRoot":""}